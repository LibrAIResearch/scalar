{
  "title": "Graph Sparsification via Mixture of Graphs",
  "abstract": "Graph Neural Networks (GNNs) have demonstrated superior performance across\nvarious graph learning tasks but face significant computational challenges when\napplied to large-scale graphs. One effective approach to mitigate these\nchallenges is graph sparsification, which involves removing non-essential edges\nto reduce computational overhead. However, previous graph sparsification\nmethods often rely on a single global sparsity setting and uniform pruning\ncriteria, failing to provide customized sparsification schemes for each node's\ncomplex local context. In this paper, we introduce Mixture-of-Graphs (MoG),\nleveraging the concept of Mixture-of-Experts (MoE), to dynamically select\ntailored pruning solutions for each node. Specifically, MoG incorporates\nmultiple sparsifier experts, each characterized by unique sparsity levels and\npruning criteria, and selects the appropriate experts for each node.\nSubsequently, MoG performs a mixture of the sparse graphs produced by different\nexperts on the Grassmann manifold to derive an optimal sparse graph. One\nnotable property of MoG is its entirely local nature, as it depends on the\nspecific circumstances of each individual node. Extensive experiments on four\nlarge-scale OGB datasets and two superpixel datasets, equipped with five GNN\nbackbones, demonstrate that MoG (I) identifies subgraphs at higher sparsity\nlevels ($8.67\\%\\sim 50.85\\%$), with performance equal to or better than the\ndense graph, (II) achieves $1.47-2.62\\times$ speedup in GNN inference with\nnegligible performance drop, and (III) boosts ``top-student'' GNN performance\n($1.02\\%\\uparrow$ on RevGNN+\\textsc{ogbn-proteins} and $1.74\\%\\uparrow$ on\nDeeperGCN+\\textsc{ogbg-ppa}).",
  "paper_id": "http://arxiv.org/abs/2405.14260v2",
  "markdown_content": "# Graph Sparsification via Mixture of Graphs\n\nGuibin Zhang1, Xiangguo Sun211footnotemark: 1, Yanwei Yue1, Kun Wang3, Tianlong Chen4, Shirui Pan5\n\n1 Tongji University 2 The Chinese University of Hong Kong\n\n3 University of Science and Technology of China\n\n4 Massachusetts Institute of Technology 5 Griffith University\nThe first two authors contributed equally.\n\n###### Abstract\n\nGraph Neural Networks (GNNs) have demonstrated superior performance across various graph learning tasks but face significant computational challenges when applied to large-scale graphs. One effective approach to mitigate these challenges is graph sparsification, which involves removing non-essential edges to reduce computational overhead. However, previous graph sparsification methods often rely on a single global sparsity setting and uniform pruning criteria, failing to provide customized sparsification schemes for each node‚Äôs complex local context.\nIn this paper, we introduce Mixture-of-Graphs (MoG), leveraging the concept of Mixture-of-Experts (MoE), to dynamically select tailored pruning solutions for each node. Specifically, MoG incorporates multiple sparsifier experts, each characterized by unique sparsity levels and pruning criteria, and selects the appropriate experts for each node. Subsequently, MoG performs a mixture of the sparse graphs produced by different experts on the Grassmann manifold to derive an optimal sparse graph. One notable property of MoG is its entirely local nature, as it depends on the specific circumstances of each individual node. Extensive experiments on four large-scale OGB datasets and two superpixel datasets, equipped with five GNN backbones, demonstrate that MoG (I) identifies subgraphs at higher sparsity levels (8.67%‚àº50.85%similar-topercent8.67percent50.858.67\\\\%\\\\sim 50.85\\\\%), with performance equal to or better than the dense graph, (II) achieves 1.47‚àí2.62√ó1.47-2.62\\\\times speedup in GNN inference with negligible performance drop, and (III) boosts ‚Äútop-student‚Äù GNN performance (1.02%‚Üë‚Üëpercent1.02absent1.02\\\\%\\\\uparrow on RevGNN+ogbn-proteins and 1.74%‚Üë‚Üëpercent1.74absent1.74\\\\%\\\\uparrow on DeeperGCN+ogbg-ppa). The source code is\npublicly available at [https://github.com/yanweiyue/MoG](https://github.com/yanweiyue/MoG \"\").\n\n## 1 Introduction\n\nGraph Neural Networks (GNNs) \\[ [1](https://ar5iv.org/html/2405.14260#bib.bib1 \"\"), [2](https://ar5iv.org/html/2405.14260#bib.bib2 \"\")\\] have become prominent for confronting graph-related learning tasks, including social recommendation \\[ [3](https://ar5iv.org/html/2405.14260#bib.bib3 \"\"), [4](https://ar5iv.org/html/2405.14260#bib.bib4 \"\")\\], fraud detection \\[ [5](https://ar5iv.org/html/2405.14260#bib.bib5 \"\"), [6](https://ar5iv.org/html/2405.14260#bib.bib6 \"\"), [7](https://ar5iv.org/html/2405.14260#bib.bib7 \"\")\\], drug design \\[ [8](https://ar5iv.org/html/2405.14260#bib.bib8 \"\")\\], and many others \\[ [9](https://ar5iv.org/html/2405.14260#bib.bib9 \"\"), [10](https://ar5iv.org/html/2405.14260#bib.bib10 \"\")\\]. The superiority of GNNs stems from iterative _aggregation_ and _update_ processes. The former accumulates embeddings from neighboring nodes via sparse matrix-based operations (e.g., sparse-dense matrix multiplication (SpMM) and sampled dense-dense matrix multiplication (SDDMM) \\[ [11](https://ar5iv.org/html/2405.14260#bib.bib11 \"\"), [12](https://ar5iv.org/html/2405.14260#bib.bib12 \"\")\\]), and the latter updates the central nodes‚Äô embeddings using dense matrix-based operations (e.g., MatMul) \\[ [11](https://ar5iv.org/html/2405.14260#bib.bib11 \"\"), [12](https://ar5iv.org/html/2405.14260#bib.bib12 \"\")\\]. SpMM typically contributes the most substantial part (‚àºsimilar-to\\\\sim70%) to the computational demands \\[ [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\"), [14](https://ar5iv.org/html/2405.14260#bib.bib14 \"\")\\], influenced largely by the graph‚Äôs scale. Nevertheless, large-scale graphs are widespread in real-world scenarios \\[ [15](https://ar5iv.org/html/2405.14260#bib.bib15 \"\"), [16](https://ar5iv.org/html/2405.14260#bib.bib16 \"\"), [17](https://ar5iv.org/html/2405.14260#bib.bib17 \"\")\\], leading to substantial computational burdens, which hinder the efficient processing of features during the training and inference, posing headache barriers to deploying GNNs in the limited resources environments.\n\n![Refer to caption](https://ar5iv.org/html/2405.14260/assets/x1.png)Figure 1: (Left) We illustrated the kùëòk-hop neighborhood expansion rates for nodes 6 and 14, which is proportional to the amount of message they receive as the GNN layers deepen; (Middle) The local patterns of different nodes vary, hence the attributions of edge pruning may also differ. For instance, pruning (v1,v2)subscriptùë£1subscriptùë£2(v\\_{1},v\\_{2}) might be due to its non-bridge identity, while pruning (v5,v6)subscriptùë£5subscriptùë£6(v\\_{5},v\\_{6}) could be attributed to it non-homophilic nature; (Right) The overview of our proposed MoG.\n\nTo conquer the above challenge, graph sparsification \\[ [18](https://ar5iv.org/html/2405.14260#bib.bib18 \"\"), [19](https://ar5iv.org/html/2405.14260#bib.bib19 \"\")\\] has recently seen a revival as it directly reduces the aggregation process associated with SpMM\\[ [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\"), [14](https://ar5iv.org/html/2405.14260#bib.bib14 \"\")\\] in GNNs. Specifically, graph sparsification is a technique that approximates a given graph by creating a sparse subgraph with a subset of vertices and/or edges. Since the execution time of SpMM is directly related to the number of edges in the graph, this method can significantly accelerate GNN training or inference. Existing efforts such as UGS \\[ [20](https://ar5iv.org/html/2405.14260#bib.bib20 \"\")\\], DSpar \\[ [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\")\\], and AdaGLT \\[ [21](https://ar5iv.org/html/2405.14260#bib.bib21 \"\")\\] have achieved notable successes, with some maintaining GNN performance even with up to 40% edge sparsity.\n\nBeyond serving as a computational accelerator, the purpose of graph sparsification extends further. Another research line leverages graph sparsification as a performance booster to remove task-irrelevant edges and pursue highly performant and robust GNNs \\[ [22](https://ar5iv.org/html/2405.14260#bib.bib22 \"\")\\]. Specifically, it is argued that due to uncertainty and complexity in data collection, graph structures are inevitably redundant, biased, and noisy \\[ [23](https://ar5iv.org/html/2405.14260#bib.bib23 \"\")\\]. Therefore, employing graph sparsification can effectively facilitate the evolution of graph structures towards cleaner conditions \\[ [22](https://ar5iv.org/html/2405.14260#bib.bib22 \"\"), [24](https://ar5iv.org/html/2405.14260#bib.bib24 \"\")\\], and finally boost GNN performance.\n\nHowever, existing sparsification methods, namely sparsifiers, whether aimed at achieving higher sparsity or seeking enhanced performance, often adopt a rigid, global approach to conduct graph sparsification, thus suffering from the inflexibility in two aspects:\n\n- ‚ù∂\n\n\nInflexibility of sparsity level. Previous sparsifiers globally score all edges uniformly and prune them based on a preset sparsity level \\[ [18](https://ar5iv.org/html/2405.14260#bib.bib18 \"\")\\]. However, as shown in [Figure1](https://ar5iv.org/html/2405.14260#S1.F1 \"In 1 Introduction ‚Ä£ Graph Sparsification via Mixture of Graphs\") (Left), the degrees of different nodes vary, which leads to varying rates of kùëòk-hop neighborhood expansion. This phenomenon, along with prior work on node-wise aggregation \\[ [25](https://ar5iv.org/html/2405.14260#bib.bib25 \"\"), [26](https://ar5iv.org/html/2405.14260#bib.bib26 \"\")\\], suggests that different nodes require customized sparsity levels tailored to their specific connectivity and local patterns.\n\n- ‚ù∑\n\n\nInflexibility of sparsity criteria. Previous sparsifiers often operate under a unified guiding principle, such as pruning non-bridge edges \\[ [27](https://ar5iv.org/html/2405.14260#bib.bib27 \"\")\\], non-homophilic edges \\[ [28](https://ar5iv.org/html/2405.14260#bib.bib28 \"\")\\], or edges with low effective resistance \\[ [29](https://ar5iv.org/html/2405.14260#bib.bib29 \"\"), [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\")\\], among others. However, as illustrated in [Figure1](https://ar5iv.org/html/2405.14260#S1.F1 \"In 1 Introduction ‚Ä£ Graph Sparsification via Mixture of Graphs\") (Middle), the context of different nodes varies significantly, leading to varied rationales for edge pruning. Therefore, it is essential to select appropriate pruning criteria tailored to the specific circumstances of each node to customize the pruning process effectively.\n\n\nBased on these observations and reflections, we propose the following challenge: Can we customize the sparsity level and pruning criteria for each node, in the meanwhile ensuring the efficiency of graph sparsification? Towards this end, we propose a novel graph sparsifier dubbed Mixture of Graphs (MoG). It comprises multiple sparsifier experts, each equipped with distinct pruning criteria and sparsity settings, as in [Figure1](https://ar5iv.org/html/2405.14260#S1.F1 \"In 1 Introduction ‚Ä£ Graph Sparsification via Mixture of Graphs\") (Right). Throughout the training process, MoG dynamically selects the most suitable sparsifier expert for each node based on its neighborhood properties. This fosters specialization within each MoG expert, focusing on specific subsets of nodes with similar neighborhood contexts.\nAfter each selected expert prunes the 1-hop subgraph of the central nodes and outputs its sparse version, MoG seamlessly integrates these sparse subgraphs on the Grassmann manifold in an expert-weighted manner, thereby forming an optimized sparse graph.\n\nWe validate the effectiveness of MoG across six datasets and three GNN backbones, and show that MoG can ‚ù∂ effectively locate well-performing sparse graphs, maintaining GNN performance losslessly at satisfactory sparsity levels (8.67%‚àº50.85%similar-topercent8.67percent50.858.67\\\\%\\\\sim 50.85\\\\%), and even only experiencing a 1.65%percent1.651.65\\\\% accuracy drop at 69.13%percent69.1369.13\\\\% sparsity on ogbn-proteins; ‚ù∑ achieve a tangible 1.47‚àº2.62√ó1.47\\\\sim 2.62\\\\times inference speedup with negligible performance drop; and ‚ù∏ boost ROC-AUC by 1.81%percent1.811.81\\\\% on ogbg-molhiv, 1.02%percent1.021.02\\\\% on ogbn-proteins and enhances accuracy by 0.95%percent0.950.95\\\\% on ogbn-arxiv.\n\n## 2 Technical Backgound\n\n#### Notations & Problem Formulation\n\nWe consider an undirected graph ùí¢={ùí±,‚Ñ∞}ùí¢ùí±‚Ñ∞\\\\mathcal{G}=\\\\{\\\\mathcal{V},\\\\mathcal{E}\\\\}, with ùí±ùí±\\\\mathcal{V} as the node set and ‚Ñ∞‚Ñ∞\\\\mathcal{E} the edge set. The node features of ùí¢ùí¢\\\\mathcal{G} is represented as ùêó‚àà‚ÑùN√óFùêósuperscript‚ÑùùëÅùêπ\\\\mathbf{X}\\\\in\\\\mathbb{R}^{N\\\\times F}, where N=\\|ùí±\\|ùëÅùí±N=\\|\\\\mathcal{V}\\| signifies the total number of nodes in the graph. The feature vector for each node vi‚ààùí±subscriptùë£ùëñùí±v\\_{i}\\\\in\\\\mathcal{V}, with FùêπF dimensions, is denoted by xi=ùêó‚Äã\\[i,‚ãÖ\\]subscriptùë•ùëñùêóùëñ‚ãÖx\\_{i}=\\\\mathbf{X}\\[i,\\\\cdot\\]. An adjacency matrix ùêÄ‚àà{0,1}N√óNùêÄsuperscript01ùëÅùëÅ\\\\mathbf{A}\\\\in\\\\{0,1\\\\}^{N\\\\times N} is utilized to depict the inter-node connectivity, where ùêÄ‚Äã\\[i,j\\]=1ùêÄùëñùëó1\\\\mathbf{A}\\[i,j\\]=1 indicates an edge ei‚Äãj‚àà‚Ñ∞subscriptùëíùëñùëó‚Ñ∞e\\_{ij}\\\\in\\\\mathcal{E}, and 00 otherwise. For our task of graph sparsification, the core objective is to identify a subgraph ùí¢subsubscriptùí¢sub\\\\mathcal{G}\\_{\\\\text{sub}} given a sparsity ratio s%percentùë†s\\\\%:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùí¢sub={ùí±,‚Ñ∞‚àñ‚Ñ∞‚Ä≤},s%=\\|‚Ñ∞‚Ä≤\\|\\|‚Ñ∞\\|,formulae-sequencesuperscriptùí¢subùí±‚Ñ∞superscript‚Ñ∞‚Ä≤percentùë†superscript‚Ñ∞‚Ä≤‚Ñ∞\\\\mathcal{G}^{\\\\text{sub}}=\\\\{\\\\mathcal{V},\\\\mathcal{E}\\\\setminus\\\\mathcal{E}^{\\\\prime}\\\\},\\\\;s\\\\%=\\\\frac{\\|\\\\mathcal{E}^{\\\\prime}\\|}{\\|\\\\mathcal{E}\\|}, |  | (1) |\n\nwhere ùí¢subsuperscriptùí¢sub\\\\mathcal{G}^{\\\\text{sub}} only modifies the edge set ‚Ñ∞‚Ñ∞\\\\mathcal{E} without altering the node set ùí±ùí±\\\\mathcal{V}, and ‚Ñ∞‚Ä≤superscript‚Ñ∞‚Ä≤\\\\mathcal{E}^{\\\\prime} denotes the removed edges, and s%percentùë†s\\\\% represents the ratio of removed edges.\n\n#### Graph Neural Networks\n\nGraph neural networks (GNNs) \\[ [30](https://ar5iv.org/html/2405.14260#bib.bib30 \"\")\\] have become pivotal for learning graph representations, achieving benchmark performances in various graph tasks at node-level \\[ [31](https://ar5iv.org/html/2405.14260#bib.bib31 \"\")\\], edge-level \\[ [32](https://ar5iv.org/html/2405.14260#bib.bib32 \"\")\\], and graph-level \\[ [33](https://ar5iv.org/html/2405.14260#bib.bib33 \"\")\\]. At the node-level, two of the most famous frameworks are GCN \\[ [34](https://ar5iv.org/html/2405.14260#bib.bib34 \"\")\\] and GraphSAGE \\[ [35](https://ar5iv.org/html/2405.14260#bib.bib35 \"\")\\], which leverages the message-passing neural network (MPNN) framework \\[ [36](https://ar5iv.org/html/2405.14260#bib.bib36 \"\")\\] to aggregate and update node information iteratively. For edge-level and graph-level tasks, GCN and GraphSAGE can be adapted by simply incorporating a predictor head or pooling layers. Nevertheless, there are still specialized frameworks like SEAL \\[ [37](https://ar5iv.org/html/2405.14260#bib.bib37 \"\")\\] and Neo-GNN \\[ [38](https://ar5iv.org/html/2405.14260#bib.bib38 \"\")\\] for link prediction, and DiffPool \\[ [39](https://ar5iv.org/html/2405.14260#bib.bib39 \"\")\\] and PNA \\[ [40](https://ar5iv.org/html/2405.14260#bib.bib40 \"\")\\] for graph classification. Regardless of the task, MPNN-style GNNs generally adhere to the following paradigm:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùê°i(l)=COMB‚Äã(ùê°i(l‚àí1),AGGR‚Äã{ùê°j(k‚àí1):vj‚ààùí©‚Äã(vi)}),‚ÄÑ0‚â§l‚â§Lformulae-sequencesuperscriptsubscriptùê°ùëñùëôCOMBsuperscriptsubscriptùê°ùëñùëô1AGGRconditional-setsuperscriptsubscriptùê°ùëóùëò1subscriptùë£ùëóùí©subscriptùë£ùëñ‚ÄÑ0ùëôùêø\\\\mathbf{h}\\_{i}^{(l)}=\\\\text{{COMB}}\\\\left(\\\\mathbf{h}\\_{i}^{(l-1)},\\\\text{{AGGR}}\\\\{\\\\mathbf{h}\\_{j}^{(k-1)}:v\\_{j}\\\\in\\\\mathcal{N}(v\\_{i})\\\\}\\\\right),\\\\;0\\\\leq l\\\\leq L |  | (2) |\n\nwhere LùêøL is the number of GNN layers, ùê°i(0)=ùê±isuperscriptsubscriptùê°ùëñ0subscriptùê±ùëñ\\\\mathbf{h}\\_{i}^{(0)}=\\\\mathbf{x}\\_{i}, and ùê°i(l)‚Äã(1‚â§l‚â§L)superscriptsubscriptùê°ùëñùëô1ùëôùêø\\\\mathbf{h}\\_{i}^{(l)}(1\\\\leq l\\\\leq L) denotes visubscriptùë£ùëñv\\_{i}‚Äôs node embedding at the lùëôl-th layer. AGGR(‚ãÖ‚ãÖ\\\\cdot) and COMB(‚ãÖ‚ãÖ\\\\cdot) represent functions used for aggregating neighborhood information and combining ego- and neighbor-representations, respectively.\n\n#### Graph Sparsification\n\nGraph sparsification methods can be categorized by their utility into two main types: computational accelerators and performance boosters. Regarding computational accelerators, early works aimed at speeding up traditional tasks like graph partitioning/clustering often provide theoretical assurances for specific graph properties, such as pairwise distances \\[ [41](https://ar5iv.org/html/2405.14260#bib.bib41 \"\")\\], cuts \\[ [42](https://ar5iv.org/html/2405.14260#bib.bib42 \"\")\\], eigenvalue distribution \\[ [43](https://ar5iv.org/html/2405.14260#bib.bib43 \"\")\\], and effective resistance \\[ [29](https://ar5iv.org/html/2405.14260#bib.bib29 \"\")\\].\nMore contemporary efforts focus on the GNN training and/or inference acceleration, including methods like SGCN \\[ [44](https://ar5iv.org/html/2405.14260#bib.bib44 \"\")\\], GEBT \\[ [45](https://ar5iv.org/html/2405.14260#bib.bib45 \"\")\\], UGS \\[ [20](https://ar5iv.org/html/2405.14260#bib.bib20 \"\")\\], DSpar \\[ [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\")\\], and AdaGLT \\[ [17](https://ar5iv.org/html/2405.14260#bib.bib17 \"\")\\]. Regarding performance boosters, methods like NeuralSparse \\[ [22](https://ar5iv.org/html/2405.14260#bib.bib22 \"\")\\] and PTDNet \\[ [24](https://ar5iv.org/html/2405.14260#bib.bib24 \"\")\\] utilize parameterized denoising networks to eliminate task-irrelevant edges. SUBLIME \\[ [46](https://ar5iv.org/html/2405.14260#bib.bib46 \"\")\\] and Nodeformer \\[ [47](https://ar5iv.org/html/2405.14260#bib.bib47 \"\")\\] also involve refining or inferring a cleaner graph structure followed by kùëòk-nearest neighbors (kùëòkNN) sparsification.\n\n#### Mixture of Experts\n\nThe Mixture of Experts (MoE) concept \\[ [48](https://ar5iv.org/html/2405.14260#bib.bib48 \"\")\\] traces its origins to several seminal works \\[ [49](https://ar5iv.org/html/2405.14260#bib.bib49 \"\"), [50](https://ar5iv.org/html/2405.14260#bib.bib50 \"\")\\]. Recently, the sparse MoE architecture \\[ [51](https://ar5iv.org/html/2405.14260#bib.bib51 \"\"), [52](https://ar5iv.org/html/2405.14260#bib.bib52 \"\"), [53](https://ar5iv.org/html/2405.14260#bib.bib53 \"\"), [54](https://ar5iv.org/html/2405.14260#bib.bib54 \"\"), [55](https://ar5iv.org/html/2405.14260#bib.bib55 \"\")\\] has regained attention due to its capacity to support the creation of vast (language) models with trillions of parameters \\[ [54](https://ar5iv.org/html/2405.14260#bib.bib54 \"\"), [56](https://ar5iv.org/html/2405.14260#bib.bib56 \"\")\\]. Given its stability and generalizability, sparse MoE is now broadly implemented in modern frameworks across various domains, including vision \\[ [57](https://ar5iv.org/html/2405.14260#bib.bib57 \"\")\\], multi-modal \\[ [58](https://ar5iv.org/html/2405.14260#bib.bib58 \"\")\\], and multi-task learning \\[ [59](https://ar5iv.org/html/2405.14260#bib.bib59 \"\"), [60](https://ar5iv.org/html/2405.14260#bib.bib60 \"\")\\]. As for graph learning, MoE has been explored for applications in graph classification \\[ [61](https://ar5iv.org/html/2405.14260#bib.bib61 \"\")\\], scene graph generation \\[ [62](https://ar5iv.org/html/2405.14260#bib.bib62 \"\")\\], molecular representation \\[ [63](https://ar5iv.org/html/2405.14260#bib.bib63 \"\")\\], graph fairness \\[ [64](https://ar5iv.org/html/2405.14260#bib.bib64 \"\")\\], and graph diversity modeling \\[ [65](https://ar5iv.org/html/2405.14260#bib.bib65 \"\")\\].\n\n## 3 Methodology\n\n### 3.1 Overview\n\n[Figure2](https://ar5iv.org/html/2405.14260#S3.F2 \"In 3.1 Overview ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") illustrates the workflow of our proposed MoG. Specifically, for an input graph, MoG first decomposes it into 1-hop ego graphs for each node. For each node and its corresponding ego graph, a routing network calculates the expert scores. Based on the router‚Äôs decisions, sparsifier experts with different sparsity levels and pruning criteria are allocated to different nodes. Ultimately, a mixture of graphs is obtained based on the weighted consensus of the sparsifier experts. In the following sections, we will first detail how to route different sparsifiers in [Section3.2](https://ar5iv.org/html/2405.14260#S3.SS2 \"3.2 Routing to Diverse Experts ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"), then describe how to explicitly model various sparsifier experts in [Section3.3](https://ar5iv.org/html/2405.14260#S3.SS3 \"3.3 Customized Sparsifier Modeling ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") and how to ensemble the sparse graphs output by sparsifiers on the Grassmann manifold in [Section3.4](https://ar5iv.org/html/2405.14260#S3.SS4 \"3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"). Finally, the overall optimization process and complexity analysis of MoG is placed in [Section3.5](https://ar5iv.org/html/2405.14260#S3.SS5 \"3.5 Training and Optimization ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\n![Refer to caption](https://ar5iv.org/html/2405.14260/assets/x2.png)Figure 2: The overview of our proposed method. MoG primarily comprises ego-graph decomposition, expert routing, sparsifier customization, and the final graph mixture. For simplicity, we only showcase three pruning criteria including Jaccard similarity, gradient magnitude, and effective resistance.\n\n### 3.2 Routing to Diverse Experts\n\nFollowing the classic concept of a (sparsely-gated) mixture-of-experts \\[ [66](https://ar5iv.org/html/2405.14260#bib.bib66 \"\")\\], which assigns the most suitable expert(s) to each input sample, MoG aims to allocate the most appropriate sparsity level and pruning criteria to each input node. To achieve this, we first decompose the input graph ùí¢={ùí±,‚Ñ∞}ùí¢ùí±‚Ñ∞\\\\mathcal{G}=\\\\{\\\\mathcal{V},\\\\mathcal{E}\\\\} into 1-hop ego graphs centered on different nodes, denoted as {ùí¢(1),ùí¢(2),‚ãØ,ùí¢(N)}superscriptùí¢1superscriptùí¢2‚ãØsuperscriptùí¢ùëÅ\\\\{\\\\mathcal{G}^{(1)},\\\\mathcal{G}^{(2)},\\\\cdots,\\\\mathcal{G}^{(N)}\\\\}, where ùí¢(i)={ùí±(i),‚Ñ∞(i)}superscriptùí¢ùëñsuperscriptùí±ùëñsuperscript‚Ñ∞ùëñ\\\\mathcal{G}^{(i)}=\\\\{\\\\mathcal{V}^{(i)},\\\\mathcal{E}^{(i)}\\\\}, ùí±(i)={vj\\|vj‚ààùí©‚Äã(vi)}superscriptùí±ùëñconditional-setsubscriptùë£ùëósubscriptùë£ùëóùí©subscriptùë£ùëñ\\\\mathcal{V}^{(i)}=\\\\{v\\_{j}\\|v\\_{j}\\\\in\\\\mathcal{N}(v\\_{i})\\\\}, and ‚Ñ∞(i)={ei‚Äãj\\|(vi,vj)‚àà‚Ñ∞}superscript‚Ñ∞ùëñconditional-setsubscriptùëíùëñùëósubscriptùë£ùëñsubscriptùë£ùëó‚Ñ∞\\\\mathcal{E}^{(i)}=\\\\{e\\_{ij}\\|(v\\_{i},v\\_{j})\\\\in\\\\mathcal{E}\\\\}. Assuming we have KùêæK sparsifier experts, for each node visubscriptùë£ùëñv\\_{i} and its corresponding ego graph ùí¢(i)superscriptùí¢ùëñ\\\\mathcal{G}^{(i)}, we aim to select the kùëòk most suitable sparsifiers. We employ the classic noisy top-kùëòk gating mechanism following \\[ [51](https://ar5iv.org/html/2405.14260#bib.bib51 \"\")\\]:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Œ®‚Äã(ùí¢(i))=Softmax‚Å°(TopK‚Å°(œà‚Äã(xi),k)),Œ®superscriptùí¢ùëñSoftmaxTopKùúìsubscriptùë•ùëñùëò\\\\displaystyle\\\\Psi(\\\\mathcal{G}^{(i)})=\\\\operatorname{Softmax}(\\\\operatorname{TopK}(\\\\psi(x\\_{i}),k)), |  | (3) |\n|  | œà‚Äã(xi)=xi‚ÄãWg+œµ‚ãÖSoftplus‚Å°(xi‚ÄãWn),ùúìsubscriptùë•ùëñsubscriptùë•ùëñsubscriptùëäùëî‚ãÖitalic-œµSoftplussubscriptùë•ùëñsubscriptùëäùëõ\\\\displaystyle\\\\psi(x\\_{i})=x\\_{i}W\\_{g}+\\\\epsilon\\\\cdot\\\\operatorname{Softplus}(x\\_{i}W\\_{n}), |  | (4) |\n\nwhere œà‚Äã(xi)‚àà‚ÑùKùúìsubscriptùë•ùëñsuperscript‚Ñùùêæ\\\\psi(x\\_{i})\\\\in\\\\mathbb{R}^{K} is the calculated scores of visubscriptùë£ùëñv\\_{i} for total KùêæK experts, TopK‚Å°(‚ãÖ)TopK‚ãÖ\\\\operatorname{TopK}(\\\\cdot) is a selection function that outputs the largest kùëòk\nvalues, and Œ®‚Äã(ùí¢(i))‚àà‚Ñùk=\\[E1(i),E2(i),‚ãØ,Ek(i)\\]Œ®superscriptùí¢ùëñsuperscript‚Ñùùëòsubscriptsuperscriptùê∏ùëñ1subscriptsuperscriptùê∏ùëñ2‚ãØsubscriptsuperscriptùê∏ùëñùëò\\\\Psi(\\\\mathcal{G}^{(i)})\\\\in\\\\mathbb{R}^{k}=\\[E^{(i)}\\_{1},E^{(i)}\\_{2},\\\\cdots,E^{(i)}\\_{k}\\] represents those for selected kùëòk experts. In Œ®‚Äã(ùí¢(i))Œ®superscriptùí¢ùëñ\\\\Psi(\\\\mathcal{G}^{(i)}), œµ‚ààùí©‚Äã(0,1)italic-œµùí©01\\\\epsilon\\\\in\\\\mathcal{N}(0,1) denotes the standard Gaussian noise, Wg‚àà‚ÑùK√óFsubscriptùëäùëîsuperscript‚ÑùùêæùêπW\\_{g}\\\\in\\\\mathbb{R}^{K\\\\times F} and Wn‚àà‚ÑùK√óFsubscriptùëäùëõsuperscript‚ÑùùêæùêπW\\_{n}\\\\in\\\\mathbb{R}^{K\\\\times F} are trainable parameters that learn clean and noisy scores, respectively.\n\nAfter determining the appropriate experts, we proceed to generate different sparse graphs with diverse sparsifiers. We denote each sparsifier by Œ∫‚Äã(‚ãÖ)ùúÖ‚ãÖ\\\\kappa(\\\\cdot), which takes in a dense graph ùí¢ùí¢\\\\mathcal{G} and outputs a sparse one ùí¢~=Œ∫‚Äã(ùí¢)~ùí¢ùúÖùí¢\\\\tilde{\\\\mathcal{G}}=\\\\kappa(\\\\mathcal{G}). Based on this, for each node visubscriptùë£ùëñv\\_{i} and its ego graph ùí¢(i)superscriptùí¢ùëñ\\\\mathcal{G}^{(i)}, the routing network selects kùëòk experts that produce kùëòk sparse ego graphs. Notably, sparsifiers differ in their pruning rates (i.e. the proportion of the edges to be removed) and the pruning criteria, which will be detailed in [Section3.3](https://ar5iv.org/html/2405.14260#S3.SS3 \"3.3 Customized Sparsifier Modeling ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"). MoG‚Äôs dynamic selection of different sparsifiers for each node aids in identifying pruning strategies truly adapted to the node‚Äôs local context. Formally, the mixture of kùëòk sparse graphs can be written as:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùí¢(i)^=ESMB‚Äã({ùí¢~m(i)}m=1k),ùí¢~m(i)=Œ∫m‚Äã(ùí¢(i)),formulae-sequence^superscriptùí¢ùëñESMBsuperscriptsubscriptsubscriptsuperscript~ùí¢ùëñùëöùëö1ùëòsubscriptsuperscript~ùí¢ùëñùëösuperscriptùúÖùëösuperscriptùí¢ùëñ\\\\widehat{\\\\mathcal{G}^{(i)}}=\\\\text{{ESMB}}(\\\\{\\\\widetilde{\\\\mathcal{G}}^{(i)}\\_{m}\\\\}\\_{m=1}^{k}),\\\\;\\\\;\\\\widetilde{\\\\mathcal{G}}^{(i)}\\_{m}=\\\\kappa^{m}(\\\\mathcal{G}^{(i)}), |  | (5) |\n\nwhere ESMB‚Äã(‚ãÖ)ESMB‚ãÖ\\\\text{{ESMB}}(\\\\cdot) is a combination function that receives kùëòk sparse graphs and ideally outputs an emsemble version ùí¢(i)^={ùí±(i)^,‚Ñ∞(i)^}^superscriptùí¢ùëñ^superscriptùí±ùëñ^superscript‚Ñ∞ùëñ\\\\widehat{\\\\mathcal{G}^{(i)}}=\\\\{\\\\widehat{\\\\mathcal{V}^{(i)}},\\\\widehat{\\\\mathcal{E}^{(i)}}\\\\} that preserves their desirable properties.\nIt is noteworthy that, MoG can seamlessly integrate with any GNN backbone after obtaining each node‚Äôs sparse ego graph. Specifically, we modify the aggregation method in [Equation2](https://ar5iv.org/html/2405.14260#S2.E2 \"In Graph Neural Networks ‚Ä£ 2 Technical Backgound ‚Ä£ Graph Sparsification via Mixture of Graphs\") as follows:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùê°i(l)=COMB‚Äã(ùê°i(l‚àí1),AGGR‚Äã{ùê°j(k‚àí1):vj‚ààùí±(i)^}).superscriptsubscriptùê°ùëñùëôCOMBsuperscriptsubscriptùê°ùëñùëô1AGGRconditional-setsuperscriptsubscriptùê°ùëóùëò1subscriptùë£ùëó^superscriptùí±ùëñ\\\\mathbf{h}\\_{i}^{(l)}=\\\\text{{COMB}}\\\\left(\\\\mathbf{h}\\_{i}^{(l-1)},\\\\text{{AGGR}}\\\\{\\\\mathbf{h}\\_{j}^{(k-1)}:v\\_{j}\\\\in\\\\widehat{\\\\mathcal{V}^{(i)}}\\\\}\\\\right). |  | (6) |\n\nMoG acts as a plug-and-play module that can be pre-attached to any GNN architecture, leveraging multi-expert sparsification to enhance GNNs with (1) performance improvements from removing task-irrelevant edges (validated in [Section4.3](https://ar5iv.org/html/2405.14260#S4.SS3 \"4.3 MoG as Performance Booster ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\")); (2) resistance to high graph sparsity through precise and customized sparsification (validated in [Section4.2](https://ar5iv.org/html/2405.14260#S4.SS2 \"4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\")). The remaining questions now are: how can we design explicitly different sparsifiers? and further, how can we develop an effective combination function that integrates the sparse graphs from different experts?\n\n### 3.3 Customized Sparsifier Modeling\n\nWith the workflow of MoG in mind, in this section, we will delve into how to design sparsifiers driven by various pruning criteria and different levels of sparsity. Revisiting graph-related learning tasks, their objective can generally be considered as learning P‚Äã(ùêò\\|ùí¢)ùëÉconditionalùêòùí¢P(\\\\mathbf{Y}\\|\\\\mathcal{G}), which means learning the distribution of the target ùêòùêò\\\\mathbf{Y} given an input graph. Based on this, a sparsifier Œ∫‚Äã(‚ãÖ)ùúÖ‚ãÖ\\\\kappa(\\\\cdot) can be formally expressed as follows:\n\n|     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- |\n|  | P‚Äã(ùêò\\|ùí¢)ùëÉconditionalùêòùí¢\\\\displaystyle P(\\\\mathbf{Y}\\|\\\\mathcal{G}) | ‚âà‚àëg‚ààùïäùí¢P‚Äã(ùêò\\|ùí¢~)‚ÄãP‚Äã(ùí¢~\\|ùí¢)absentsubscriptùëîsubscriptùïäùí¢ùëÉconditionalùêò~ùí¢ùëÉconditional~ùí¢ùí¢\\\\displaystyle\\\\approx\\\\sum\\_{g\\\\in\\\\mathbb{S}\\_{\\\\mathcal{G}}}P(\\\\mathbf{Y}\\\\;\\|\\\\;\\\\tilde{\\\\mathcal{G}})P(\\\\tilde{\\\\mathcal{G}}\\\\;\\|\\\\;\\\\mathcal{G}) | ‚âà‚àëg‚ààùïäùí¢QŒò‚Äã(ùêò\\|ùí¢~)‚ÄãQŒ∫‚Äã(ùí¢~\\|ùí¢)absentsubscriptùëîsubscriptùïäùí¢subscriptùëÑŒòconditionalùêò~ùí¢subscriptùëÑùúÖconditional~ùí¢ùí¢\\\\displaystyle\\\\approx\\\\sum\\_{g\\\\in\\\\mathbb{S}\\_{\\\\mathcal{G}}}Q\\_{\\\\Theta}(\\\\mathbf{Y}\\\\;\\|\\\\;\\\\tilde{\\\\mathcal{G}})Q\\_{\\\\kappa}(\\\\tilde{\\\\mathcal{G}}\\\\;\\|\\\\;\\\\mathcal{G}) |  | (7) |\n\nwhere ùïäùí¢subscriptùïäùí¢\\\\mathbb{S}\\_{\\\\mathcal{G}} is a class of sparsified subgraphs of ùí¢ùí¢\\\\mathcal{G}. The second term in [Equation7](https://ar5iv.org/html/2405.14260#S3.E7 \"In 3.3 Customized Sparsifier Modeling ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") aims to approximate the distribution of ùêòùêò\\\\mathbf{Y} using the sparsified graph ùí¢~~ùí¢\\\\tilde{\\\\mathcal{G}} as a bottleneck, while the third term uses two approximation functions QŒòsubscriptùëÑŒòQ\\_{\\\\Theta} and QŒ∫subscriptùëÑùúÖQ\\_{\\\\kappa} for P‚Äã(ùêò\\|ùí¢~)ùëÉconditionalùêò~ùí¢P(\\\\mathbf{Y}\\\\;\\|\\\\;\\\\tilde{\\\\mathcal{G}}) and P‚Äã(ùí¢~\\|ùí¢)ùëÉconditional~ùí¢ùí¢P(\\\\tilde{\\\\mathcal{G}}\\\\;\\|\\\\;\\\\mathcal{G}) parameterized by ŒòŒò\\\\Theta and Œ∫ùúÖ\\\\kappa respectively. The parameter ŒòŒò\\\\Theta typically refers to the parameters of the GNN, while the sparsifier Œ∫‚Äã(‚ãÖ)ùúÖ‚ãÖ\\\\kappa(\\\\cdot), on the other hand, is crafted to take an ego graph ùí¢(i)superscriptùí¢ùëñ\\\\mathcal{G}^{(i)} and output its sparsified version ùí¢(i)~~superscriptùí¢ùëñ\\\\tilde{\\\\mathcal{G}^{(i)}}, guided by a specific pruning paradigm Cùê∂C and sparsity sm%percentsuperscriptùë†ùëös^{m}\\\\%:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Œ∫m‚Äã(ùí¢(i))={ùí±(i),‚Ñ∞(i)‚àñ‚Ñ∞p(i)},‚Ñ∞p(i)=TopK‚Å°(‚àíCm‚Äã(‚Ñ∞),‚åà\\|‚Ñ∞(i)\\|√ósm%‚åâ),formulae-sequencesuperscriptùúÖùëösuperscriptùí¢ùëñsuperscriptùí±ùëñsuperscript‚Ñ∞ùëñsuperscriptsubscript‚Ñ∞ùëùùëñsuperscriptsubscript‚Ñ∞ùëùùëñTopKsuperscriptùê∂ùëö‚Ñ∞superscript‚Ñ∞ùëñpercentsuperscriptùë†ùëö\\\\kappa^{m}(\\\\mathcal{G}^{(i)})=\\\\{\\\\mathcal{V}^{(i)},\\\\mathcal{E}^{(i)}\\\\setminus\\\\mathcal{E}\\_{p}^{(i)}\\\\},\\\\;\\\\mathcal{E}\\_{p}^{(i)}=\\\\operatorname{TopK}\\\\left(-C^{m}(\\\\mathcal{E}),\\\\lceil\\|\\\\mathcal{E}^{(i)}\\|\\\\times s^{m}\\\\%\\\\rceil\\\\right), |  | (8) |\n\nwhere Cm‚Äã(‚ãÖ)superscriptùê∂ùëö‚ãÖC^{m}(\\\\cdot) acts as the mùëöm-th expert‚Äôs scoring function that evaluates edge importance. We leverage long-tail gradient estimation \\[ [67](https://ar5iv.org/html/2405.14260#bib.bib67 \"\")\\] to ensure the TopK‚Å°(‚ãÖ)TopK‚ãÖ\\\\operatorname{TopK}(\\\\cdot) operator is differentiable. Furthermore, to ensure the sparsifier is driven by different sparsity criteria, we implement Cm‚Äã(‚ãÖ)superscriptùê∂ùëö‚ãÖC^{m}(\\\\cdot) as follows:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Cm‚Äã(ei‚Äãj)=FFN‚Å°(xi,xj,c‚Äã(ei‚Äãj)),cm‚Äã(ei‚Äãj)‚àà{Degree: ‚Äã(\\|ùí©‚Äã(vi)+ùí©‚Äã(vj)\\|)/2Jaccard Similarity: ‚Äã\\|ùí©‚Äã(vi)‚à©ùí©‚Äã(vj)\\|\\|ùí©‚Äã(vi)‚à™ùí©‚Äã(vj)\\|ER: ‚Äã(ei‚àíej)T‚Äãùêã‚àí1‚Äã(ei‚àíej)Gradient Magnitude: ‚Äã\\|‚àÇ‚Ñí/‚àÇei‚Äãj\\|},formulae-sequencesuperscriptùê∂ùëösubscriptùëíùëñùëóFFNsubscriptùë•ùëñsubscriptùë•ùëóùëêsubscriptùëíùëñùëósuperscriptùëêùëösubscriptùëíùëñùëóDegree: ùí©subscriptùë£ùëñùí©subscriptùë£ùëó2Jaccard Similarity: ùí©subscriptùë£ùëñùí©subscriptùë£ùëóùí©subscriptùë£ùëñùí©subscriptùë£ùëóER: superscriptsubscriptùëíùëñsubscriptùëíùëóùëásuperscriptùêã1subscriptùëíùëñsubscriptùëíùëóGradient Magnitude: ‚Ñísubscriptùëíùëñùëó\\\\displaystyle C^{m}(e\\_{ij})=\\\\operatorname{FFN}\\\\left(x\\_{i},x\\_{j},c(e\\_{ij})\\\\right),\\\\;c^{m}(e\\_{ij})\\\\in\\\\left\\\\{\\\\begin{array}\\[\\]{c}\\\\text{Degree: }\\\\left(\\|\\\\mathcal{N}(v\\_{i})+\\\\mathcal{N}(v\\_{j})\\|\\\\right)/2\\\\\\<br>\\\\text{Jaccard Similarity: }\\\\frac{\\|\\\\mathcal{N}(v\\_{i})\\\\cap\\\\mathcal{N}(v\\_{j})\\|}{\\|\\\\mathcal{N}(v\\_{i})\\\\cup\\\\mathcal{N}(v\\_{j})\\|}\\\\\\<br>\\\\text{ER: }(e\\_{i}-e\\_{j})^{T}\\\\mathbf{L}^{-1}(e\\_{i}-e\\_{j})\\\\\\<br>\\\\text{Gradient Magnitude: }\\|\\\\partial\\\\mathcal{L}/\\\\partial e\\_{ij}\\|\\\\end{array}\\\\right\\\\}, |  | (9) |\n\nwhere FFN‚Å°(‚ãÖ)FFN‚ãÖ\\\\operatorname{FFN}(\\\\cdot) is a feed-forward network, cm‚Äã(ei‚Äãj)superscriptùëêùëösubscriptùëíùëñùëóc^{m}(e\\_{ij}) represents the prior guidance on edge significance. By equipping different sparsifiers with various priors and sparsity levels, we can customize the most appropriate pruning strategy for each node‚Äôs local scenario. In practice, we select four widely-used pruning criteria including edge degree \\[ [68](https://ar5iv.org/html/2405.14260#bib.bib68 \"\")\\], Jaccard similarity \\[ [69](https://ar5iv.org/html/2405.14260#bib.bib69 \"\"), [70](https://ar5iv.org/html/2405.14260#bib.bib70 \"\")\\], effective resistance \\[ [29](https://ar5iv.org/html/2405.14260#bib.bib29 \"\"), [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\")\\] and gradient magnitude \\[ [71](https://ar5iv.org/html/2405.14260#bib.bib71 \"\"), [17](https://ar5iv.org/html/2405.14260#bib.bib17 \"\")\\]. Details regarding these criteria and their implementations are in [AppendixB](https://ar5iv.org/html/2405.14260#A2 \"Appendix B Deatils on Pruning Criteria ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\n### 3.4 Graph Mixture on Grassmann Manifold\n\nAfter employing kùëòk sparsifiers driven by different criteria and sparsity levels, we are in need of an effective mechanism to ensemble these kùëòk sparse subgraphs and maximize the aggregation of their advantages. A straightforward approach is voting or averaging \\[ [72](https://ar5iv.org/html/2405.14260#bib.bib72 \"\")\\]; however, such simple merging may fail to capture the intricate relationships among multi-view graphs \\[ [73](https://ar5iv.org/html/2405.14260#bib.bib73 \"\")\\], potentially resulting in the loss of advantageous properties from all experts.\nInspired by recent advances in manifold representations \\[ [74](https://ar5iv.org/html/2405.14260#bib.bib74 \"\"), [75](https://ar5iv.org/html/2405.14260#bib.bib75 \"\")\\], we develop a subspace-based sparse graph ensembling mechanism. We first provide the definition of the Grassmann manifold \\[ [75](https://ar5iv.org/html/2405.14260#bib.bib75 \"\")\\] as follows:\n\n###### Definition 1(Grassmann manifold).\n\nGrassmann manifold G‚Äãr‚Äã(n,p)ùê∫ùëüùëõùëùGr(n,p) is the space of nùëõn-by-pùëùp matrices (e.g., ùêåùêå\\\\mathbf{M}) with\northonormal columns, where 0‚â§p‚â§n0ùëùùëõ0\\\\leq p\\\\leq n, i.e.,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | G‚Äãr‚Äã(n,p)={ùêå\\|ùêå‚àà‚Ñùn√óp,ùêå‚ä§‚Äãùêå=ùêà}.ùê∫ùëüùëõùëùconditional-setùêåformulae-sequenceùêåsuperscript‚ÑùùëõùëùsuperscriptùêåtopùêåùêàGr(n,p)=\\\\left\\\\{\\\\mathbf{M}\\|\\\\mathbf{M}\\\\in\\\\mathbb{R}^{n\\\\times p},\\\\mathbf{M}^{\\\\top}\\\\mathbf{M}=\\\\mathbf{I}\\\\right\\\\}. |  | (10) |\n\nAccording to Grassmann manifold theory, each orthonormal matrix represents a unique subspace and thus corresponds to a distinct point on the Grassmann manifold \\[ [76](https://ar5iv.org/html/2405.14260#bib.bib76 \"\")\\]. This applies to the eigenvector matrix of the normalized Laplacian matrix (ùêî=ùêã\\[:,:p\\]‚àà‚Ñùn√óp\\\\mathbf{U}=\\\\mathbf{L}\\[:,:p\\]\\\\in\\\\mathbb{R}^{n\\\\times p}), which comprises the first pùëùp eigenvectors and is orthonormal \\[ [77](https://ar5iv.org/html/2405.14260#bib.bib77 \"\")\\], and thereby can be mapped onto the Grassmann manifold.\n\nConsider the kùëòk sparse subgraphs {ùí¢~m(i)}m=1ksuperscriptsubscriptsubscriptsuperscript~ùí¢ùëñùëöùëö1ùëò\\\\{\\\\widetilde{\\\\mathcal{G}}^{(i)}\\_{m}\\\\}\\_{m=1}^{k}, their subspace representations are {ùêîm(i)‚àà‚Ñù\\|ùí©‚Äã(vi)\\|√óp}m=1ksuperscriptsubscriptsubscriptsuperscriptùêîùëñùëösuperscript‚Ñùùí©subscriptùë£ùëñùëùùëö1ùëò\\\\{\\\\mathbf{U}^{(i)}\\_{m}\\\\in\\\\mathbb{R}^{\\|\\\\mathcal{N}(v\\_{i})\\|\\\\times p}\\\\}\\_{m=1}^{k}. We aim to identify an oracle subspace ùêî(i)superscriptùêîùëñ\\\\mathbf{U}^{(i)} on the Grassmann manifold, which essentially represents a graph, that serves as an informative combination of kùëòk base graphs. Formally, we present the following objective function:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | minùêî(ùê¢)‚àà‚Ñù\\|ùí©‚Äã(vi)\\|√óp‚Äã‚àëm=1k(tr‚Å°(ùêî(ùê¢)‚ä§‚Äãùêãm‚Äãùêî(i))‚èü(1) node connectivity+Em(i)‚èûexpert score‚ãÖd2‚Äã(ùêî(i),ùêîm(i))‚èü(2) subspace distance),s.t.‚Å°ùêî(ùê¢)‚ä§‚Äãùêî(ùê¢)=ùêà\\\\displaystyle\\\\min\\_{\\\\mathbf{U^{(i)}}\\\\in\\\\mathbb{R}^{\\|\\\\mathcal{N}(v\\_{i})\\|\\\\times p}}\\\\sum\\_{m=1}^{k}\\\\left(\\\\underbrace{\\\\operatorname{tr}(\\\\mathbf{U^{(i)}}^{\\\\top}\\\\mathbf{L}\\_{m}\\\\mathbf{U}^{(i)})}\\_{\\\\textrm{(1) node connectivity}}+\\\\underbrace{\\\\overbrace{E^{(i)}\\_{m}}^{\\\\text{expert score}}\\\\cdot d^{2}(\\\\mathbf{U}^{(i)},\\\\mathbf{U}^{(i)}\\_{m})}\\_{\\\\textrm{(2) subspace distance}}\\\\right),\\\\operatorname{s.t.}\\\\mathbf{U^{(i)}}^{\\\\top}\\\\mathbf{U^{(i)}}=\\\\mathbf{I} |  | (11) |\n\nwhere tr‚Å°(‚ãÖ)tr‚ãÖ\\\\operatorname{tr}(\\\\cdot) calculates the trace of matrices, ùêãmsubscriptùêãùëö\\\\mathbf{L}\\_{m} is the graph Laplacian of ùí¢m(i)subscriptsuperscriptùí¢ùëñùëö\\\\mathcal{G}^{(i)}\\_{m}, d2‚Äã(ùêî1,ùêî2)superscriptùëë2subscriptùêî1subscriptùêî2d^{2}(\\\\mathbf{U}\\_{1},\\\\mathbf{U}\\_{2}) denotes the project distance between two subspaces \\[ [74](https://ar5iv.org/html/2405.14260#bib.bib74 \"\")\\], and Em(i)subscriptsuperscriptùê∏ùëñùëöE^{(i)}\\_{m} is the expert score for the mùëöm-th expert, calculated by the routing network Œ®Œ®\\\\Psi, which determines which expert‚Äôs subspace the combined subspace should more closely align with. In [Equation11](https://ar5iv.org/html/2405.14260#S3.E11 \"In 3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"), the first term is designed to preserve the original node connectivity based on spectral embedding, and the second term controls that individual subspaces are\nclose to the final representative subspace ùêî(i)superscriptùêîùëñ\\\\mathbf{U}^{(i)}. Using the Rayleigh-Ritz Theorem \\[ [78](https://ar5iv.org/html/2405.14260#bib.bib78 \"\")\\], we provide a closed-form solution for [Equation11](https://ar5iv.org/html/2405.14260#S3.E11 \"In 3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") and obtain the graph Laplacian of the ensemble sparse graph ùí¢(i)^^superscriptùí¢ùëñ\\\\widehat{\\\\mathcal{G}^{(i)}} as follows:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùêã(i)^=‚àëm=1k(ùêãm‚àíEm(i)‚ãÖùêî(ùê¢)‚ä§‚Äãùêî(ùê¢)).^superscriptùêãùëñsuperscriptsubscriptùëö1ùëòsubscriptùêãùëö‚ãÖsuperscriptsubscriptùê∏ùëöùëñsuperscriptsuperscriptùêîùê¢topsuperscriptùêîùê¢\\\\widehat{\\\\mathbf{L}^{(i)}}=\\\\sum\\_{m=1}^{k}\\\\left(\\\\mathbf{L}\\_{m}-E\\_{m}^{(i)}\\\\cdot\\\\mathbf{U^{(i)}}^{\\\\top}\\\\mathbf{U^{(i)}}\\\\right). |  | (12) |\n\nWe provide detailed derivations and explanations for [Equations11](https://ar5iv.org/html/2405.14260#S3.E11 \"In 3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") and [12](https://ar5iv.org/html/2405.14260#S3.E12 \"Equation 12 ‚Ä£ 3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") in [AppendixC](https://ar5iv.org/html/2405.14260#A3 \"Appendix C Graph Mixture on Grassmann Manifold ‚Ä£ Graph Sparsification via Mixture of Graphs\"). Consequently, we can reformulate the function ESMB‚Äã(‚ãÖ)ESMB‚ãÖ\\\\text{{ESMB}}(\\\\cdot) in [Equation5](https://ar5iv.org/html/2405.14260#S3.E5 \"In 3.2 Routing to Diverse Experts ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") as follows:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ESMB‚Äã({ùí¢~m(i)}m=1k)={ùêÉ‚àíùêã(i)^,ùêó(i)}={ùêÉ‚àí‚àëm=1k(ùêãm‚àíEm(i)‚ãÖùêî(ùê¢)‚ä§‚Äãùêî(ùê¢)),ùêó(i)}.ESMBsuperscriptsubscriptsubscriptsuperscript~ùí¢ùëñùëöùëö1ùëòùêÉ^superscriptùêãùëñsuperscriptùêóùëñùêÉsuperscriptsubscriptùëö1ùëòsubscriptùêãùëö‚ãÖsuperscriptsubscriptùê∏ùëöùëñsuperscriptsuperscriptùêîùê¢topsuperscriptùêîùê¢superscriptùêóùëñ\\\\text{{ESMB}}(\\\\{\\\\widetilde{\\\\mathcal{G}}^{(i)}\\_{m}\\\\}\\_{m=1}^{k})=\\\\{\\\\mathbf{D}-\\\\widehat{\\\\mathbf{L}^{(i)}},\\\\mathbf{X}^{(i)}\\\\}=\\\\left\\\\{\\\\mathbf{D}-\\\\sum\\_{m=1}^{k}\\\\left(\\\\mathbf{L}\\_{m}-E\\_{m}^{(i)}\\\\cdot\\\\mathbf{U^{(i)}}^{\\\\top}\\\\mathbf{U^{(i)}}\\\\right),\\\\mathbf{X}^{(i)}\\\\right\\\\}. |  | (13) |\n\nOn the Grassmann manifold, the subspace ensemble effectively captures the beneficial properties of each expert‚Äôs sparse graph. After obtaining the final version of each node‚Äôs ego-graph, ùí¢(i)^={ùêÄ(i)^,ùêó(i)}^superscriptùí¢ùëñ^superscriptùêÄùëñsuperscriptùêóùëñ\\\\widehat{\\\\mathcal{G}^{(i)}}=\\\\{\\\\widehat{\\\\mathbf{A}^{(i)}},\\\\mathbf{X}^{(i)}\\\\}, we conduct a post-sparsification step as the graph ensembled on the Grassmann manifold can become dense again. Specifically, we obtain the final sparsity s(i)%percentsuperscriptùë†ùëñs^{(i)}\\\\% for visubscriptùë£ùëñv\\_{i} by weighting the sparsity of each expert and sparsifying ùí¢(i)^^superscriptùí¢ùëñ\\\\widehat{\\\\mathcal{G}^{(i)}}.\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùí¢(i)^‚Üê{TopK‚Å°(ùêÄ(i)^,\\|‚Ñ∞(i)\\|√ós(i)%),ùêó(i)},s(i)%=1k‚Äã‚àëm=1ksm%.formulae-sequence‚Üê^superscriptùí¢ùëñTopK^superscriptùêÄùëñsuperscript‚Ñ∞ùëñpercentsuperscriptùë†ùëñsuperscriptùêóùëñpercentsuperscriptùë†ùëñ1ùëòsuperscriptsubscriptùëö1ùëòpercentsuperscriptùë†ùëö\\\\widehat{\\\\mathcal{G}^{(i)}}\\\\leftarrow\\\\{\\\\operatorname{TopK}(\\\\widehat{\\\\mathbf{A}^{(i)}},\\|\\\\mathcal{E}^{(i)}\\|\\\\times s^{(i)}\\\\%),\\\\mathbf{X}^{(i)}\\\\},\\\\;s^{(i)}\\\\%=\\\\frac{1}{k}\\\\sum\\_{m=1}^{k}s^{m}\\\\%. |  | (14) |\n\nThese post-sparsified ùí¢(i)^^superscriptùí¢ùëñ\\\\widehat{\\\\mathcal{G}^{(i)}} are then reassembled together into ùí¢^‚Üê{ùí¢(1)^,ùí¢(2)^,‚ãØ,ùí¢(\\|ùí±\\|)^}‚Üê^ùí¢^superscriptùí¢1^superscriptùí¢2‚ãØ^superscriptùí¢ùí±\\\\widehat{\\\\mathcal{G}}\\\\leftarrow\\\\{\\\\widehat{\\\\mathcal{G}^{(1)}},\\\\widehat{\\\\mathcal{G}^{(2)}},\\\\cdots,\\\\widehat{\\\\mathcal{G}^{(\\|\\\\mathcal{V}\\|)}}\\\\}. Ultimately, the sparsified graph ùí¢^^ùí¢\\\\widehat{\\\\mathcal{G}} produced by MoG can be input into any MPNN \\[ [36](https://ar5iv.org/html/2405.14260#bib.bib36 \"\")\\] or graph transformer \\[ [79](https://ar5iv.org/html/2405.14260#bib.bib79 \"\")\\] architectures for end-to-end training.\n\n### 3.5 Training and Optimization\n\n#### Additional Loss Functions\n\nFollowing classic MoE works \\[ [51](https://ar5iv.org/html/2405.14260#bib.bib51 \"\"), [65](https://ar5iv.org/html/2405.14260#bib.bib65 \"\")\\], we introduce an expert importance loss to prevent MoG from converging to a trivial solution where only a single group of experts is consistently selected:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Importance(ùí±)=‚àëi=1\\|ùí±\\|‚àëj=1kEm(i),‚Ñíimportance(ùí±)=CV(Importance(ùí±))2,\\\\operatorname{Importance}(\\\\mathcal{V})=\\\\sum\\_{i=1}^{\\|\\\\mathcal{V}\\|}\\\\sum\\_{j=1}^{k}E^{(i)}\\_{m},\\\\;\\\\;\\\\mathcal{L}\\_{\\\\text{importance}}(\\\\mathcal{V})=\\\\operatorname{CV}(\\\\operatorname{Importance}(\\\\mathcal{V}))^{2}, |  | (15) |\n\nwhere Importance‚Å°(ùí±)Importanceùí±\\\\operatorname{Importance}(\\\\mathcal{V}) represents the sum of each node‚Äôs expert scores across the node-set, CV‚Å°(‚ãÖ)CV‚ãÖ\\\\operatorname{CV}(\\\\cdot) calculates the coefficient of variation, and ‚Ñíimportancesubscript‚Ñíimportance\\\\mathcal{L}\\_{\\\\text{importance}} ensures the variation of experts. Therefore, the final loss function combines both task-specific and MoG-related losses, formulated as follows:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ‚Ñí=‚Ñítask+Œª‚ãÖ‚Ñíimportance,‚Ñísubscript‚Ñítask‚ãÖùúÜsubscript‚Ñíimportance\\\\mathcal{L}=\\\\mathcal{L}\\_{\\\\text{task}}+\\\\lambda\\\\cdot\\\\mathcal{L}\\_{\\\\text{importance}}, |  | (16) |\n\nwhere ŒªùúÜ\\\\lambda is a hand-tuned scaling factor, with its sensitivity analysis placed in [Section4.4](https://ar5iv.org/html/2405.14260#S4.SS4 \"4.4 Sensitivity Analysis ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\n#### Complexity Analysis\n\nTo better illustrate the effectiveness and clarity of MoG, we provide a comprehensive algorithmic table in [AppendixD](https://ar5iv.org/html/2405.14260#A4 \"Appendix D Algorithm Workflow ‚Ä£ Graph Sparsification via Mixture of Graphs\") and detailed complexity analysis in [AppendixE](https://ar5iv.org/html/2405.14260#A5 \"Appendix E Complexity Analysis ‚Ä£ Graph Sparsification via Mixture of Graphs\"). To address concerns regarding the runtime efficiency of MoG, we have included an empirical analysis of efficiency in [SectionG.2](https://ar5iv.org/html/2405.14260#A7.SS2 \"G.2 Results for Efficiency Validation ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\n## 4 Experiments\n\nIn this section, we conduct extensive experiments to answer the following research questions:\n(RQ1) Can MoG effectively help GNNs combat graph sparsity?\n(RQ2) Does MoG genuinely accelerate the GNN inference?\n(RQ3) Can MoG help boost GNN performance?\n(RQ4) How sensitive is MoG to its key components and parameters?\n\n### 4.1 Experiment Setup\n\n#### Datasets and Backbones\n\nWe opt for four large-scale OGB benchmarks \\[ [80](https://ar5iv.org/html/2405.14260#bib.bib80 \"\")\\], including ogbn-arxiv, ogbn-proteins and ogbn-products for node classification, and ogbg-ppa for graph classification. The dataset splits are given by \\[ [80](https://ar5iv.org/html/2405.14260#bib.bib80 \"\")\\]. Additionally, we choose two superpixel datasets, MNIST and CIFAR-10 \\[ [81](https://ar5iv.org/html/2405.14260#bib.bib81 \"\")\\]. We select GraphSAGE \\[ [35](https://ar5iv.org/html/2405.14260#bib.bib35 \"\")\\], DeeperGCN \\[ [82](https://ar5iv.org/html/2405.14260#bib.bib82 \"\")\\], and PNA \\[ [40](https://ar5iv.org/html/2405.14260#bib.bib40 \"\")\\] as the GNN backbones. More details are provided in [AppendixF](https://ar5iv.org/html/2405.14260#A6 \"Appendix F Experimental Details ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\n#### Parameter Configurations\n\nFor MoG, we adopt the m=4ùëö4m=4 sparsity criteria outlined in [Section3.3](https://ar5iv.org/html/2405.14260#S3.SS3 \"3.3 Customized Sparsifier Modeling ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"), assigning n=3ùëõ3n=3 different sparsity levels {s1,s2,s3}subscriptùë†1subscriptùë†2subscriptùë†3\\\\{s\\_{1},s\\_{2},s\\_{3}\\\\} to each criterion, resulting in a total of K=m√ón=12ùêæùëöùëõ12K=m\\\\times n=12 experts. We select k=2ùëò2k=2 sparsifier experts for each node, and set the loss scaling factor Œª=1‚Äãe‚àí2ùúÜ1ùëí2\\\\lambda=1e-2 across all datasets and backbones. By adjusting the sparsity combination, we can control the global sparsity of the entire graph. We present more details on parameter settings in [SectionF.4](https://ar5iv.org/html/2405.14260#A6.SS4 \"F.4 Parameter Setting ‚Ä£ Appendix F Experimental Details ‚Ä£ Graph Sparsification via Mixture of Graphs\"), and a recipe for adjusting the graph sparsity in [SectionF.6](https://ar5iv.org/html/2405.14260#A6.SS6 \"F.6 Adjusting Graph Sparsity ‚Ä£ Appendix F Experimental Details ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\n### 4.2 MoG as Graph Sparsifier\n\nTo answer RQ1 and RQ2, we comprehensively compare MoG with eleven widely-used topology-guided sparsifiers and five semantic-guided sparsifiers, as outlined in [Table1](https://ar5iv.org/html/2405.14260#S4.T1 \"In 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"), with more detailed explanations in [SectionF.5](https://ar5iv.org/html/2405.14260#A6.SS5 \"F.5 Sparsifier Baseline Configurations ‚Ä£ Appendix F Experimental Details ‚Ä£ Graph Sparsification via Mixture of Graphs\"). The quantitative results on five datasets are shown in [Tables1](https://ar5iv.org/html/2405.14260#S4.T1 \"In 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"), [9](https://ar5iv.org/html/2405.14260#A7.T9 \"Table 9 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\"), [8](https://ar5iv.org/html/2405.14260#A7.T8 \"Table 8 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\"), [11](https://ar5iv.org/html/2405.14260#A7.T11 \"Table 11 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\") and [10](https://ar5iv.org/html/2405.14260#A7.T10 \"Table 10 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\") and the efficiency comparison is in [Figure3](https://ar5iv.org/html/2405.14260#S4.F3 \"In Obs. ‚ù∏ MoG can effectively accelerate GNN inference with negligible performance loss. ‚Ä£ 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"). We give the following observations (Obs.):\n\nTable 1: Node classification performance comparison to state-of-the-art sparsification methods. All methods are trained using GraphSAGE, and the reported metrics represent the average of five runs. We denote methods with ‚Ä†‚Ä†{\\\\dagger} that do not have precise control over sparsity; their performance is reported around the target sparsity ¬±2%plus-or-minuspercent2\\\\pm 2\\\\%. ‚ÄúSparsity %‚Äù refers to the ratio of removed edges as defined in [Section2](https://ar5iv.org/html/2405.14260#S2.SS0.SSS0.Px1 \"Notations & Problem Formulation ‚Ä£ 2 Technical Backgound ‚Ä£ Graph Sparsification via Mixture of Graphs\"). ‚ÄúOOM‚Äù and ‚ÄúOOT‚Äù denotes out-of-memory and out-of-time, respectively.\n\n|     |     |     |     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n|  | Dataset | ogbn-arxiv (Accuracy‚Üë‚Üë\\\\uparrow) | ogbn-proteins (ROC-AUC‚Üë‚Üë\\\\uparrow) |\n| Sparsity % | 10 | 30 | 50 | 70 | 10 | 30 | 50 | 70 |\n| Topology-guided | Random | 70.03‚Üì1.46 | 68.40‚Üì3.09 | 64.32‚Üì7.17 | 61.18‚Üì10.3 | 76.72‚Üì0.68 | 75.03‚Üì2.37 | 73.58‚Üì3.82 | 72.30‚Üì5.10 |\n| Rank Degree‚Ä†\\[ [83](https://ar5iv.org/html/2405.14260#bib.bib83 \"\")\\] | 68.13‚Üì3.36 | 67.01‚Üì4.48 | 65.58‚Üì5.91 | 62.17‚Üì9.32 | 77.47‚Üë0.07 | 76.15‚Üì1.25 | 75.59‚Üì1.81 | 74.23‚Üì3.17 |\n| Local Degree‚Ä†\\[ [84](https://ar5iv.org/html/2405.14260#bib.bib84 \"\")\\] | 68.94‚Üì2.55 | 67.20‚Üì4.29 | 65.45‚Üì6.04 | 65.59‚Üì5.90 | 76.20‚Üì1.20 | 76.05‚Üì1.35 | 76.09‚Üì1.31 | 72.88‚Üì4.52 |\n| Forest Fire‚Ä†\\[ [85](https://ar5iv.org/html/2405.14260#bib.bib85 \"\")\\] | 68.39‚Üì3.10 | 68.10‚Üì3.39 | 67.36‚Üì4.13 | 65.22‚Üì6.27 | 76.50‚Üì0.90 | 75.37‚Üì2.03 | 74.29‚Üì3.11 | 72.11‚Üì5.29 |\n| G-Spar \\[ [86](https://ar5iv.org/html/2405.14260#bib.bib86 \"\")\\] | 71.30‚Üì0.19 | 69.29‚Üì2.20 | 65.56‚Üì5.93 | 65.49‚Üì6.00 | 77.38‚Üì0.02 | 77.36‚Üì0.04 | 76.02‚Üì1.38 | 75.89‚Üì1.51 |\n| LSim‚Ä†\\[ [87](https://ar5iv.org/html/2405.14260#bib.bib87 \"\")\\] | 69.22‚Üì2.27 | 66.15‚Üì5.34 | 61.07‚Üì10.4 | 60.32‚Üì11.2 | 76.83‚Üì0.57 | 76.01‚Üì1.39 | 74.83‚Üì2.57 | 73.65‚Üì3.75 |\n| SCAN \\[ [88](https://ar5iv.org/html/2405.14260#bib.bib88 \"\")\\] | 71.55‚Üë0.06 | 69.27‚Üì2.22 | 65.14‚Üì6.35 | 64.72‚Üì6.77 | 77.60‚Üë0.20 | 76.88‚Üì0.52 | 76.19‚Üì1.21 | 74.32‚Üì3.08 |\n| ER \\[ [29](https://ar5iv.org/html/2405.14260#bib.bib29 \"\")\\] | 71.63‚Üë0.14 | 69.48‚Üì2.01 | 69.00‚Üì2.49 | 67.15‚Üì4.34 | OOT |\n| DSpar \\[ [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\")\\] | 71.23‚Üì0.26 | 68.50‚Üì2.99 | 64.79‚Üì6.70 | 63.11‚Üì8.38 | 77.34‚Üì0.06 | 77.06‚Üì0.34 | 76.38‚Üì1.02 | 75.49‚Üì1.91 |\n| Semantic-guided | UGS‚Ä†\\[ [20](https://ar5iv.org/html/2405.14260#bib.bib20 \"\")\\] | 68.77‚Üì2.72 | 66.30‚Üì5.19 | 65.72‚Üì5.77 | 63.10‚Üì8.39 | 76.80‚Üì0.60 | 75.46‚Üì1.94 | 73.28‚Üì4.12 | 73.31‚Üì4.09 |\n| GEBT \\[ [45](https://ar5iv.org/html/2405.14260#bib.bib45 \"\")\\] | 69.04‚Üì2.45 | 65.29‚Üì6.20 | 65.88‚Üì5.61 | 65.62‚Üì5.87 | 76.30‚Üì1.10 | 76.17‚Üì1.23 | 74.43‚Üì2.97 | 74.12‚Üì3.28 |\n| MGSpar \\[ [71](https://ar5iv.org/html/2405.14260#bib.bib71 \"\")\\] | 70.22‚Üì1.27 | 69.13‚Üì2.36 | 68.27‚Üì3.22 | 66.55‚Üì4.94 | OOM |\n| ACE-GLT‚Ä†\\[ [89](https://ar5iv.org/html/2405.14260#bib.bib89 \"\")\\] | 71.88‚Üë0.39 | 70.14‚Üì1.35 | 68.08‚Üì3.41 | 67.04‚Üì4.45 | 77.59‚Üë0.19 | 76.14‚Üì1.26 | 75.43‚Üì1.97 | 73.28‚Üì4.12 |\n| WD-GLT‚Ä†\\[ [90](https://ar5iv.org/html/2405.14260#bib.bib90 \"\")\\] | 71.92‚Üë0.43 | 70.21‚Üì1.28 | 68.30‚Üì3.19 | 66.57‚Üì4.92 | OOM |\n| AdaGLT \\[ [17](https://ar5iv.org/html/2405.14260#bib.bib17 \"\")\\] | 71.22‚Üì0.27 | 70.18‚Üì1.31 | 69.13‚Üì2.36 | 67.02‚Üì4.47 | 77.49‚Üë0.09 | 76.76‚Üì1.64 | 76.00‚Üì2.40 | 75.44‚Üì2.96 |\n| MoG (Ours)‚Ä† | 71.93‚Üë0.44‚Üëabsent0.44{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.44}} | 70.53‚Üì0.96‚Üìabsent0.96{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{0.96}} | 69.06‚Üì2.43 | 67.31‚Üì4.18‚Üìabsent4.18{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{4.18}} | 77.78‚Üë0.38‚Üëabsent0.38{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.38}} | 77.49‚Üë0.09‚Üëabsent0.09{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.09}} | 76.46‚Üì0.94‚Üìabsent0.94{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{0.94}} | 76.12‚Üì1.28‚Üìabsent1.28{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{1.28}} |\n| Whole Dataset | 71.49¬±0.01 | 77.40¬±0.1 |\n\n#### Obs. ‚ù∂ MoG demonstrates superior performance in both transductive and inductive settings.\n\nAs shown in [Tables1](https://ar5iv.org/html/2405.14260#S4.T1 \"In 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"), [2](https://ar5iv.org/html/2405.14260#S4.T2 \"Table 2 ‚Ä£ Obs. ‚ù∏ MoG can effectively accelerate GNN inference with negligible performance loss. ‚Ä£ 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"), [8](https://ar5iv.org/html/2405.14260#A7.T8 \"Table 8 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\"), [9](https://ar5iv.org/html/2405.14260#A7.T9 \"Table 9 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\") and [10](https://ar5iv.org/html/2405.14260#A7.T10 \"Table 10 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\"), MoG outperforms other sparsifiers in both transductive and inductive settings. Specifically, for node classification tasks, MoG achieves a 0.09%percent0.090.09\\\\% performance improvement while sparsifying 30%percent3030\\\\% of the edges on ogbn-proteins+GraphSAGE. Even when sparsifying 50%percent5050\\\\% of the edges on ogbn-proteins+DeeperGCN, the ROC-AUC only drops by 0.81%percent0.810.81\\\\%. For graph classification tasks, MoG can remove up to 50%percent5050\\\\% of the edges on MNIST with a 0.14%percent0.140.14\\\\% performance improvement, surpassing other sparsifiers by 0.99%‚àº12.97%similar-topercent0.99percent12.970.99\\\\%\\\\sim 12.97\\\\% in accuracy.\n\n#### Obs. ‚ù∑ Different datasets and backbones exhibit varying sensitivities to sparsification.\n\nAs shown in [Tables1](https://ar5iv.org/html/2405.14260#S4.T1 \"In 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\") and [9](https://ar5iv.org/html/2405.14260#A7.T9 \"Table 9 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\"), despite ogbn-proteins being relatively insensitive to sparsification, sparsification at extremely high levels (e.g., 70%percent7070\\\\%) causes more performance loss for GraphSAGE compared to DeeperGCN, with the former experiencing a 2.28%percent2.282.28\\\\% drop and the latter only 1.07%percent1.071.07\\\\%, which demonstrates the varying sensitivity of different GNN backbones to sparsification. Similarly, we observe in [Table2](https://ar5iv.org/html/2405.14260#S4.T2 \"In Obs. ‚ù∏ MoG can effectively accelerate GNN inference with negligible performance loss. ‚Ä£ 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\") that the MNIST dataset shows a slight accuracy increase even with 50%percent5050\\\\% sparsification, whereas the ogbg-ppa dataset suffers a 1.86%percent1.861.86\\\\% performance decline, illustrating the different sensitivities to sparsification across graph datasets.\n\n#### Obs. ‚ù∏ MoG can effectively accelerate GNN inference with negligible performance loss.\n\n[Figure3](https://ar5iv.org/html/2405.14260#S4.F3 \"In Obs. ‚ù∏ MoG can effectively accelerate GNN inference with negligible performance loss. ‚Ä£ 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\") illustrates the actual acceleration effects of MoG compared to other baseline sparsifiers. It is evident that MoG achieves 1.6√ó1.6\\\\timeslossless acceleration on ogbn-proteins+DeeperGCN and ogbn-products+GraphSAGE, meaning the performance is equal to or better than the vanilla backbone. Notably, on ogbn-products+DeeperGCN, MoG achieves 3.3√ó3.3\\\\times acceleration with less than a 1.0%percent1.01.0\\\\% performance drop. Overall, MoG provides significantly superior inference acceleration compared to its competitors.\n\nTable 2: Graph classification performance comparison to state-of-the-art sparsification methods. The reported metrics represent the average of five runs.\n\n|     |     |     |     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n|  | Dataset | MNIST \\+ PNA (Accuracy ‚Üë‚Üë\\\\uparrow) | ogbn-ppa \\+ DeeperGCN (Accuracy ‚Üë‚Üë\\\\uparrow) |\n| Sparsity % | 10 | 30 | 50 | 70 | 10 | 30 | 50 | 70 |\n| Topology-guided | Random | 94.61‚Üì2.74 | 87.23‚Üì10.1 | 84.82‚Üì12.5 | 80.07‚Üì17.3 | 75.44‚Üì1.65 | 73.81‚Üì4.09 | 71.97‚Üì5.12 | 69.62‚Üì7.47 |\n| Rank Degree‚Ä†\\[ [83](https://ar5iv.org/html/2405.14260#bib.bib83 \"\")\\] | 96.42‚Üì0.93 | 94.23‚Üì3.12 | 92.36‚Üì4.99 | 89.20‚Üì8.15 | 75.81‚Üì1.28 | 74.99‚Üì2.10 | 74.12‚Üì2.97 | 70.68‚Üì6.41 |\n| Local Degree‚Ä†\\[ [84](https://ar5iv.org/html/2405.14260#bib.bib84 \"\")\\] | 95.95‚Üì1.40 | 93.37‚Üì3.98 | 90.11‚Üì7.24 | 86.24‚Üì11.1 | 76.43‚Üì0.66 | 75.87‚Üì1.22 | 72.11‚Üì4.98 | 69.93‚Üì7.16 |\n| Forest Fire‚Ä†\\[ [85](https://ar5iv.org/html/2405.14260#bib.bib85 \"\")\\] | 96.75‚Üì0.60 | 95.42‚Üì1.93 | 95.03‚Üì2.32 | 93.10‚Üì4.25 | 76.38‚Üì0.71 | 75.33‚Üì1.76 | 73.18‚Üì3.91 | 71.49‚Üì5.60 |\n| G-Spar \\[ [86](https://ar5iv.org/html/2405.14260#bib.bib86 \"\")\\] | 97.10‚Üì0.25 | 96.59‚Üì0.76 | 94.36‚Üì2.99 | 92.48‚Üì4.87 | 77.68‚Üë0.59 | 73.90‚Üì3.19 | 69.52‚Üì7.57 | 68.10‚Üì8.99 |\n| LSim‚Ä†\\[ [87](https://ar5iv.org/html/2405.14260#bib.bib87 \"\")\\] | 95.79‚Üì1.56 | 92.14‚Üì5.21 | 92.29‚Üì5.06 | 91.95‚Üì5.40 | 76.04‚Üì1.05 | 74.40‚Üì2.69 | 72.78‚Üì4.31 | 68.21‚Üì8.88 |\n| SCAN \\[ [88](https://ar5iv.org/html/2405.14260#bib.bib88 \"\")\\] | 95.81‚Üì1.54 | 93.48‚Üì3.87 | 90.18‚Üì7.17 | 86.48‚Üì10.9 | 75.23‚Üì1.86 | 75.18‚Üì1.91 | 72.48‚Üì4.61 | 71.11‚Üì5.98 |\n| ER \\[ [29](https://ar5iv.org/html/2405.14260#bib.bib29 \"\")\\] | 94.77‚Üì2.58 | 93.91‚Üì3.44 | 93.45‚Üì3.90 | 91.07‚Üì6.28 | 77.94‚Üë0.85 | 75.15‚Üì1.94 | 73.23‚Üì3.86 | 72.74‚Üì4.35 |\n| DSpar \\[ [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\")\\] | 94.97‚Üì2.38 | 93.80‚Üì3.55 | 92.23‚Üì5.12 | 90.48‚Üì6.87 | 76.33‚Üì0.76 | 73.37‚Üì3.72 | 72.98‚Üì4.11 | 70.77‚Üì6.32 |\n| Semantic | ICPG \\[ [91](https://ar5iv.org/html/2405.14260#bib.bib91 \"\")\\] | 97.69‚Üë0.34 | 97.39‚Üë0.04 | 96.80‚Üì0.55 | 93.77‚Üì3.58 | 77.36‚Üë0.27 | 75.24‚Üì1.85 | 73.18‚Üì3.91 | 71.09‚Üì6.00 |\n| AdaGLT \\[ [17](https://ar5iv.org/html/2405.14260#bib.bib17 \"\")\\] | 97.31‚Üì0.04 | 96.58‚Üì0.77 | 94.14‚Üì3.21 | 92.08‚Üì5.27 | 76.22‚Üì0.87 | 73.54‚Üì3.55 | 70.10‚Üì6.99 | 69.28‚Üì7.81 |\n|  | MoG (Ours)‚Ä† | 97.80‚Üë0.45‚Üëabsent0.45{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.45}} | 97.74‚Üë0.39‚Üëabsent0.39{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.39}} | 97.79‚Üë0.44‚Üëabsent0.44{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.44}} | 95.30‚Üì2.05‚Üìabsent2.05{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{2.05}} | 78.43‚Üë1.34‚Üëabsent1.34{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{1.34}} | 77.90‚Üë0.81‚Üëabsent0.81{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.81}} | 75.23‚Üì1.86‚Üìabsent1.86{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{1.86}} | 73.09‚Üì4.00‚Üìabsent4.00{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{4.00}} |\n| Whole Dataset | 97.35¬±0.07 | 77.09¬±0.04 |\n\n![Refer to caption](https://ar5iv.org/html/2405.14260/assets/x3.png)Figure 3: The trade-off between inference speedup and model performance for MoG and other sparsifiers. The first and second rows represent results on GraphSAGE and DeeperGCN, respectively. The gray pentagon represents the performance of the original GNN without sparsification.\n\n### 4.3 MoG as Performance Booster\n\nIn the context of RQ3, MoG is developed to augment GNN performance by selectively removing a limited amount of noisy and detrimental edges, while simultaneously preventing excessive sparsification that could degrade GNN performance. Consequently, we uniformly set the sparsity combination to {90%,85%,80%}percent90percent85percent80\\\\{90\\\\%,85\\\\%,80\\\\%\\\\}. We combine MoG with state-of-the-art GNNs on both node-level and graph-level tasks. The former include RevGNN \\[ [92](https://ar5iv.org/html/2405.14260#bib.bib92 \"\")\\] and GAT+BoT \\[ [93](https://ar5iv.org/html/2405.14260#bib.bib93 \"\")\\], which rank fourth and seventh, respectively, on the ogbn-proteins benchmark, and the latter include PAS \\[ [94](https://ar5iv.org/html/2405.14260#bib.bib94 \"\")\\] and DeeperGCN \\[ [82](https://ar5iv.org/html/2405.14260#bib.bib82 \"\")\\], ranking fourth and sixth on the ogbn-ppa benchmark. We observe from [Table3](https://ar5iv.org/html/2405.14260#S4.T3 \"In Obs. ‚ùπ MoG can assist the ‚Äútop-student‚Äù backbones to learn better. ‚Ä£ 4.3 MoG as Performance Booster ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"):\n\n#### Obs. ‚ùπ MoG can assist the ‚Äútop-student‚Äù backbones to learn better.\n\nDespite RevGNN and PAS being high-ranking backbones for ogbn-proteins and ogbg-ppa, MoG still achieves non-marginal performance improvements through moderate graph sparsification: 1.02%‚Üë‚Üëpercent1.02absent1.02\\\\%\\\\uparrow on RevGNN+ogbn-proteins and 1.74%‚Üë‚Üëpercent1.74absent1.74\\\\%\\\\uparrow on DeeperGCN+ogbg-ppa. This demonstrates that MoG can effectively serve as a plugin to boost GNN performance by setting a relatively low sparsification rate.\n\nTable 3: Node classification results on ogbn-proteins with RevGNN and GAT+BoT and graph classification results on ogbg-ppa with PAS and DeeperGCN. Mean and standard deviation values from five random runs are presented.\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n|  | ogbn-proteins (ROC-AUC‚Üë‚Üë\\\\uparrow) | ogbg-ppa (Accuracy‚Üë‚Üë\\\\uparrow) |\n| Model | RevGNN | GAT+BoT | PAS | DeeperGCN |\n| w/o MoG | 88.14¬±plus-or-minus\\\\pm 0.24 | 88.09 ¬±plus-or-minus\\\\pm 0.16 | 78.28 ¬±plus-or-minus\\\\pm 0.24 | 77.09 ¬±plus-or-minus\\\\pm 0.04 |\n| w/ MoG | 89.04¬±plus-or-minus\\\\pm 0.72 | 88.72¬±plus-or-minus\\\\pm 0.50 | 78.66¬±plus-or-minus\\\\pm 0.47 | 78.43¬±plus-or-minus\\\\pm 0.19 |\n| (Sparsity: 9.2%) | (Sparsity: 12.7%) | (Sparsity: 6.6%) | (Sparsity: 10.8%) |\n\n### 4.4 Sensitivity Analysis\n\n#### Obs. ‚ù∫ Sparse expert selection helps customized sparsification.\n\nWe conduct a parameter sensitivity analysis on the number of sparsifier experts kùëòk selected for each node, as shown in [Section4.4](https://ar5iv.org/html/2405.14260#S4.SS4.SSS0.Px2 \"Obs. ‚ùª Sparsifier load balancing is essential. ‚Ä£ 4.4 Sensitivity Analysis ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"). It can be observed that the optimal kùëòk varies with the level of graph sparsity. At lower sparsity (10%), k=1ùëò1k=1 yields relatively good performance. However, as sparsity increases to 50%, model performance peaks at k=4ùëò4k=4, suggesting that in high sparsity environments, more expert opinions contribute to better sparsification. Notably, when kùëòk increases to 6, MoG‚Äôs performance declines, indicating that a more selective approach in sparse expert selection aids in better model generalization. For a balanced consideration of performance and computational efficiency, we set k=2ùëò2k=2 in all experiments.\n\n#### Obs. ‚ùª Sparsifier load balancing is essential.\n\nWe conduct a sensitivity analysis of the expert importance loss coefficient ŒªùúÜ\\\\lambda. A larger ŒªùúÜ\\\\lambda indicates greater variation in the selected experts. As shown in [Section4.4](https://ar5iv.org/html/2405.14260#S4.SS4.SSS0.Px2 \"Obs. ‚ùª Sparsifier load balancing is essential. ‚Ä£ 4.4 Sensitivity Analysis ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"), Œª=0ùúÜ0\\\\lambda=0 consistently resulted in the lowest performance, as failing to explicitly enforce variation among experts leads to the model converging to a trivial solution with the same set of experts \\[ [65](https://ar5iv.org/html/2405.14260#bib.bib65 \"\"), [51](https://ar5iv.org/html/2405.14260#bib.bib51 \"\")\\]. Conversely, Œª=1‚Äãe‚àí1ùúÜ1ùëí1\\\\lambda=1e-1 performed slightly better than Œª=1‚Äãe‚àí2ùúÜ1ùëí2\\\\lambda=1e-2 at higher sparsity levels, supporting the findings in Obs. 5 that higher sparsity requires more diverse sparsifier experts.\n\n![Refer to caption](https://ar5iv.org/html/2405.14260/assets/x4.png)Figure 4: Sensitivity study on parameter kùëòk, i.e., how many experts are chosen per node. The results are reported based on ogbn-arxiv+GraphSAGE.\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| ŒªùúÜ\\\\lambda | 0 | 1e-2 | 1e-1 |\n| 10%percent1010\\\\% | 81.19¬±0.08subscript81.19plus-or-minus0.0881.19\\_{\\\\pm 0.08} | 83.32¬±0.19subscript83.32plus-or-minus0.19\\\\mathbf{83.32}\\_{\\\\pm 0.19} | 83.04¬±0.23subscript83.04plus-or-minus0.2383.04\\_{\\\\pm 0.23} |\n| 30%percent3030\\\\% | 79.77¬±0.08subscript79.77plus-or-minus0.0879.77\\_{\\\\pm 0.08} | 82.14¬±0.23subscript82.14plus-or-minus0.23\\\\mathbf{82.14}\\_{\\\\pm 0.23} | 82.08¬±0.25subscript82.08plus-or-minus0.2582.08\\_{\\\\pm 0.25} |\n| 50%percent5050\\\\% | 79.40¬±0.06subscript79.40plus-or-minus0.0679.40\\_{\\\\pm 0.06} | 81.79¬±0.21subscript81.79plus-or-minus0.2181.79\\_{\\\\pm 0.21} | 82.04¬±0.20subscript82.04plus-or-minus0.20\\\\mathbf{82.04}\\_{\\\\pm 0.20} |\n| 70%percent7070\\\\% | 78.22¬±0.13subscript78.22plus-or-minus0.1378.22\\_{\\\\pm 0.13} | 80.90¬±0.24subscript80.90plus-or-minus0.24{80.90}\\_{\\\\pm 0.24} | 80.97¬±0.28subscript80.97plus-or-minus0.28\\\\mathbf{80.97}\\_{\\\\pm 0.28} |\n\nTable 4: Sensitivity study on scaling factor ŒªùúÜ\\\\lambda. The results are reported on ogbn-proteins+DeeperGCN.\n\n## 5 Conclusion & Limitation\n\nIn this paper, we introduce a new graph sparsification paradigm termed MoG, which leverages multiple graph sparsifiers, each equipped with distinct sparsity levels and pruning criteria. MoG selects the most suitable sparsifier expert based on each node‚Äôs local context, providing a customized graph sparsification solution, followed by an effective mixture mechanism on the Grassmann manifold to ensemble the sparse graphs produced by various experts. Extensive experiments on four large-scale OGB datasets and two superpixel datasets have rigorously demonstrated the effectiveness of MoG. A potential limitation of MoG is its current reliance on 1-hop decomposition to represent each node‚Äôs local context. The performance of extending this approach to kùëòk-hop contexts remains unexplored, suggesting a possible direction for future research.\n\n## References\n\n- \\[1\\]\nXiangguo Sun, Hong Cheng, Jia Li, Bo Liu, and Jihong Guan.\n\nAll in one: Multi-task prompting for graph neural networks.\n\nIn Proceedings of the 29th ACM SIGKDD Conference on Knowledge Discovery and Data Mining, pages 2120‚Äì2131, 2023.\n\n- \\[2\\]\nJie Zhou, Ganqu Cui, Shengding Hu, Zhengyan Zhang, Cheng Yang, Zhiyuan Liu, Lifeng Wang, Changcheng Li, and Maosong Sun.\n\nGraph neural networks: A review of methods and applications.\n\nAI open, 1:57‚Äì81, 2020.\n\n- \\[3\\]\nJiancan Wu, Xiang Wang, Fuli Feng, Xiangnan He, Liang Chen, Jianxun Lian, and Xing Xie.\n\nSelf-supervised graph learning for recommendation.\n\nIn Proceedings of the 44th international ACM SIGIR conference on research and development in information retrieval, pages 726‚Äì735, 2021.\n\n- \\[4\\]\nJunliang Yu, Hongzhi Yin, Xin Xia, Tong Chen, Lizhen Cui, and Quoc Viet Hung Nguyen.\n\nAre graph augmentations necessary? simple graph contrastive learning for recommendation.\n\nIn Proceedings of the 45th international ACM SIGIR conference on research and development in information retrieval, pages 1294‚Äì1303, 2022.\n\n- \\[5\\]\nXiangguo Sun, Hongzhi Yin, Bo Liu, Qing Meng, Jiuxin Cao, Alexander Zhou, and Hongxu Chen.\n\nStructure learning via meta-hyperedge for dynamic rumor detection.\n\nIEEE Transactions on Knowledge and Data Engineering, 2022.\n\n- \\[6\\]\nDaixin Wang, Jianbin Lin, Peng Cui, Quanhui Jia, Zhen Wang, Yanming Fang, Quan Yu, Jun Zhou, Shuang Yang, and Yuan Qi.\n\nA semi-supervised graph attentive network for financial fraud detection.\n\nIn 2019 IEEE International Conference on Data Mining (ICDM), pages 598‚Äì607. IEEE, 2019.\n\n- \\[7\\]\nDawei Cheng, Xiaoyang Wang, Ying Zhang, and Liqing Zhang.\n\nGraph neural network for fraud detection via spatial-temporal attention.\n\nIEEE Transactions on Knowledge and Data Engineering, 34(8):3800‚Äì3813, 2020.\n\n- \\[8\\]\nZaixi Zhang and Qi Liu.\n\nLearning subpocket prototypes for generalizable structure-based drug design.\n\nIn International Conference on Machine Learning, pages 41382‚Äì41398. PMLR, 2023.\n\n- \\[9\\]\nLingfei Wu, Yu Chen, Kai Shen, Xiaojie Guo, Hanning Gao, Shucheng Li, Jian Pei, Bo Long, et al.\n\nGraph neural networks for natural language processing: A survey.\n\nFoundations and Trends¬Æ in Machine Learning, 16(2):119‚Äì328, 2023.\n\n- \\[10\\]\nXiangguo Sun, Hong Cheng, Bo Liu, Jia Li, Hongyang Chen, Guandong Xu, and Hongzhi Yin.\n\nSelf-supervised hypergraph representation learning for sociological analysis.\n\nIEEE Transactions on Knowledge and Data Engineering, 2023.\n\n- \\[11\\]\nMatthias Fey and Jan Eric Lenssen.\n\nFast graph representation learning with pytorch geometric.\n\narXiv preprint arXiv:1903.02428, 2019.\n\n- \\[12\\]\nMinjie Wang, Da Zheng, Zihao Ye, Quan Gan, Mufei Li, Xiang Song, Jinjing Zhou, Chao Ma, Lingfan Yu, Yu Gai, et al.\n\nDeep graph library: A graph-centric, highly-performant package for graph neural networks.\n\narXiv preprint arXiv:1909.01315, 2019.\n\n- \\[13\\]\nZirui Liu, Kaixiong Zhou, Zhimeng Jiang, Li Li, Rui Chen, Soo-Hyun Choi, and Xia Hu.\n\nDspar: An embarrassingly simple strategy for efficient gnn training and inference via degree-based sparsification.\n\nTransactions on Machine Learning Research, 2023.\n\n- \\[14\\]\nGuibin Zhang, Yanwei Yue, Kun Wang, Junfeng Fang, Yongduo Sui, Kai Wang, Yuxuan Liang, Dawei Cheng, Shirui Pan, and Tianlong Chen.\n\nTwo heads are better than one: Boosting graph sparse training via semantic and topological awareness.\n\narXiv preprint arXiv:2402.01242, 2024.\n\n- \\[15\\]\nKun Wang, Yuxuan Liang, Pengkun Wang, Xu Wang, Pengfei Gu, Junfeng Fang, and Yang Wang.\n\nSearching lottery tickets in graph neural networks: A dual perspective.\n\nIn The Eleventh International Conference on Learning Representations, 2022.\n\n- \\[16\\]\nWei Jin, Lingxiao Zhao, Shichang Zhang, Yozen Liu, Jiliang Tang, and Neil Shah.\n\nGraph condensation for graph neural networks.\n\narXiv preprint arXiv:2110.07580, 2021.\n\n- \\[17\\]\nGuibin Zhang, Kun Wang, Wei Huang, Yanwei Yue, Yang Wang, Roger Zimmermann, Aojun Zhou, Dawei Cheng, Jin Zeng\\*, and Yuxuan Liang\\*.\n\nGraph lottery ticket automated.\n\nIn The International Conference on Learning Representations, 2024.\n\n- \\[18\\]\nYuhan Chen, Haojie Ye, Sanketh Vedula, Alex Bronstein, Ronald Dreslinski, Trevor Mudge, and Nishil Talati.\n\nDemystifying graph sparsification algorithms in graph properties preservation.\n\narXiv preprint arXiv:2311.12314, 2023.\n\n- \\[19\\]\nMohammad Hashemi, Shengbo Gong, Juntong Ni, Wenqi Fan, B Aditya Prakash, and Wei Jin.\n\nA comprehensive survey on graph reduction: Sparsification, coarsening, and condensation.\n\narXiv preprint arXiv:2402.03358, 2024.\n\n- \\[20\\]\nTianlong Chen, Yongduo Sui, Xuxi Chen, Aston Zhang, and Zhangyang Wang.\n\nA unified lottery ticket hypothesis for graph neural networks.\n\nIn International Conference on Machine Learning, pages 1695‚Äì1706. PMLR, 2021.\n\n- \\[21\\]\nGuibin Zhang, Kun Wang, Wei Huang, Yanwei Yue, Yang Wang, Roger Zimmermann, Aojun Zhou, Dawei Cheng, Jin Zeng, and Yuxuan Liang.\n\nGraph lottery ticket automated.\n\nIn The Twelfth International Conference on Learning Representations, 2023.\n\n- \\[22\\]\nCheng Zheng, Bo Zong, Wei Cheng, Dongjin Song, Jingchao Ni, Wenchao Yu, Haifeng Chen, and Wei Wang.\n\nRobust graph representation learning via neural sparsification.\n\nIn International Conference on Machine Learning, pages 11458‚Äì11468. PMLR, 2020.\n\n- \\[23\\]\nZhixun Li, Xin Sun, Yifan Luo, Yanqiao Zhu, Dingshuo Chen, Yingtao Luo, Xiangxin Zhou, Qiang Liu, Shu Wu, Liang Wang, et al.\n\nGslb: The graph structure learning benchmark.\n\nAdvances in Neural Information Processing Systems, 36, 2024.\n\n- \\[24\\]\nDongsheng Luo, Wei Cheng, Wenchao Yu, Bo Zong, Jingchao Ni, Haifeng Chen, and Xiang Zhang.\n\nLearning to drop: Robust graph neural network via topological denoising.\n\nIn Proceedings of the 14th ACM international conference on web search and data mining, pages 779‚Äì787, 2021.\n\n- \\[25\\]\nKwei-Herng Lai, Daochen Zha, Kaixiong Zhou, and Xia Hu.\n\nPolicy-gnn: Aggregation optimization for graph neural networks.\n\nIn Proceedings of the 26th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pages 461‚Äì471, 2020.\n\n- \\[26\\]\nKun Wang, Guohao Li, Shilong Wang, Guibin Zhang, Kai Wang, Yang You, Xiaojiang Peng, Yuxuan Liang, and Yang Wang.\n\nThe snowflake hypothesis: Training deep gnn with one node one receptive field, 2023.\n\n- \\[27\\]\nLi Wang, Wei Huang, Miao Zhang, Shirui Pan, Xiaojun Chang, and Steven Weidong Su.\n\nPruning graph neural networks by evaluating edge properties.\n\nKnowledge-Based Systems, 256:109847, 2022.\n\n- \\[28\\]\nZheng Gong, Guifeng Wang, Ying Sun, Qi Liu, Yuting Ning, Hui Xiong, and Jingyu Peng.\n\nBeyond homophily: Robust graph anomaly detection via neural sparsification.\n\nIn Proceedings of International Joint Conference on Artificial Intelligence, pages 2104‚Äì2113, 2023.\n\n- \\[29\\]\nDaniel A Spielman and Nikhil Srivastava.\n\nGraph sparsification by effective resistances.\n\nIn Proceedings of the fortieth annual ACM symposium on Theory of computing, pages 563‚Äì568, 2008.\n\n- \\[30\\]\nZonghan Wu, Shirui Pan, Fengwen Chen, Guodong Long, Chengqi Zhang, and S Yu Philip.\n\nA comprehensive survey on graph neural networks.\n\nIEEE transactions on neural networks and learning systems, 32(1):4‚Äì24, 2020.\n\n- \\[31\\]\nShunxin Xiao, Shiping Wang, Yuanfei Dai, and Wenzhong Guo.\n\nGraph neural networks in node classification: survey and evaluation.\n\nMachine Vision and Applications, 33(1):4, 2022.\n\n- \\[32\\]\nXiangguo Sun, Hongzhi Yin, Bo Liu, Hongxu Chen, Qing Meng, Wang Han, and Jiuxin Cao.\n\nMulti-level hyperedge distillation for social linking prediction on sparsely observed networks.\n\nIn Proceedings of the Web Conference 2021, pages 2934‚Äì2945, 2021.\n\n- \\[33\\]\nChuang Liu, Yibing Zhan, Jia Wu, Chang Li, Bo Du, Wenbin Hu, Tongliang Liu, and Dacheng Tao.\n\nGraph pooling for graph neural networks: Progress, challenges, and opportunities.\n\narXiv preprint arXiv:2204.07321, 2022.\n\n- \\[34\\]\nThomas N. Kipf and Max Welling.\n\nSemi-Supervised Classification with Graph Convolutional Networks.\n\nIn Proceedings of the 5th International Conference on Learning Representations, 2017.\n\n- \\[35\\]\nWill Hamilton, Zhitao Ying, and Jure Leskovec.\n\nInductive representation learning on large graphs.\n\nIn Proceedings of NIPS, 2017.\n\n- \\[36\\]\nJustin Gilmer, Samuel S Schoenholz, Patrick F Riley, Oriol Vinyals, and George E Dahl.\n\nNeural message passing for quantum chemistry.\n\nIn International conference on machine learning, pages 1263‚Äì1272. PMLR, 2017.\n\n- \\[37\\]\nMuhan Zhang and Yixin Chen.\n\nLink prediction based on graph neural networks.\n\nIn Proceedings of NIPS, 2018.\n\n- \\[38\\]\nSeongjun Yun, Seoyoon Kim, Junhyun Lee, Jaewoo Kang, and Hyunwoo J Kim.\n\nNeo-gnns: Neighborhood overlap-aware graph neural networks for link prediction.\n\nAdvances in Neural Information Processing Systems, 34:13683‚Äì13694, 2021.\n\n- \\[39\\]\nZhitao Ying, Jiaxuan You, Christopher Morris, Xiang Ren, Will Hamilton, and Jure Leskovec.\n\nHierarchical graph representation learning with differentiable pooling.\n\nAdvances in neural information processing systems, 31, 2018.\n\n- \\[40\\]\nGabriele Corso, Luca Cavalleri, Dominique Beaini, Pietro Li√≤, and Petar Veliƒçkoviƒá.\n\nPrincipal neighbourhood aggregation for graph nets.\n\nAdvances in Neural Information Processing Systems, 33:13260‚Äì13271, 2020.\n\n- \\[41\\]\nIngo Alth√∂fer, Gautam Das, David Dobkin, and Deborah Joseph.\n\nGenerating sparse spanners for weighted graphs.\n\nIn SWAT 90: 2nd Scandinavian Workshop on Algorithm Theory Bergen, Sweden, July 11‚Äì14, 1990 Proceedings 2, pages 26‚Äì37. Springer, 1990.\n\n- \\[42\\]\nAmir Abboud, Robert Krauthgamer, and Ohad Trabelsi.\n\nFriendly cut sparsifiers and faster gomory-hu trees.\n\nIn Proceedings of the 2022 Annual ACM-SIAM Symposium on Discrete Algorithms (SODA), pages 3630‚Äì3649. SIAM, 2022.\n\n- \\[43\\]\nJoshua Batson, Daniel A Spielman, Nikhil Srivastava, and Shang-Hua Teng.\n\nSpectral sparsification of graphs: theory and algorithms.\n\nCommunications of the ACM, 56(8):87‚Äì94, 2013.\n\n- \\[44\\]\nJiayu Li, Tianyun Zhang, Hao Tian, Shengmin Jin, Makan Fardad, and Reza Zafarani.\n\nSgcn: A graph sparsifier based on graph convolutional networks.\n\nIn Pacific-Asia Conference on Knowledge Discovery and Data Mining, pages 275‚Äì287. Springer, 2020.\n\n- \\[45\\]\nHaoran You, Zhihan Lu, Zijian Zhou, Yonggan Fu, and Yingyan Lin.\n\nEarly-bird gcns: Graph-network co-optimization towards more efficient gcn training and inference via drawing early-bird lottery tickets.\n\nIn Proceedings of the AAAI Conference on Artificial Intelligence, volume 36, pages 8910‚Äì8918, 2022.\n\n- \\[46\\]\nYixin Liu, Yu Zheng, Daokun Zhang, Hongxu Chen, Hao Peng, and Shirui Pan.\n\nTowards unsupervised deep graph structure learning.\n\nIn Proceedings of the ACM Web Conference 2022, pages 1392‚Äì1403, 2022.\n\n- \\[47\\]\nQitian Wu, Wentao Zhao, Zenan Li, David P Wipf, and Junchi Yan.\n\nNodeformer: A scalable graph structure learning transformer for node classification.\n\nAdvances in Neural Information Processing Systems, 35:27387‚Äì27401, 2022.\n\n- \\[48\\]\nRobert A Jacobs, Michael I Jordan, Steven J Nowlan, and Geoffrey E Hinton.\n\nAdaptive mixtures of local experts.\n\nNeural computation, 3(1):79‚Äì87, 1991.\n\n- \\[49\\]\nKe Chen, Lei Xu, and Huisheng Chi.\n\nImproved learning algorithms for mixture of experts in multiclass classification.\n\nNeural networks, 12(9):1229‚Äì1252, 1999.\n\n- \\[50\\]\nMichael I Jordan and Robert A Jacobs.\n\nHierarchical mixtures of experts and the em algorithm.\n\nNeural computation, 6(2):181‚Äì214, 1994.\n\n- \\[51\\]\nNoam Shazeer, Azalia Mirhoseini, Krzysztof Maziarz, Andy Davis, Quoc Le, Geoffrey Hinton, and Jeff Dean.\n\nOutrageously large neural networks: The sparsely-gated mixture-of-experts layer.\n\narXiv preprint arXiv:1701.06538, 2017.\n\n- \\[52\\]\nDmitry Lepikhin, HyoukJoong Lee, Yuanzhong Xu, Dehao Chen, Orhan Firat, Yanping Huang, Maxim Krikun, Noam Shazeer, and Zhifeng Chen.\n\nGshard: Scaling giant models with conditional computation and automatic sharding.\n\narXiv preprint arXiv:2006.16668, 2020.\n\n- \\[53\\]\nWilliam Fedus, Barret Zoph, and Noam Shazeer.\n\nSwitch transformers: Scaling to trillion parameter models with simple and efficient sparsity, 2021.\n\n- \\[54\\]\nAidan Clark, Diego de Las Casas, Aurelia Guy, Arthur Mensch, Michela Paganini, Jordan Hoffmann, Bogdan Damoc, Blake Hechtman, Trevor Cai, Sebastian Borgeaud, et al.\n\nUnified scaling laws for routed language models.\n\nIn ICML, pages 4057‚Äì4086, 2022.\n\n- \\[55\\]\nStephen Roller, Sainbayar Sukhbaatar, Jason Weston, et al.\n\nHash layers for large sparse models.\n\nIn Advances in Neural Information Processing Systems, pages 17555‚Äì17566, 2021.\n\n- \\[56\\]\nJordan Hoffmann, Sebastian Borgeaud, Arthur Mensch, Elena Buchatskaya, Trevor Cai, Eliza Rutherford, Diego de Las Casas, Lisa Anne Hendricks, Johannes Welbl, Aidan Clark, et al.\n\nTraining compute-optimal large language models.\n\narXiv preprint arXiv:2203.15556, 2022.\n\n- \\[57\\]\nCarlos Riquelme, Joan Puigcerver, Basil Mustafa, Maxim Neumann, Rodolphe Jenatton, Andr√© Susano Pinto, Daniel Keysers, and Neil Houlsby.\n\nScaling vision with sparse mixture of experts.\n\nIn Advances in Neural Information Processing Systems, volume 34, pages 8583‚Äì8595, 2021.\n\n- \\[58\\]\nBasil Mustafa, Carlos Riquelme, Joan Puigcerver, Rodolphe Jenatton, and Neil Houlsby.\n\nMultimodal contrastive learning with limoe: the language-image mixture of experts.\n\narXiv preprint arXiv:2206.02770, 2022.\n\n- \\[59\\]\nJiaqi Ma, Zhe Zhao, Xinyang Yi, Jilin Chen, Lichan Hong, and Ed H Chi.\n\nModeling task relationships in multi-task learning with multi-gate mixture-of-experts.\n\nIn ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pages 1930‚Äì1939, 2018.\n\n- \\[60\\]\nJinguo Zhu, Xizhou Zhu, Wenhai Wang, Xiaohua Wang, Hongsheng Li, Xiaogang Wang, and Jifeng Dai.\n\nUni-Perceiver-MoE: Learning sparse generalist models with conditional moes.\n\narXiv preprint arXiv:2206.04674, 2022.\n\n- \\[61\\]\nFenyu Hu, W Liping, L Qiang, Shu Wu, Liang Wang, and Tieniu Tan.\n\nGraphdive: graph classifcation by mixture of diverse experts.\n\nIn IJCAI, 2022.\n\n- \\[62\\]\nLiguang Zhou, Yuhongze Zhou, Tin Lun Lam, and Yangsheng Xu.\n\nCAME: Context-aware mixture-of-experts for unbiased scene graph generation.\n\narXiv preprint arXiv:2208.07109, 2022.\n\n- \\[63\\]\nSuyeon Kim, Dongha Lee, SeongKu Kang, Seonghyeon Lee, and Hwanjo Yu.\n\nLearning topology-specific experts for molecular property prediction.\n\nIn Proceedings of the AAAI Conference on Artificial Intelligence, volume 37, pages 8291‚Äì8299, 2023.\n\n- \\[64\\]\nZheyuan Liu, Chunhui Zhang, Yijun Tian, Erchi Zhang, Chao Huang, Yanfang Ye, and Chuxu Zhang.\n\nFair graph representation learning via diverse mixture of experts.\n\nIn The Web Conference, 2023.\n\n- \\[65\\]\nHaotao Wang, Ziyu Jiang, Yuning You, Yan Han, Gaowen Liu, Jayanth Srinivasa, Ramana Kompella, Zhangyang Wang, et al.\n\nGraph mixture of experts: Learning on large-scale graphs with explicit diversity modeling.\n\nAdvances in Neural Information Processing Systems, 36, 2024.\n\n- \\[66\\]\nXinyu Zhao, Xuxi Chen, Yu Cheng, and Tianlong Chen.\n\nSparse moe with language guided routing for multilingual machine translation.\n\nIn The Twelfth International Conference on Learning Representations, 2024.\n\n- \\[67\\]\nJunjie Liu, Zhe Xu, Runbin Shi, Ray CC Cheung, and Hayden KH So.\n\nDynamic sparse training: Find efficient sparse network from scratch with trainable masked layers.\n\narXiv preprint arXiv:2005.06870, 2020.\n\n- \\[68\\]\nHyunjin Seo, Jihun Yun, and Eunho Yang.\n\nTEDDY: Trimming edges with degree-based discrimination strategy.\n\nIn The Twelfth International Conference on Learning Representations, 2024.\n\n- \\[69\\]\nAllan H. Murphy.\n\nThe finley affair: A signal event in the history of forecast verification.\n\nWeather and Forecasting, 11(1):3 ‚Äì 20, 1996.\n\n- \\[70\\]\nVenu Satuluri, Srinivasan Parthasarathy, and Yiye Ruan.\n\nLocal graph sparsification for scalable clustering.\n\nIn Proceedings of the 2011 ACM SIGMOD International Conference on Management of Data, SIGMOD ‚Äô11, page 721‚Äì732, New York, NY, USA, 2011. Association for Computing Machinery.\n\n- \\[71\\]\nGuihong Wan and Haim Schweitzer.\n\nEdge sparsification for graphs via meta-learning.\n\nIn 2021 IEEE 37th International Conference on Data Engineering (ICDE), pages 2733‚Äì2738. IEEE, 2021.\n\n- \\[72\\]\nOmer Sagi and Lior Rokach.\n\nEnsemble learning: A survey.\n\nWiley interdisciplinary reviews: data mining and knowledge discovery, 8(4):e1249, 2018.\n\n- \\[73\\]\nZhao Kang, Guoxin Shi, Shudong Huang, Wenyu Chen, Xiaorong Pu, Joey Tianyi Zhou, and Zenglin Xu.\n\nMulti-graph fusion for multi-view spectral clustering.\n\nKnowledge-Based Systems, 189:105102, 2020.\n\n- \\[74\\]\nXiaowen Dong, Pascal Frossard, Pierre Vandergheynst, and Nikolai Nefedov.\n\nClustering on multi-layer graphs via subspace analysis on grassmann manifolds.\n\nIEEE Transactions on signal processing, 62(4):905‚Äì918, 2013.\n\n- \\[75\\]\nThomas Bendokat, Ralf Zimmermann, and P-A Absil.\n\nA grassmann manifold handbook: Basic geometry and computational aspects.\n\nAdvances in Computational Mathematics, 50(1):1‚Äì51, 2024.\n\n- \\[76\\]\nGuangfeng Lin, Jing Wang, Kaiyang Liao, Fan Zhao, and Wanjun Chen.\n\nStructure fusion based on graph convolutional networks for node classification in citation networks.\n\nElectronics, 9(3):432, 2020.\n\n- \\[77\\]\nRussell Merris.\n\nA survey of graph laplacians.\n\nLinear and Multilinear Algebra, 39(1-2):19‚Äì31, 1995.\n\n- \\[78\\]\nZhongxiao Jia and GW Stewart.\n\nAn analysis of the rayleigh‚Äìritz method for approximating eigenspaces.\n\nMathematics of computation, 70(234):637‚Äì647, 2001.\n\n- \\[79\\]\nErxue Min, Runfa Chen, Yatao Bian, Tingyang Xu, Kangfei Zhao, Wenbing Huang, Peilin Zhao, Junzhou Huang, Sophia Ananiadou, and Yu Rong.\n\nTransformer for graphs: An overview from architecture perspective.\n\narXiv preprint arXiv:2202.08455, 2022.\n\n- \\[80\\]\nWeihua Hu, Matthias Fey, Marinka Zitnik, Yuxiao Dong, Hongyu Ren, Bowen Liu, Michele Catasta, and Jure Leskovec.\n\nOpen graph benchmark: Datasets for machine learning on graphs.\n\narXiv preprint arXiv:2005.00687, 2020.\n\n- \\[81\\]\nBoris Knyazev, Graham W Taylor, and Mohamed Amer.\n\nUnderstanding attention and generalization in graph neural networks.\n\nAdvances in neural information processing systems, 32, 2019.\n\n- \\[82\\]\nGuohao Li, Chenxin Xiong, Ali Thabet, and Bernard Ghanem.\n\nDeepergcn: All you need to train deeper gcns.\n\narXiv preprint arXiv:2006.07739, 2020.\n\n- \\[83\\]\nElli Voudigari, Nikos Salamanos, Theodore Papageorgiou, and Emmanuel J Yannakoudakis.\n\nRank degree: An efficient algorithm for graph sampling.\n\nIn 2016 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining (ASONAM), pages 120‚Äì129. IEEE, 2016.\n\n- \\[84\\]\nMichael Hamann, Gerd Lindner, Henning Meyerhenke, Christian L Staudt, and Dorothea Wagner.\n\nStructure-preserving sparsification methods for social networks.\n\nSocial Network Analysis and Mining, 6:1‚Äì22, 2016.\n\n- \\[85\\]\nJure Leskovec, Jon M. Kleinberg, and Christos Faloutsos.\n\nGraph evolution: Densification and shrinking diameters.\n\nACM Trans. Knowl. Discov. Data, 1:2, 2006.\n\n- \\[86\\]\nAllan H Murphy.\n\nThe finley affair: A signal event in the history of forecast verification.\n\nWeather and forecasting, 11(1):3‚Äì20, 1996.\n\n- \\[87\\]\nVenu Satuluri, Srinivasan Parthasarathy, and Yiye Ruan.\n\nLocal graph sparsification for scalable clustering.\n\nIn Proceedings of the 2011 ACM SIGMOD International Conference on Management of data, pages 721‚Äì732, 2011.\n\n- \\[88\\]\nXiaowei Xu, Nurcan Yuruk, Zhidan Feng, and Thomas AJ Schweiger.\n\nScan: a structural clustering algorithm for networks.\n\nIn Proceedings of the 13th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 824‚Äì833, 2007.\n\n- \\[89\\]\nYuwen Wang, Shunyu Liu, Kaixuan Chen, Tongtian Zhu, Ji Qiao, Mengjie Shi, Yuanyu Wan, and Mingli Song.\n\nAdversarial erasing with pruned elements: Towards better graph lottery ticket.\n\narXiv preprint arXiv:2308.02916, 2023.\n\n- \\[90\\]\nBo Hui, Da Yan, Xiaolong Ma, and Wei-Shinn Ku.\n\nRethinking graph lottery tickets: Graph sparsity matters.\n\nIn The Eleventh International Conference on Learning Representations, 2023.\n\n- \\[91\\]\nYongduo Sui, Xiang Wang, Tianlong Chen, Xiangnan He, and Tat-Seng Chua.\n\nInductive lottery ticket learning for graph neural networks.\n\n2021.\n\n- \\[92\\]\nGuohao Li, Matthias M√ºller, Bernard Ghanem, and Vladlen Koltun.\n\nTraining graph neural networks with 1000 layers.\n\nIn International conference on machine learning, pages 6437‚Äì6449. PMLR, 2021.\n\n- \\[93\\]\nYangkun Wang, Jiarui Jin, Weinan Zhang, Yong Yu, Zheng Zhang, and David Wipf.\n\nBag of tricks for node classification with graph neural networks.\n\narXiv preprint arXiv:2103.13355, 2021.\n\n- \\[94\\]\nLanning Wei, Huan Zhao, Quanming Yao, and Zhiqiang He.\n\nPooling architecture search for graph classification.\n\nIn Proceedings of the 30th ACM International Conference on Information & Knowledge Management, pages 2091‚Äì2100, 2021.\n\n- \\[95\\]\nNamhoon Lee, Thalaiyasingam Ajanthan, and Philip HS Torr.\n\nSnip: Single-shot network pruning based on connection sensitivity.\n\narXiv preprint arXiv:1810.02340, 2018.\n\n- \\[96\\]\nKale-ab Tessera, Sara Hooker, and Benjamin Rosman.\n\nKeep the gradients flowing: Using gradient flow to study sparse network optimization.\n\narXiv preprint arXiv:2102.01670, 2021.\n\n- \\[97\\]\nTim Dettmers, Luke Zettlemoyer, and Zhang.\n\nSparse networks from scratch: Faster training without losing performance.\n\narXiv preprint arXiv:1907.04840, 2019.\n\n- \\[98\\]\nVijay Prakash Dwivedi, Chaitanya K Joshi, Thomas Laurent, Yoshua Bengio, and Xavier Bresson.\n\nBenchmarking graph neural networks.\n\narXiv preprint arXiv:2003.00982, 2020.\n\n- \\[99\\]\nN. Talati, H. Ye, S. Vedula, K. Chen, Y. Chen, D. Liu, Y. Yuan, D. Blaauw, A. Bronstein, T. Mudge, and R. Dreslinski.\n\nMint: An accelerator for mining temporal motifs.\n\nIn 2022 55th IEEE/ACM International Symposium on Microarchitecture (MICRO), pages 1270‚Äì1287, Los Alamitos, CA, USA, oct 2022. IEEE Computer Society.\n\n- \\[100\\]\nChristian L Staudt, Aleksejs Sazonovs, and Henning Meyerhenke.\n\nNetworkit: A tool suite for large-scale complex network analysis.\n\nNetwork Science, 4(4):508‚Äì530, 2016.\n\n\n## Appendix A Notations\n\nWe conclude the commonly used notations throughout the manuscript in [Table5](https://ar5iv.org/html/2405.14260#A1.T5 \"In Appendix A Notations ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\nTable 5: The notations that are commonly used in the manuscript.\n\n|     |     |\n| --- | --- |\n| Notation | Definition |\n| ùí¢={ùí±,‚Ñ∞}={ùêÄ,ùêó}ùí¢ùí±‚Ñ∞ùêÄùêó\\\\mathcal{G}=\\\\left\\\\{\\\\mathcal{V},\\\\mathcal{E}\\\\right\\\\}=\\\\left\\\\{\\\\mathbf{A},\\\\mathbf{X}\\\\right\\\\} | Input graph |\n| ùêÄùêÄ\\\\mathbf{A} | Input adjacency matrix |\n| ùêóùêó\\\\mathbf{X} | Node feature matrix |\n| ùêãùêã\\\\mathbf{L} | Graph Laplacian matrix |\n| COMB‚Äã(‚ãÖ)COMB‚ãÖ\\\\texttt{COMB}(\\\\cdot) | GNN ego-node transformation function |\n| AGGR‚Äã(‚ãÖ)AGGR‚ãÖ\\\\texttt{AGGR}(\\\\cdot) | GNN message aggregation function |\n| ESMB‚Äã(‚ãÖ)ESMB‚ãÖ\\\\texttt{ESMB}(\\\\cdot) | Sparse graph combination function |\n| s%percentùë†s\\\\% | Sparsity ratio (the ratio of removed edges) |\n| visubscriptùë£ùëñv\\_{i} | The iùëñi-th node in ùí¢ùí¢\\\\mathcal{G} |\n| xisubscriptùë•ùëñx\\_{i} | Node feature vector for visubscriptùë£ùëñv\\_{i} |\n| ùí¢(i)superscriptùí¢ùëñ\\\\mathcal{G}^{(i)} | The 1-hop ego-graph for visubscriptùë£ùëñv\\_{i} |\n| œï‚Äã(ùí¢(i))italic-œïsuperscriptùí¢ùëñ\\\\phi(\\\\mathcal{G}^{(i)}) | Routing network |\n| KùêæK | The number of total sparsifier experts |\n| kùëòk | The number of selected sparsifier experts per node |\n| Wg,WnsubscriptùëäùëîsubscriptùëäùëõW\\_{g},W\\_{n} | Trainable parameters in the routing network |\n| Œ∫‚Äã(ùí¢)ùúÖùí¢\\\\kappa(\\\\mathcal{G}) | A graph sparsifier |\n| ùí¢m(i)subscriptsuperscriptùí¢ùëñùëö\\\\mathcal{G}^{(i)}\\_{m} | The sparse ego-graph of visubscriptùë£ùëñv\\_{i} produced by the mùëöm-th graph sparsifier |\n| ùí¢(i)^={ùí±(i)^,‚Ñ∞(i)^}^superscriptùí¢ùëñ^superscriptùí±ùëñ^superscript‚Ñ∞ùëñ\\\\widehat{\\\\mathcal{G}^{(i)}}=\\\\{\\\\widehat{\\\\mathcal{V}^{(i)}},\\\\widehat{\\\\mathcal{E}^{(i)}}\\\\} | The ensemble sparse graph produced by MoG for visubscriptùë£ùëñv\\_{i} |\n| ‚Ñ∞p(i)superscriptsubscript‚Ñ∞ùëùùëñ\\\\mathcal{E}\\_{p}^{(i)} | Edges removed surrounding visubscriptùë£ùëñv\\_{i} |\n| cm‚Äã(ei‚Äãj)superscriptùëêùëösubscriptùëíùëñùëóc^{m}(e\\_{ij}) | Prior guidance on edge importance ei‚Äãjsubscriptùëíùëñùëóe\\_{ij} |\n\n## Appendix B Deatils on Pruning Criteria\n\nIn this section, we will thoroughly explain the four pruning criteria we selected and the rationale behind these choices.\n\n- ‚Ä¢\n\n\nEdge degree of ei‚Äãjsubscriptùëíùëñùëóe\\_{ij} is defined as follows:\n\n\n\n\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Degree‚Å°(ei‚Äãj)=12‚Äã(\\|ùí©‚Äã(vi)+ùí©‚Äã(vj)\\|).Degreesubscriptùëíùëñùëó12ùí©subscriptùë£ùëñùí©subscriptùë£ùëó\\\\operatorname{Degree}\\\\;(e\\_{ij})=\\\\frac{1}{2}\\\\left(\\|\\\\mathcal{N}(v\\_{i})+\\\\mathcal{N}(v\\_{j})\\|\\\\right). |  | (17) |\n\n\n\nPrevious methods \\[ [27](https://ar5iv.org/html/2405.14260#bib.bib27 \"\"), [68](https://ar5iv.org/html/2405.14260#bib.bib68 \"\")\\] have explicitly or implicitly used edge degree for graph sparsification. Intuitively, edges with higher degrees are more replaceable. \\[ [27](https://ar5iv.org/html/2405.14260#bib.bib27 \"\")\\] further formalizes this intuition from the perspective of bridge edges.\n\n- ‚Ä¢\n\n\nJaccard Similarity\\[ [86](https://ar5iv.org/html/2405.14260#bib.bib86 \"\")\\] measures the similarity between two sets by computing the portion of shared neighbors between two nodes (visubscriptùë£ùëñv\\_{i}and vjsubscriptùë£ùëóv\\_{j}), as defined below:\n\n\n\n\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | JaccradSimilarityvi,vj)=\\|ùí©‚Äã(vi)‚à©ùí©‚Äã(vj)\\|\\|ùí©‚Äã(vi)‚à™ùí©‚Äã(vj)\\|.\\\\operatorname{JaccradSimilarity}\\\\;v\\_{i},v\\_{j})=\\\\frac{\\|\\\\mathcal{N}(v\\_{i})\\\\cap\\\\mathcal{N}(v\\_{j})\\|}{\\|\\\\mathcal{N}(v\\_{i})\\\\cup\\\\mathcal{N}(v\\_{j})\\|}. |  | (18) |\n\n\n\n\n\nJaccard similarity is widely used for its capacity for detecting clusters, hubs, and outliers on social networks \\[ [86](https://ar5iv.org/html/2405.14260#bib.bib86 \"\"), [88](https://ar5iv.org/html/2405.14260#bib.bib88 \"\"), [87](https://ar5iv.org/html/2405.14260#bib.bib87 \"\")\\].\n\n- ‚Ä¢\n\n\nEffective Resistance, derived from the analogy to electrical circuits, is applied to graphs where edges represent resistors. The effective resistance of an edge is defined as the potential difference generated when a unit current is introduced at one vertex and withdrawn from the other. Once the effective resistance is calculated, a sparsified subgraph can be constructed by selecting edges with probabilities proportional to their effective resistances. Notably, \\[ [29](https://ar5iv.org/html/2405.14260#bib.bib29 \"\")\\] proved that the quadratic form of the Laplacian for such sparsified graphs closely approximates that of the original graph. Consequently, the following inequality holds for the sparsified subgraph with high probability:\n\n\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ‚àÄùíô‚àà‚Ñù\\|ùí±\\|(1‚àíœµ)‚ÄãùíôT‚Äãùêã‚Äãùíô‚â§ùíôT‚Äãùêã~‚Äãùíô‚â§(1+œµ)‚ÄãùíôT‚Äãùêã‚Äãùíô,formulae-sequencefor-allùíôsuperscript‚Ñùùí±1italic-œµsuperscriptùíôùëáùêãùíôsuperscriptùíôùëá~ùêãùíô1italic-œµsuperscriptùíôùëáùêãùíô\\\\forall\\\\boldsymbol{x}\\\\in\\\\mathbb{R}^{\\|\\\\mathcal{V}\\|}\\ \\ \\ (1-\\\\epsilon)\\\\boldsymbol{x}^{T}\\\\mathbf{L}\\\\boldsymbol{x}\\\\leq\\\\boldsymbol{x}^{T}\\\\tilde{\\\\mathbf{L}}\\\\boldsymbol{x}\\\\leq(1+\\\\epsilon)\\\\boldsymbol{x}^{T}\\\\mathbf{L}\\\\boldsymbol{x}, |  | (19) |\n\n\n\nwhere ùêã~~ùêã\\\\tilde{\\\\mathbf{L}} is the Laplacian of the sparsified graph, and œµ>0italic-œµ0\\\\epsilon>0 is a small number. The insight is that effective resistance reflects the significance of an edge. Effective resistance aims to preserve the quadratic form of the graph Laplacian. This property makes it suitable for applications relying on the quadratic form of the graph Laplacian, such as min-cut/max-flow problems. For computation simplicity, we do not directly utilize the definition of effective resistance, and use its approximation version \\[ [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\")\\].\n\n- ‚Ä¢\n\n\nGradient Magnitude, a widely used pruning criterion, is prevalent not only in the field of graph sparsification but also in classical neural network pruning. Numerous studies \\[ [95](https://ar5iv.org/html/2405.14260#bib.bib95 \"\"), [96](https://ar5iv.org/html/2405.14260#bib.bib96 \"\"), [97](https://ar5iv.org/html/2405.14260#bib.bib97 \"\")\\] leverage gradient magnitude to estimate parameter importance. Specifically for graph sparsification, MGSpar \\[ [71](https://ar5iv.org/html/2405.14260#bib.bib71 \"\")\\] was the first to propose using meta-gradient to estimate edge importance. We consider gradient magnitude a crucial indicator of the graph‚Äôs topological structure during training. Therefore, we explicitly design some sparsifier experts to focus on this information.\n\n\n## Appendix C Graph Mixture on Grassmann Manifold\n\nIn this section, we detail how we leverage the concept of Grassmann Manifold to effectively combine different sparse (ego-)graphs output by various sparsifiers.\n\nAccording to [Equation10](https://ar5iv.org/html/2405.14260#S3.E10 \"In Definition 1 (Grassmann manifold). ‚Ä£ 3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"), each orthonormal matrix represents a unique subspace and thus corresponds to a distinct point on the Grassmann manifold \\[ [76](https://ar5iv.org/html/2405.14260#bib.bib76 \"\")\\]. This applies to the eigenvector matrix of the normalized Laplacian matrix (ùêî=ùêã\\[:,:p\\]‚àà‚Ñùn√óp\\\\mathbf{U}=\\\\mathbf{L}\\[:,:p\\]\\\\in\\\\mathbb{R}^{n\\\\times p}), which comprises the first pùëùp eigenvectors and is orthonormal \\[ [77](https://ar5iv.org/html/2405.14260#bib.bib77 \"\")\\], and thereby can be mapped onto the Grassmann manifold. Additionally, each row of the eigenvector matrix encapsulates the spectral embedding of each node in a p-dimensional space, where adjacent nodes have similar embedding vectors. This subspace representation, summarizing graph information, is applicable to various tasks such as clustering, classification, and graph merging \\[ [74](https://ar5iv.org/html/2405.14260#bib.bib74 \"\")\\].\n\nIn the context of MoG, we aim to efficiently find the final version that aggregates all the excellent properties of each point‚Äôs kùëòk versions of sparse ego-graph {ùí¢~m(i)}m=1ksuperscriptsubscriptsubscriptsuperscript~ùí¢ùëñùëöùëö1ùëò\\\\{\\\\widetilde{\\\\mathcal{G}}^{(i)}\\_{m}\\\\}\\_{m=1}^{k} on the Grassmann Manifold. Moreover, this should guided by the expert scores computed by the routing network in [Section3.2](https://ar5iv.org/html/2405.14260#S3.SS2 \"3.2 Routing to Diverse Experts ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"). Let ùêÉmsubscriptùêÉùëö\\\\mathbf{D}\\_{m} and ùêÄmsubscriptùêÄùëö\\\\mathbf{A}\\_{m} denote the degree matrix and the adjacency matrix for ùí¢~m(i)subscriptsuperscript~ùí¢ùëñùëö\\\\widetilde{\\\\mathcal{G}}^{(i)}\\_{m} (we omit the superscript (‚ãÖ)(i)superscript‚ãÖùëñ(\\\\cdot)^{(i)} denoting visubscriptùë£ùëñv\\_{i} for simplicity in the subsequent expressions), then the normalized graph Laplacian is defined as:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùêãm=ùêÉm‚àí12‚Äã(ùêÉm‚àíùêÄm)‚ÄãùêÉm12.subscriptùêãùëösuperscriptsubscriptùêÉùëö12subscriptùêÉùëösubscriptùêÄùëösuperscriptsubscriptùêÉùëö12\\\\mathbf{L}\\_{m}=\\\\mathbf{D}\\_{m}^{-\\\\frac{1}{2}}(\\\\mathbf{D}\\_{m}-\\\\mathbf{A}\\_{m})\\\\mathbf{D}\\_{m}^{\\\\frac{1}{2}}. |  | (20) |\n\nGiven the graph Laplacian ùêãmsubscriptùêãùëö\\\\mathbf{L}\\_{m} for each sparse graph, we calculate the spectral embedding matrix ùêîmsubscriptùêîùëö\\\\mathbf{U}\\_{m} through trace minimization:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | minùêîm‚àà‚Ñù\\|ùí©‚Äã(vm)\\|√óp‚Å°tr‚Å°(ùêîm‚ä§‚Äãùêãm‚Äãùêîm),s.t.‚Å°ùêîm‚ä§‚Äãùêîm=ùêà,\\\\min\\_{\\\\mathbf{U}\\_{m}\\\\in\\\\mathbb{R}^{\\|\\\\mathcal{N}(v\\_{m})\\|\\\\times p}}\\\\operatorname{tr}\\\\;(\\\\mathbf{U}\\_{m}^{\\\\top}\\\\mathbf{L}\\_{m}\\\\mathbf{U}\\_{m}),\\\\;\\\\;\\\\operatorname{s.t.}\\\\;\\\\mathbf{U}\\_{m}^{\\\\top}\\\\mathbf{U}\\_{m}=\\\\mathbf{I}, |  | (21) |\n\nwhich can be solved by the Rayleigh-Ritz theorem. As mentioned above, each point on the Grassmann manifold can be represented by an orthonormal matrix ùêò‚àà‚Ñù\\|ùí©‚Äã(vi)\\|√ópùêòsuperscript‚Ñùùí©subscriptùë£ùëñùëù\\\\mathbf{Y}\\\\in\\\\mathbb{R}^{\\|\\\\mathcal{N}(v\\_{i})\\|\\\\times p} whose columns span the corresponding pùëùp-dimensional subspace in ‚Ñù\\|ùí©‚Äã(vi)\\|√ópsuperscript‚Ñùùí©subscriptùë£ùëñùëù\\\\mathbb{R}^{\\|\\\\mathcal{N}(v\\_{i})\\|\\\\times p}. The distance between such subspaces can be computed as a set of principal angles {Œ∏i}i=1ksuperscriptsubscriptsubscriptùúÉùëñùëñ1ùëò\\\\{\\\\theta\\_{i}\\\\}\\_{i=1}^{k} between these subspaces. \\[ [74](https://ar5iv.org/html/2405.14260#bib.bib74 \"\")\\] showed that the projection distance between two subspaces ùêò1subscriptùêò1\\\\mathbf{Y}\\_{1} and ùêò2subscriptùêò2\\\\mathbf{Y}\\_{2} can be represented as a separate trace minimization problem:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | dproj2‚Äã(ùêò1,ùêò2)=‚àëi=1psin2‚Å°Œ∏i=k‚àítr‚Å°(ùêò1‚Äãùêò1‚ä§‚Äãùêò2‚Äãùêò2‚ä§).subscriptsuperscriptùëë2projsubscriptùêò1subscriptùêò2superscriptsubscriptùëñ1ùëùsuperscript2subscriptùúÉùëñùëòtrsubscriptùêò1superscriptsubscriptùêò1topsubscriptùêò2superscriptsubscriptùêò2topd^{2}\\_{\\\\text{proj}}(\\\\mathbf{Y}\\_{1},\\\\mathbf{Y}\\_{2})=\\\\sum\\_{i=1}^{p}\\\\sin^{2}{\\\\theta\\_{i}}=k-\\\\operatorname{tr}\\\\;(\\\\mathbf{Y}\\_{1}\\\\mathbf{Y}\\_{1}^{\\\\top}\\\\mathbf{Y}\\_{2}\\\\mathbf{Y}\\_{2}^{\\\\top}). |  | (22) |\n\nBased on this, we further define the projection of the final representative subspace ùêîùêî\\\\mathbf{U} and the kùëòk sparse candidate subspace {ùêîm}m=1ksuperscriptsubscriptsubscriptùêîùëöùëö1ùëò\\\\{\\\\mathbf{U}\\_{m}\\\\}\\_{m=1}^{k}:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | dproj2‚Äã(ùêî,{ùêîm}m=1k)=‚àëm=1kdproj2‚Äã(ùêî,ùêîm)=p√ók‚àí‚àëm=1ktr‚Å°(ùêîùêî‚ä§‚Äãùêîm‚Äãùêîm‚ä§),subscriptsuperscriptùëë2projùêîsuperscriptsubscriptsubscriptùêîùëöùëö1ùëòsuperscriptsubscriptùëö1ùëòsubscriptsuperscriptùëë2projùêîsubscriptùêîùëöùëùùëòsuperscriptsubscriptùëö1ùëòtrsuperscriptùêîùêîtopsubscriptùêîùëösuperscriptsubscriptùêîùëötopd^{2}\\_{\\\\text{proj}}(\\\\mathbf{U},\\\\{\\\\mathbf{U}\\_{m}\\\\}\\_{m=1}^{k})=\\\\sum\\_{m=1}^{k}d^{2}\\_{\\\\text{proj}}(\\\\mathbf{U},\\\\mathbf{U}\\_{m})=p\\\\times k-\\\\sum\\_{m=1}^{k}\\\\operatorname{tr}\\\\;(\\\\mathbf{U}\\\\mathbf{U}^{\\\\top}\\\\mathbf{U}\\_{m}\\\\mathbf{U}\\_{m}^{\\\\top}), |  | (23) |\n\nwhich ensures that individual subspaces are close to the final representative subspace ùêîùêî\\\\mathbf{U}.\n\nFinally, to maintain the original vertex connectivity from all kùëòk sparse ego-graphs and emphasize the connectivity relationship from more reliable sparsifiers (with higher expert scores), we propose the following objective function:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | minùêîm‚àà‚Ñù\\|ùí©‚Äã(vm)\\|√óp‚Äã‚àëm=1kEm(i)‚Äã(p√ók‚àí‚àëm=1ktr‚Å°(ùêîùêî‚ä§‚Äãùêîm‚Äãùêîm‚ä§)),subscriptsubscriptùêîùëösuperscript‚Ñùùí©subscriptùë£ùëöùëùsuperscriptsubscriptùëö1ùëòsubscriptsuperscriptùê∏ùëñùëöùëùùëòsuperscriptsubscriptùëö1ùëòtrsuperscriptùêîùêîtopsubscriptùêîùëösuperscriptsubscriptùêîùëötop\\\\min\\_{\\\\mathbf{U}\\_{m}\\\\in\\\\mathbb{R}^{\\|\\\\mathcal{N}(v\\_{m})\\|\\\\times p}}\\\\sum\\_{m=1}^{k}E^{(i)}\\_{m}\\\\left(p\\\\times k-\\\\sum\\_{m=1}^{k}\\\\operatorname{tr}\\\\;(\\\\mathbf{U}\\\\mathbf{U}^{\\\\top}\\\\mathbf{U}\\_{m}\\\\mathbf{U}\\_{m}^{\\\\top})\\\\right), |  | (24) |\n\nwhere Em(i)subscriptsuperscriptùê∏ùëñùëöE^{(i)}\\_{m} represents the expert score of the node visubscriptùë£ùëñv\\_{i}‚Äôs mùëöm-th sparsifier expert. Based on [Equations21](https://ar5iv.org/html/2405.14260#A3.E21 \"In Appendix C Graph Mixture on Grassmann Manifold ‚Ä£ Graph Sparsification via Mixture of Graphs\") and [24](https://ar5iv.org/html/2405.14260#A3.E24 \"Equation 24 ‚Ä£ Appendix C Graph Mixture on Grassmann Manifold ‚Ä£ Graph Sparsification via Mixture of Graphs\"), we present the overall objective:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | minùêî(ùê¢)‚àà‚Ñù\\|ùí©‚Äã(vi)\\|√óp‚Äã‚àëm=1k(tr‚Å°(ùêî(ùê¢)‚ä§‚Äãùêãm‚Äãùêî(i))‚èü(1) node connectivity+Em(i)‚ãÖd2‚Äã(ùêî(i),ùêîm(i))‚èü(2) subspace distance),s.t.‚Å°ùêî(ùê¢)‚ä§‚Äãùêî(ùê¢)=ùêà.\\\\min\\_{\\\\mathbf{U^{(i)}}\\\\in\\\\mathbb{R}^{\\|\\\\mathcal{N}(v\\_{i})\\|\\\\times p}}\\\\sum\\_{m=1}^{k}\\\\left(\\\\underbrace{\\\\operatorname{tr}(\\\\mathbf{U^{(i)}}^{\\\\top}\\\\mathbf{L}\\_{m}\\\\mathbf{U}^{(i)})}\\_{\\\\textrm{(1) node connectivity}}+\\\\underbrace{E^{(i)}\\_{m}\\\\cdot d^{2}(\\\\mathbf{U}^{(i)},\\\\mathbf{U}^{(i)}\\_{m})}\\_{\\\\textrm{(2) subspace distance}}\\\\right),\\\\operatorname{s.t.}\\\\mathbf{U^{(i)}}^{\\\\top}\\\\mathbf{U^{(i)}}=\\\\mathbf{I}. |  | (25) |\n\nAccording to Rayleigh-Ritz theorem \\[ [74](https://ar5iv.org/html/2405.14260#bib.bib74 \"\")\\], we give the closed-form solution of [Equation25](https://ar5iv.org/html/2405.14260#A3.E25 \"In Appendix C Graph Mixture on Grassmann Manifold ‚Ä£ Graph Sparsification via Mixture of Graphs\") as follows:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùêã(i)^=‚àëm=1k(ùêãm‚àíEm(i)‚ãÖùêî(ùê¢)‚ä§‚Äãùêî(ùê¢)).^superscriptùêãùëñsuperscriptsubscriptùëö1ùëòsubscriptùêãùëö‚ãÖsuperscriptsubscriptùê∏ùëöùëñsuperscriptsuperscriptùêîùê¢topsuperscriptùêîùê¢\\\\widehat{\\\\mathbf{L}^{(i)}}=\\\\sum\\_{m=1}^{k}\\\\left(\\\\mathbf{L}\\_{m}-E\\_{m}^{(i)}\\\\cdot\\\\mathbf{U^{(i)}}^{\\\\top}\\\\mathbf{U^{(i)}}\\\\right). |  | (26) |\n\nSince computations involving the Grassmann manifold unavoidably entail eigenvalue decomposition, concerns about computational complexity may arise. However, given that MoG only operates mixtures on the ego-graph of each node, such computational burden is entirely acceptable. Specific complexity analyses are presented in [AppendixE](https://ar5iv.org/html/2405.14260#A5 \"Appendix E Complexity Analysis ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\n## Appendix D Algorithm Workflow\n\nThe algorithm framework is presented in Algo. [1](https://ar5iv.org/html/2405.14260#algorithm1 \"Algorithm 1 ‚Ä£ Appendix D Algorithm Workflow ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\nInput :ùí¢=(ùêÄ,ùêó)ùí¢ùêÄùêó\\\\mathcal{G}=(\\\\mathbf{A},\\\\mathbf{X}), GNN model f‚Äã(ùí¢,ùöØ)ùëìùí¢ùöØf(\\\\mathcal{G},\\\\mathbf{\\\\Theta}), , epoch number QùëÑQ.\n\nOutput : Sparse graph ùí¢sub={ùí±,‚Ñ∞‚Ä≤}superscriptùí¢subùí±superscript‚Ñ∞‚Ä≤\\\\mathcal{G}^{\\\\text{sub}}=\\\\{\\\\mathcal{V},\\\\mathcal{E}^{\\\\prime}\\\\}\n\nfor _iteration q‚Üê1‚Üêùëû1q\\\\leftarrow 1toQùëÑQ_ do\n\n/\\\\* Ego-graph decomposition \\*/\n\n\nDecompose ùí¢ùí¢\\\\mathcal{G} into ego-graph representations {ùí¢(1),ùí¢(2),‚ãØ,ùí¢(N)}superscriptùí¢1superscriptùí¢2‚ãØsuperscriptùí¢ùëÅ\\\\{\\\\mathcal{G}^{(1)},\\\\mathcal{G}^{(2)},\\\\cdots,\\\\mathcal{G}^{(N)}\\\\}.\n\n/\\\\* Sparsifier expert allocation \\*/\n\nfor _node i‚Üê1‚Üêùëñ1i\\\\leftarrow 1to\\|ùí±\\|ùí±\\|\\\\mathcal{V}\\|_ do\n\nCalculate the total KùêæK expert score of visubscriptùë£ùëñv\\_{i} by routing network œà‚Äã(xi)ùúìsubscriptùë•ùëñ\\\\psi(x\\_{i});\n\n‚ñ∑‚ñ∑\\\\trianglerightEq. [3](https://ar5iv.org/html/2405.14260#S3.E3 \"Equation 3 ‚Ä£ 3.2 Routing to Diverse Experts ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\")\n\nSelect kùëòk sparsifier expert for node visubscriptùë£ùëñv\\_{i} by Softmax‚Å°(TopK‚Å°(œà‚Äã(xi),k))SoftmaxTopKùúìsubscriptùë•ùëñùëò\\\\operatorname{Softmax}(\\\\operatorname{TopK}(\\\\psi(x\\_{i}),k));\n\n‚ñ∑‚ñ∑\\\\trianglerightEq. [3](https://ar5iv.org/html/2405.14260#S3.E3 \"Equation 3 ‚Ä£ 3.2 Routing to Diverse Experts ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\")\n\n    end for\n\n/\\\\* Produce sparse graph condidates \\*/\n\nfor _iteration i‚Üê1‚Üêùëñ1i\\\\leftarrow 1to\\|ùí±\\|ùí±\\|\\\\mathcal{V}\\|_ do\n\nfor _sparsifier index m‚Üê1‚Üêùëö1m\\\\leftarrow 1tomùëöm_ do\n\nSparisifier Œ∫msuperscriptùúÖùëö\\\\kappa^{m} determines which edges to remove by ‚Ñ∞p(i)=TopK‚Å°(‚àíCm‚Äã(‚Ñ∞),‚åà\\|‚Ñ∞(i)\\|√ós%‚åâ)superscriptsubscript‚Ñ∞ùëùùëñTopKsuperscriptùê∂ùëö‚Ñ∞superscript‚Ñ∞ùëñpercentùë†\\\\mathcal{E}\\_{p}^{(i)}=\\\\operatorname{TopK}\\\\left(-C^{m}(\\\\mathcal{E}),\\\\lceil\\|\\\\mathcal{E}^{(i)}\\|\\\\times s\\\\%\\\\rceil\\\\right);\n\n‚ñ∑‚ñ∑\\\\trianglerightEq. [8](https://ar5iv.org/html/2405.14260#S3.E8 \"Equation 8 ‚Ä£ 3.3 Customized Sparsifier Modeling ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\")\n\nProduce sparse graph candidate ùí¢~(i)=Œ∫m‚Äã(ùí¢(i))={ùí±(i),‚Ñ∞(i)‚àñ‚Ñ∞p(i)}superscript~ùí¢ùëñsuperscriptùúÖùëösuperscriptùí¢ùëñsuperscriptùí±ùëñsuperscript‚Ñ∞ùëñsuperscriptsubscript‚Ñ∞ùëùùëñ\\\\widetilde{\\\\mathcal{G}}^{(i)}=\\\\kappa^{m}(\\\\mathcal{G}^{(i)})=\\\\{\\\\mathcal{V}^{(i)},\\\\mathcal{E}^{(i)}\\\\setminus\\\\mathcal{E}\\_{p}^{(i)}\\\\}.\n\n    end for\n\n/\\\\* Ensenmble sparse graphs on Grassmann manifold \\*/\n\nCalculate the ensemble graph‚Äôs graph Laplacian by ùêã(i)^=‚àëm=1k(ùêãm‚àíEm(i)‚ãÖùêî(ùê¢)‚ä§‚Äãùêî(ùê¢))^superscriptùêãùëñsuperscriptsubscriptùëö1ùëòsubscriptùêãùëö‚ãÖsuperscriptsubscriptùê∏ùëöùëñsuperscriptsuperscriptùêîùê¢topsuperscriptùêîùê¢\\\\widehat{\\\\mathbf{L}^{(i)}}=\\\\sum\\_{m=1}^{k}\\\\left(\\\\mathbf{L}\\_{m}-E\\_{m}^{(i)}\\\\cdot\\\\mathbf{U^{(i)}}^{\\\\top}\\\\mathbf{U^{(i)}}\\\\right);\n\n‚ñ∑‚ñ∑\\\\trianglerightEq. [12](https://ar5iv.org/html/2405.14260#S3.E12 \"Equation 12 ‚Ä£ 3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\")\n\nObtain visubscriptùë£ùëñv\\_{i}‚Äôs final sparse graph by ESMB({ùí¢(i)^={ùêÉ‚àíùêã(i)^,ùêó(i)})\\\\texttt{ESMB}(\\\\{\\\\widehat{\\\\mathcal{G}^{(i)}}=\\\\{\\\\mathbf{D}-\\\\widehat{\\\\mathbf{L}^{(i)}},\\\\mathbf{X}^{(i)}\\\\});\n\n‚ñ∑‚ñ∑\\\\trianglerightEq. [13](https://ar5iv.org/html/2405.14260#S3.E13 \"Equation 13 ‚Ä£ 3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\")\n\nCompute visubscriptùë£ùëñv\\_{i}‚Äôs weighted sparsity by s(i)%=1k‚Äã‚àëm=1ksm%percentsuperscriptùë†ùëñ1ùëòsuperscriptsubscriptùëö1ùëòpercentsuperscriptùë†ùëös^{(i)}\\\\%=\\\\frac{1}{k}\\\\sum\\_{m=1}^{k}s^{m}\\\\%;\n\n‚ñ∑‚ñ∑\\\\trianglerightEq. [14](https://ar5iv.org/html/2405.14260#S3.E14 \"Equation 14 ‚Ä£ 3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\")\n\nPost-sparsify ùí¢(i)^^superscriptùí¢ùëñ\\\\widehat{\\\\mathcal{G}^{(i)}}: ùí¢(i)^‚Üê{TopK‚Å°(ùêÄ(i)^,\\|‚Ñ∞(i)\\|√ós(i)%),ùêó(i)}‚Üê^superscriptùí¢ùëñTopK^superscriptùêÄùëñsuperscript‚Ñ∞ùëñpercentsuperscriptùë†ùëñsuperscriptùêóùëñ\\\\widehat{\\\\mathcal{G}^{(i)}}\\\\leftarrow\\\\{\\\\operatorname{TopK}(\\\\widehat{\\\\mathbf{A}^{(i)}},\\|\\\\mathcal{E}^{(i)}\\|\\\\times s^{(i)}\\\\%),\\\\mathbf{X}^{(i)}\\\\};\n\n‚ñ∑‚ñ∑\\\\trianglerightEq. [14](https://ar5iv.org/html/2405.14260#S3.E14 \"Equation 14 ‚Ä£ 3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\")\n\n    end for\n\n/\\\\* Combine ego-graphs \\*/\n\nùí¢^‚Üê{ùí¢(1)^,ùí¢(2)^,‚ãØ,ùí¢(\\|ùí±\\|)^}‚Üê^ùí¢^superscriptùí¢1^superscriptùí¢2‚ãØ^superscriptùí¢ùí±\\\\widehat{\\\\mathcal{G}}\\\\leftarrow\\\\{\\\\widehat{\\\\mathcal{G}^{(1)}},\\\\widehat{\\\\mathcal{G}^{(2)}},\\\\cdots,\\\\widehat{\\\\mathcal{G}^{(\\|\\\\mathcal{V}\\|)}}\\\\}\n\n/\\\\* Standard GNN training \\*/\n\n\nFeed the sparse graph ùí¢^^ùí¢\\\\widehat{\\\\mathcal{G}} into GNN model for any kinds of downstream training ;\n\n‚ñ∑‚ñ∑\\\\trianglerightEq. [6](https://ar5iv.org/html/2405.14260#S3.E6 \"Equation 6 ‚Ä£ 3.2 Routing to Diverse Experts ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\")\n\nCompute loss ‚Ñítask+Œª‚ãÖ‚Ñíimportancesubscript‚Ñítask‚ãÖùúÜsubscript‚Ñíimportance\\\\mathcal{L}\\_{\\\\text{task}}+\\\\lambda\\\\cdot\\\\mathcal{L}\\_{\\\\text{importance}};\n\n‚ñ∑‚ñ∑\\\\trianglerightEq. [16](https://ar5iv.org/html/2405.14260#S3.E16 \"Equation 16 ‚Ä£ Additional Loss Functions ‚Ä£ 3.5 Training and Optimization ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\")\n\nBackpropagate to update GNN f‚Äã(ùí¢,ùöØ)ùëìùí¢ùöØf(\\\\mathcal{G},\\\\mathbf{\\\\Theta}), routing network œàùúì\\\\psi and sparsifiers {Œ∫m}m=1KsuperscriptsubscriptsuperscriptùúÖùëöùëö1ùêæ\\\\{\\\\kappa^{m}\\\\}\\_{m=1}^{K}.\n\nend for\n\nAlgorithm 1Algorithm workflow of MoG\n\n## Appendix E Complexity Analysis\n\nIn this section, we delve into a comprehensive analysis of the time and space complexity of MoG. Without loss of generality, we consider the scenario where MoG is applied to vanilla GCN. It is worth recalling that the forward time complexity of vanilla GCN is given by:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùí™‚Äã(L√ó\\|‚Ñ∞\\|√óD+L√ó\\|ùí±\\|√óD2),ùí™ùêø‚Ñ∞ùê∑ùêøùí±superscriptùê∑2\\\\mathcal{O}(L\\\\times\\|\\\\mathcal{E}\\|\\\\times D+L\\\\times\\|\\\\mathcal{V}\\|\\\\times D^{2}), |  | (27) |\n\nwhere LùêøL is the number of GNN layers, \\|‚Ñ∞\\|‚Ñ∞\\|\\\\mathcal{E}\\| and \\|ùí±\\|ùí±\\|\\\\mathcal{V}\\| denotes the number of edges and nodes, respectively, and Dùê∑D is the hidden dimension. Similarly, the forward space complexity of GCN is:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùí™‚Äã(L√ó\\|‚Ñ∞\\|+L√óD2+L√ó\\|ùí±\\|√óD)ùí™ùêø‚Ñ∞ùêøsuperscriptùê∑2ùêøùí±ùê∑\\\\mathcal{O}(L\\\\times\\|\\\\mathcal{E}\\|+L\\\\times D^{2}+L\\\\times\\|\\\\mathcal{V}\\|\\\\times D) |  | (28) |\n\nWhen MoG is applied to GCN, each sparsifier expert Œ∫‚Äã(‚ãÖ)ùúÖ‚ãÖ\\\\kappa(\\\\cdot) essentially introduces additional complexity equivalent to that of an FFN‚Å°(‚ãÖ)FFN‚ãÖ\\\\operatorname{FFN}(\\\\cdot), as depicted in [Equation9](https://ar5iv.org/html/2405.14260#S3.E9 \"In 3.3 Customized Sparsifier Modeling ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"). Incorporating the Sparse MoE-style structure, the forward time complexity of GCN+MoG becomes:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùí™‚Äã(L√ó\\|‚Ñ∞\\|√óD+L√ó\\|ùí±\\|√óD2+k√ó\\|‚Ñ∞\\|√óD√óDs),ùí™ùêø‚Ñ∞ùê∑ùêøùí±superscriptùê∑2ùëò‚Ñ∞ùê∑superscriptùê∑ùë†\\\\mathcal{O}(L\\\\times\\|\\\\mathcal{E}\\|\\\\times D+L\\\\times\\|\\\\mathcal{V}\\|\\\\times D^{2}+k\\\\times\\|\\\\mathcal{E}\\|\\\\times D\\\\times D^{s}), |  | (29) |\n\nwhere Dssuperscriptùê∑ùë†D^{s} represents the hidden dimension of the feed-forward network in [Equation9](https://ar5iv.org/html/2405.14260#S3.E9 \"In 3.3 Customized Sparsifier Modeling ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") and kùëòk denotes the number of selected experts. Similarly, the forward space complexity is increased to:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùí™‚Äã(L√ó\\|‚Ñ∞\\|+L√óD2+L√ó\\|ùí±\\|√óD+k√ó\\|‚Ñ∞\\|√óD√óDs).ùí™ùêø‚Ñ∞ùêøsuperscriptùê∑2ùêøùí±ùê∑ùëò‚Ñ∞ùê∑superscriptùê∑ùë†\\\\mathcal{O}(L\\\\times\\|\\\\mathcal{E}\\|+L\\\\times D^{2}+L\\\\times\\|\\\\mathcal{V}\\|\\\\times D+k\\\\times\\|\\\\mathcal{E}\\|\\\\times D\\\\times D^{s}). |  | (30) |\n\nIt is noteworthy that we omit the analysis for the routing network, as its computational cost is meanwhile negligible compared to the cost of selected experts, since both Wg‚àà‚ÑùK√óFsubscriptùëäùëîsuperscript‚ÑùùêæùêπW\\_{g}\\\\in\\\\mathbb{R}^{K\\\\times F} and Wn‚àà‚ÑùK√óFsubscriptùëäùëõsuperscript‚ÑùùêæùêπW\\_{n}\\\\in\\\\mathbb{R}^{K\\\\times F} is in a much smaller dimension that the weight matrix W‚àà‚ÑùF√óFùëäsuperscript‚ÑùùêπùêπW\\\\in\\\\mathbb{R}^{F\\\\times F} in GCN.\n\nFurthermore, we present the additional complexity introduced by the step of graph mixture on the Grassmann manifold. For each center node‚Äôs kùëòk sparse ego-graphs, we need to compute the graph Laplacian and the eigenvector matrix, which incurs an extra time complexity of ùí™‚Äã(k√ó(\\|‚Ñ∞\\|\\|ùí±\\|)3)ùí™ùëòsuperscript‚Ñ∞ùí±3\\\\mathcal{O}(k\\\\times(\\\\frac{\\|\\\\mathcal{E}\\|}{\\|\\\\mathcal{V}\\|})^{3}); to compute the Laplacian ùêã(i)^^superscriptùêãùëñ\\\\widehat{\\\\mathbf{L}^{(i)}} of the final ensemble sparse graph, an additional complexity of ùí™‚Äã(k√ó(\\|‚Ñ∞\\|\\|ùí±\\|)2√óp)ùí™ùëòsuperscript‚Ñ∞ùí±2ùëù\\\\mathcal{O}(k\\\\times(\\\\frac{\\|\\\\mathcal{E}\\|}{\\|\\\\mathcal{V}\\|})^{2}\\\\times p) is required. In the end, the complete time complexity of MoG is expressed as:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùí™‚Äã(L√ó\\|‚Ñ∞\\|√óD+L√ó\\|ùí±\\|√óD2‚èüvanilla GCN+k√ó\\|‚Ñ∞\\|√óD√óDs‚èüsparsifier experts+k‚Äã(\\|‚Ñ∞\\|\\|ùí±\\|)3+k‚Äã(\\|‚Ñ∞\\|\\|ùí±\\|)2‚Äãp‚èügraph mixture).ùí™subscript‚èüùêø‚Ñ∞ùê∑ùêøùí±superscriptùê∑2vanilla GCNsubscript‚èüùëò‚Ñ∞ùê∑superscriptùê∑ùë†sparsifier expertssubscript‚èüùëòsuperscript‚Ñ∞ùí±3ùëòsuperscript‚Ñ∞ùí±2ùëùgraph mixture\\\\mathcal{O}\\\\left(\\\\underbrace{L\\\\times\\|\\\\mathcal{E}\\|\\\\times D+L\\\\times\\|\\\\mathcal{V}\\|\\\\times D^{2}}\\_{\\\\text{vanilla GCN}}+\\\\underbrace{k\\\\times\\|\\\\mathcal{E}\\|\\\\times D\\\\times D^{s}}\\_{\\\\text{sparsifier experts}}+\\\\underbrace{k\\\\left(\\\\frac{\\|\\\\mathcal{E}\\|}{\\|\\\\mathcal{V}\\|}\\\\right)^{3}+k\\\\left(\\\\frac{\\|\\\\mathcal{E}\\|}{\\|\\\\mathcal{V}\\|}\\\\right)^{2}p}\\_{\\\\text{graph mixture}}\\\\right). |  | (31) |\n\nTo empirically verify that MoG does not impose excessive computational burdens on GNN backbones, we conduct experiments in [SectionG.2](https://ar5iv.org/html/2405.14260#A7.SS2 \"G.2 Results for Efficiency Validation ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\") to compare the per-epoch time efficiency metric of MoG with other sparsifiers.\n\n## Appendix F Experimental Details\n\n### F.1 Dataset Statistics\n\nWe conclude the dataset statistics in Tab. [6](https://ar5iv.org/html/2405.14260#A6.T6 \"Table 6 ‚Ä£ F.1 Dataset Statistics ‚Ä£ Appendix F Experimental Details ‚Ä£ Graph Sparsification via Mixture of Graphs\")\n\nTable 6: Graph datasets statistics.\n\n|     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- |\n| Dataset | ##\\\\#Graph | ##\\\\#Node | ##\\\\#Edge | ##\\\\#Classes | Metric |\n| Ogbn-ArXiv | 1 | 169,343 | 1,166,243 | 40 | Accuracy |\n| Ogbn-Proteins | 1 | 132,534 | 39,561,252 | 2 | ROC-AUC |\n| Ogbn-Products | 1 | 2,449,029 | 61,859,140 | 47 | Accuracy |\n| Ogbg-PPA | 158,100 | 243.4 | 2,266.1 | 47 | Accuracy |\n| mnist | 70,100 | 50.5 | 564.5 | 10 | Accuracy |\n| cifar-10 | 60,000 | 117.6 | 914.0 | 10 | Accuracy |\n\n### F.2 Evaluation Metrics\n\nAccuracy represents the ratio of correctly predicted outcomes to the total predictions made. The ROC-AUC (Receiver Operating Characteristic-Area Under the Curve) value quantifies the probability that a randomly selected positive example will have a higher rank than a randomly selected negative example.\n\n### F.3 Dataset Splits\n\nFor node-level tasks, the data splits for Ogbn-ArXiv, Ogbn-Proteins, and Ogbn-Products were provided by the benchmark \\[ [80](https://ar5iv.org/html/2405.14260#bib.bib80 \"\")\\]. Specifically, for Ogbn-ArXiv, we train on papers published until 2017, validate on papers from 2018 and test on those published since 2019. For Ogbn-Proteins, protein nodes were segregated into training, validation, and test sets based on their species of origin. For Ogbn-Products, we sort the products according to their sales ranking and use the top 8% for training, next top 2% for validation, and the rest for testing.\n\nFor graph-level tasks, we follow \\[ [80](https://ar5iv.org/html/2405.14260#bib.bib80 \"\")\\] for Ogbg-PPA. Concretely, we adopt the species split, where the neighborhood graphs in the validation and test sets are extracted from protein association networks of species not encountered during training but belonging to one of the 37 taxonomic groups. This split stress-tests the model‚Äôs capacity to extract graph features crucial for predicting taxonomic groups, enhancing biological understanding of protein associations. For mnist and cifar-10, consistent with \\[ [98](https://ar5iv.org/html/2405.14260#bib.bib98 \"\")\\], we split them to 55000 train/5000 validation/10000 test for MNIST, and 45000 train/5000 validation/10000 test for CIFAR10, respectively.\nWe report the test accuracy at the epoch with the best validation accuracy.\n\n### F.4 Parameter Setting\n\n#### Backbone Parameters\n\nFor node classification backbones, we utilize a 3-layer GraphSAGE with hidden\\_dim‚àà{128,256}hidden\\_dim128256\\\\texttt{hidden\\\\\\_dim}\\\\in\\\\{128,256\\\\}. As for DeeperGCN, we set layer\\_num=28layer\\_num28\\\\texttt{layer\\\\\\_num}=28, block=res+blockres+\\\\texttt{block}=\\\\texttt{res+}, hidden\\_dim=64hidden\\_dim64\\\\texttt{hidden\\\\\\_dim}=64. The other configurations are the same as in [https://github.com/lightaime/deep\\_gcns\\_torch/tree/master/examples/ogb/ogbn\\_proteins](https://github.com/lightaime/deep_gcns_torch/tree/master/examples/ogb/ogbn_proteins \"\"). For graph classification backbones, we leverage a 4-layer PNA with hidden\\_dim=300hidden\\_dim300\\\\texttt{hidden\\\\\\_dim}=300. Rest configurations are the same as in [https://github.com/lukecavabarrett/pna](https://github.com/lukecavabarrett/pna \"\").\n\n#### MoG parameters\n\nWe adopt the m=4ùëö4m=4 sparsity criteria outlined in [Section3.3](https://ar5iv.org/html/2405.14260#S3.SS3 \"3.3 Customized Sparsifier Modeling ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"), assigning n=3ùëõ3n=3 different sparsity levels {s1,s2,s3}subscriptùë†1subscriptùë†2subscriptùë†3\\\\{s\\_{1},s\\_{2},s\\_{3}\\\\} to each criterion, resulting in a total of K=m√ón=12ùêæùëöùëõ12K=m\\\\times n=12 experts. We select k=2ùëò2k=2 sparsifier experts for each node, and set the loss scaling factor Œª=1‚Äãe‚àí2ùúÜ1ùëí2\\\\lambda=1e-2 across all datasets and backbones.\n\nAll the experiments are conducted on NVIDIA Tesla V100 (32GB GPU), using PyTorch and PyTorch Geometric framework.\n\n### F.5 Sparsifier Baseline Configurations\n\n- ‚Ä¢\n\n\nTopology-based sparsification\n\n\n\n- ‚Äì\n\n\nRank Degree\\[ [99](https://ar5iv.org/html/2405.14260#bib.bib99 \"\")\\]: The Rank Degree sparsifier initiates by selecting a random set of \"seed\" vertices. Then, the vertices with connections to these seed vertices are ranked based on their degree in descending order. Subsequently, the edges linking each seed vertex to its top-ranked neighbors are chosen and integrated into the sparsified graph. The newly added nodes in the graph act as new seeds for identifying additional edges. This iterative process continues until the target sparsification limit is attained. We utilize the implementation in \\[ [18](https://ar5iv.org/html/2405.14260#bib.bib18 \"\")\\].\n\n- ‚Äì\n\n\nLocal Degree\\[ [84](https://ar5iv.org/html/2405.14260#bib.bib84 \"\")\\]: Local Degree sparsifier, similar to Rank Degree, incorporates edges to the top deg(v)Œ±\\\\operatorname{deg}(v)^{\\\\alpha} neighbors ranked by their degree in descending order, where Œ±‚àà\\[0,1\\]ùõº01\\\\alpha\\\\in\\[0,1\\] represents the degree of sparsification.\n\n- ‚Äì\n\n\nForest Fire\\[ [85](https://ar5iv.org/html/2405.14260#bib.bib85 \"\")\\]: Forest fire assembles ‚Äúburning‚Äù through edges probabilistically, and we use the implementation in \\[ [100](https://ar5iv.org/html/2405.14260#bib.bib100 \"\")\\].\n\n- ‚Äì\n\n\nG-Spar\\[ [86](https://ar5iv.org/html/2405.14260#bib.bib86 \"\")\\]: G-Spar sorts the Jaccard scores globally and then selects the edges with the highest similarity score. We opt for the code from \\[ [100](https://ar5iv.org/html/2405.14260#bib.bib100 \"\")\\].\n\n- ‚Äì\n\n\nLocal Similarity\\[ [87](https://ar5iv.org/html/2405.14260#bib.bib87 \"\")\\]: Local Similarity ranks edges using the Jaccard score and computes log‚Å°(rank‚Å°(ei‚Äãj))/log‚Å°(deg‚Å°(ei‚Äãj))ranksubscriptùëíùëñùëódegsubscriptùëíùëñùëó\\\\log(\\\\operatorname{rank}(e\\_{ij}))/\\\\log(\\\\operatorname{deg}(e\\_{ij})) as the similarity score, and selects edges with the highest similarity scores. We utilize the implementation in \\[ [18](https://ar5iv.org/html/2405.14260#bib.bib18 \"\")\\].\n\n- ‚Äì\n\n\nSCAN\\[ [29](https://ar5iv.org/html/2405.14260#bib.bib29 \"\")\\]: SCAN uses structural similarity (called SCAN similarity) measures to detect clusters, hubs, and outliers. We utilize the implementation in \\[ [18](https://ar5iv.org/html/2405.14260#bib.bib18 \"\")\\]\n\n- ‚Äì\n\n\nDSpar\\[ [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\")\\]: DSpar is an extension of effective resistance sparsifier, which aims to reduce the high computational budget of calculating effective resistance through an unbiased approximation. We adopt their official implementation \\[ [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\")\\].\n\n\n- ‚Ä¢\n\n\nSemantic-based sparsification\n\n\n\n- ‚Äì\n\n\nUGS\\[ [20](https://ar5iv.org/html/2405.14260#bib.bib20 \"\")\\]: We utilize the official implementation from the authors. Notably, UGS was originally designed for joint pruning of model parameters and edges. Specifically, it sets separate pruning parameters for parameters and edges, namely the weight pruning ratio pŒ∏subscriptùëùùúÉp\\_{\\\\theta} and the graph pruning ratio pgsubscriptùëùùëîp\\_{g}. In each iteration, a corresponding proportion of parameters/edges is pruned. For a fairer comparison, we set pŒ∏=0%subscriptùëùùúÉpercent0p\\_{\\\\theta}=0\\\\%, while maintaining pg‚àà{5%,10}subscriptùëùùëîpercent510p\\_{g}\\\\in\\\\{5\\\\%,10\\\\} (consistent with the original paper).\n\n- ‚Äì\n\n\nGEBT\\[ [45](https://ar5iv.org/html/2405.14260#bib.bib45 \"\")\\]: GEBT, for the first time, discovered the existence of graph early-bird (GEB) tickets that emerge at the very early stage when sparsifying GCN graphs. \\[ [45](https://ar5iv.org/html/2405.14260#bib.bib45 \"\")\\] has proposed two variants of graph early bird tickets, and we opt for the graph-sparsification-only version, dubbed GEB Ticket Identification.\n\n- ‚Äì\n\n\nMeta-gradient sparsifier\\[ [71](https://ar5iv.org/html/2405.14260#bib.bib71 \"\")\\]: The Meta-gradient sparsifier prunes edges based on their meta-gradient importance scores, assessed over multiple training epochs. Since no official implementation is provided, we carefully replicated the results following the guidelines in the original paper.\n\n- ‚Äì\n\n\nACE-GLT\\[ [89](https://ar5iv.org/html/2405.14260#bib.bib89 \"\")\\]: ACE-GLT inherits the iterative magnitude pruning (IMP) paradigm from UGS. Going beyond UGS, it suggested mining valuable information from pruned edges/weights after each round of IMP, which in the meanwhile doubled the computational cost of IMP. We utilize the official implementation provided by \\[ [89](https://ar5iv.org/html/2405.14260#bib.bib89 \"\")\\], and set pŒ∏=0%,pg‚àà{5%,10}formulae-sequencesubscriptùëùùúÉpercent0subscriptùëùùëîpercent510p\\_{\\\\theta}=0\\\\%,p\\_{g}\\\\in\\\\{5\\\\%,10\\\\}.\n\n- ‚Äì\n\n\nWD-GLT\\[ [90](https://ar5iv.org/html/2405.14260#bib.bib90 \"\")\\]: WD-GLT also inherits the iterative magnitude pruning paradigm from UGS, so we also set pŒ∏=0%,pg‚àà{5%,10%}formulae-sequencesubscriptùëùùúÉpercent0subscriptùëùùëîpercent5percent10p\\_{\\\\theta}=0\\\\%,p\\_{g}\\\\in\\\\{5\\\\%,10\\\\%\\\\} across all datasets and backbones. The perturbation ratio Œ±ùõº\\\\alpha is tuned among {0,1}01\\\\{0,1\\\\}. Since no official implementation is provided, we carefully reproduced the results according to the original paper.\n\n- ‚Äì\n\n\nAdaGLT\\[ [17](https://ar5iv.org/html/2405.14260#bib.bib17 \"\")\\]: AdaGLT revolutionizes the original IMP-based graph lottery ticket methodology into an adaptive, dynamic, and automated approach, proficient in identifying sparse graphs with layer-adaptive structures. We fix Œ∑Œ∏=0%,Œ∑g‚àà{1‚Äãe‚àí6,1‚Äãe‚àí5,1‚Äãe‚àí4,1‚Äãe‚àí3,1‚Äãe‚àí2},œâ=2formulae-sequencesubscriptùúÇùúÉpercent0formulae-sequencesubscriptùúÇùëî1ùëí61ùëí51ùëí41ùëí31ùëí2ùúî2\\\\eta\\_{\\\\theta}=0\\\\%,\\\\eta\\_{g}\\\\in\\\\{1e-6,1e-5,1e-4,1e-3,1e-2\\\\},\\\\omega=2 across all datasets and backbones.\n\n\n### F.6 Adjusting Graph Sparsity\n\nIn [Table7](https://ar5iv.org/html/2405.14260#A6.T7 \"In F.6 Adjusting Graph Sparsity ‚Ä£ Appendix F Experimental Details ‚Ä£ Graph Sparsification via Mixture of Graphs\"), we provide detailed guidelines on how to achieve the desired global sparsity by adjusting the three sparsity levels {s1,s2,s3}subscriptùë†1subscriptùë†2subscriptùë†3\\\\{s\\_{1},s\\_{2},s\\_{3}\\\\} in MoG across six datasets.\n\nTable 7: The recipe for adjusting graph sparsity via different sparsifier combinations.\n\n|     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- |\n| Datasets | 1‚àís11subscriptùë†11-s\\_{1} | 1‚àís21subscriptùë†21-s\\_{2} | 1‚àís31subscriptùë†31-s\\_{3} | kùëòk | 1‚àís%1percentùë†1-s\\\\% |\n| ogbn-arxiv | 1 | 0.9 | 0.8 | 2 | \\[88.0%,90.9%\\] |\n| 0.8 | 0.7 | 0.5 | 2 | \\[69.0%,73.2%\\] |\n| 0.6 | 0.5 | 0.3 | 2 | \\[49.5%,52.7%\\] |\n| 0.5 | 0.3 | 0.15 | 2 | \\[27.1%, 31.6%\\] |\n| ogbn-proteins | 1 | 0.9 | 0.8 | 2 | \\[86.1%,89.3%\\] |\n| 0.8 | 0.7 | 0.6 | 2 | \\[65.1%,69.2%\\] |\n| 0.6 | 0.5 | 0.4 | 2 | \\[45.2%,49.3%\\] |\n| 0.4 | 0.3 | 0.2 | 2 | \\[29.2%,31.1%\\] |\n| ogbn-products | 1 | 0.9 | 0.8 | 2 | \\[90.1%,93.2%\\] |\n| 0.8 | 0.7 | 0.6 | 2 | \\[69.3%,72.0%\\] |\n| 0.6 | 0.5 | 0.4 | 2 | \\[51.5%,54.9%\\] |\n| 0.4 | 0.3 | 0.2 | 2 | \\[28.7%,36.0%\\] |\n| mnist | 1 | 0.85 | 0.8 | 2 | \\[90.4%,92.7%\\] |\n| 0.8 | 0.5 | 0.4 | 2 | \\[67.1%,68.3%\\] |\n| 0.6 | 0.3 | 0.2 | 2 | \\[46.2%,49.3%\\] |\n| 0.35 | 0.1 | 0.1 | 2 | \\[29.8%,31.3%\\] |\n| cifar-10 | 1 | 0.85 | 0.8 | 2 | \\[90.6%,93.7%\\] |\n| 0.8 | 0.5 | 0.4 | 2 | \\[67.5%,69.9%\\] |\n| 0.6 | 0.3 | 0.2 | 2 | \\[47.7%,49.3%\\] |\n| 0.35 | 0.1 | 0.1 | 2 | \\[30.1%,31.3%\\] |\n| ogbg-ppa | 0.95 | 0.9 | 0.8 | 2 | \\[86.5%,88.9%\\] |\n| 0.8 | 0.65 | 0.6 | 2 | \\[68.0%,70.1%\\] |\n| 0.6 | 0.5 | 0.3 | 2 | \\[47.8%,48.9%\\] |\n| 0.4 | 0.3 | 0.15 | 2 | \\[30.1%,33.6%\\] |\n\n## Appendix G Addtional Experiment Results\n\n### G.1 Results for RQ1\n\nWe report the performances of MoG and other sparsifiers on ogbn-products in [Table8](https://ar5iv.org/html/2405.14260#A7.T8 \"In G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\nTable 8: Node classification performance comparison to state-of-the-art sparsification methods. All methods are trained using GraphSAGE, and the reported metrics represent the average of five runs. We denote methods with ‚Ä†‚Ä†{\\\\dagger} that do not have precise control over sparsity; their performance is reported around the target sparsity ¬±2%plus-or-minuspercent2\\\\pm 2\\\\%. We do not report results for sparsifiers like ER for OOT issues and those like UGS for their infeasibility in inductive settings (mini-batch training).\n\n|     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- |\n|  | Dataset | ogbn-products (Accuracy ‚Üë‚Üë\\\\uparrow) |\n| Sparsity % | 10 | 30 | 50 | 70 |\n| Topology | Random | 76.99‚Üì1.05 | 74.21‚Üì3.83 | 71.08‚Üì6.96 | 67.24‚Üì10.80 |\n| Rank Degree‚Ä†\\[ [83](https://ar5iv.org/html/2405.14260#bib.bib83 \"\")\\] | 76.08‚Üì1.96 | 74.26‚Üì3.89 | 71.85‚Üì6.19 | 70.66‚Üì7.38 |\n| Local Degree‚Ä†\\[ [84](https://ar5iv.org/html/2405.14260#bib.bib84 \"\")\\] | 77.19‚Üì1.58 | 76.40‚Üì1.64 | 72.77‚Üì5.27 | 72.48‚Üì5.56 |\n| G-Spar \\[ [86](https://ar5iv.org/html/2405.14260#bib.bib86 \"\")\\] | 76.15‚Üì1.89 | 74.20‚Üì3.84 | 71.55‚Üì6.49 | 69.42‚Üì8.62 |\n| LSim‚Ä†\\[ [87](https://ar5iv.org/html/2405.14260#bib.bib87 \"\")\\] | 77.96‚Üì0.08 | 74.98‚Üì2.06 | 72.67‚Üì5.37 | 70.43‚Üì7.61 |\n| SCAN \\[ [88](https://ar5iv.org/html/2405.14260#bib.bib88 \"\")\\] | 76.30‚Üì1.74 | 74.33‚Üì3.71 | 71.25‚Üì6.79 | 71.12‚Üì6.92 |\n| DSpar \\[ [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\")\\] | 78.25‚Üë0.21 | 75.11‚Üì2.93 | 74.57‚Üì3.47 | 73.16‚Üì4.88 |\n| Sema | AdaGLT \\[ [17](https://ar5iv.org/html/2405.14260#bib.bib17 \"\")\\] | 78.19‚Üë0.15 | 77.30‚Üì0.74 | 74.38‚Üì3.66 | 73.04‚Üì5.00 |\n| MoG (Ours)‚Ä† | 78.77‚Üë0.73‚Üëabsent0.73{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.73}} | 78.15‚Üë0.11‚Üëabsent0.11{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.11}} | 76.98‚Üì1.06 | 74.91‚Üì3.17‚Üìabsent3.17{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{3.17}} |\n| Whole Dataset | 78.04¬±0.31 |\n\nTable 9: Node classification performance comparison to state-of-the-art sparsification methods. All methods are trained using DeeperGCN, and the reported metrics represent the average of five runs. We denote methods with ‚Ä†‚Ä†{\\\\dagger} that do not have precise control over sparsity; their performance is reported around the target sparsity ¬±2%plus-or-minuspercent2\\\\pm 2\\\\%. ‚ÄúOOM‚Äù and ‚ÄúOOT‚Äù denotes out-of-memory and out-of-time, respectively.\n\n|     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- |\n|  | Dataset | ogbn-arxiv (Accuracy ‚Üë‚Üë\\\\uparrow) |\n| Sparsity % | 10 | 30 | 50 | 70 |\n| Topology-guided | Random | 70.66‚Üì1.28 | 68.74‚Üì3.20 | 65.38‚Üì6.56 | 63.55‚Üì8.39 |\n| Rank Degree‚Ä†\\[ [83](https://ar5iv.org/html/2405.14260#bib.bib83 \"\")\\] | 69.44‚Üì2.50 | 67.82‚Üì4.12 | 65.08‚Üì6.86 | 63.19‚Üì8.75 |\n| Local Degree‚Ä†\\[ [84](https://ar5iv.org/html/2405.14260#bib.bib84 \"\")\\] | 68.77‚Üì3.17 | 67.92‚Üì4.02 | 66.10‚Üì5.84 | 65.97‚Üì5.97 |\n| Forest Fire‚Ä†\\[ [85](https://ar5iv.org/html/2405.14260#bib.bib85 \"\")\\] | 68.70‚Üì3.24 | 68.95‚Üì3.99 | 67.23‚Üì4.71 | 67.29‚Üì4.65 |\n| G-Spar \\[ [86](https://ar5iv.org/html/2405.14260#bib.bib86 \"\")\\] | 70.57‚Üì1.37 | 70.15‚Üì1.79 | 68.77‚Üì3.17 | 65.26‚Üì6.68 |\n| LSim‚Ä†\\[ [87](https://ar5iv.org/html/2405.14260#bib.bib87 \"\")\\] | 69.33‚Üì2.61 | 67.19‚Üì4.75 | 63.55‚Üì8.39 | 62.20‚Üì9.74 |\n| SCAN \\[ [88](https://ar5iv.org/html/2405.14260#bib.bib88 \"\")\\] | 71.33‚Üì0.61 | 69.22‚Üì2.72 | 67.88‚Üì4.06 | 64.32‚Üì7.62 |\n| ER \\[ [29](https://ar5iv.org/html/2405.14260#bib.bib29 \"\")\\] | 71.33‚Üì0.61 | 69.65‚Üì2.29 | 69.08‚Üì2.86 | 67.10‚Üì4.84 |\n| DSpar \\[ [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\")\\] | 71.65‚Üì0.29 | 70.66‚Üì1.28 | 68.03‚Üì3.91 | 67.25‚Üì4.69 |\n| Semantic-guided | UGS‚Ä†\\[ [20](https://ar5iv.org/html/2405.14260#bib.bib20 \"\")\\] | 72.01‚Üë0.93 | 70.29‚Üì1.65 | 68.43‚Üì3.51 | 67.85‚Üì4.09 |\n| GEBT \\[ [45](https://ar5iv.org/html/2405.14260#bib.bib45 \"\")\\] | 70.22‚Üì1.72 | 69.40‚Üì2.54 | 67.84‚Üì4.10 | 67.49‚Üì4.45 |\n| MGSpar \\[ [71](https://ar5iv.org/html/2405.14260#bib.bib71 \"\")\\] | 70.02‚Üì1.92 | 69.34‚Üì2.60 | 68.02‚Üì3.92 | 65.78‚Üì6.16 |\n| ACE-GLT‚Ä†\\[ [89](https://ar5iv.org/html/2405.14260#bib.bib89 \"\")\\] | 72.13‚Üë0.19 | 71.96‚Üë0.02 | 69.13‚Üì2.81 | 67.93‚Üì4.01 |\n| WD-GLT‚Ä†\\[ [90](https://ar5iv.org/html/2405.14260#bib.bib90 \"\")\\] | 71.92‚Üì0.02 | 70.21‚Üì1.73 | 68.30‚Üì3.64 | 66.57‚Üì5.37 |\n| AdaGLT \\[ [17](https://ar5iv.org/html/2405.14260#bib.bib17 \"\")\\] | 71.98‚Üë0.04 | 70.44‚Üì1.50 | 69.15‚Üì2.79 | 68.05‚Üì3.89 |\n| MoG (Ours)‚Ä† | 72.08‚Üë0.14‚Üëabsent0.14{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.14}} | 71.98‚Üë0.05‚Üëabsent0.05{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.05}} | 69.86‚Üì-2.08 | 68.20‚Üì-3.74‚Üìabsent-3.74{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{-3.74}} |\n| Whole Dataset | 71.93¬±0.04 |\n\nTable 10: Node classification performance comparison to state-of-the-art sparsification methods. All methods are trained using DeeperGCN, and the reported metrics represent the average of five runs. We denote methods with ‚Ä†‚Ä†{\\\\dagger} that do not have precise control over sparsity; their performance is reported around the target sparsity ¬±2%plus-or-minuspercent2\\\\pm 2\\\\%. ‚ÄúOOM‚Äù and ‚ÄúOOT‚Äù denotes out-of-memory and out-of-time, respectively.\n\n|     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- |\n|  | Dataset | ogbn-proteins (ROC-AUC ‚Üë‚Üë\\\\uparrow) |\n| Sparsity % | 10 | 30 | 50 | 70 |\n| Topology-guided | Random | 80.18‚Üì2.55 | 78.92‚Üì3.83 | 76.57‚Üì6.16 | 72.69‚Üì10.04 |\n| Rank Degree‚Ä†\\[ [83](https://ar5iv.org/html/2405.14260#bib.bib83 \"\")\\] | 80.14‚Üì2.59 | 79.05‚Üì3.73 | 78.59‚Üì4.13 | 76.22‚Üì6.51 |\n| Local Degree‚Ä†\\[ [84](https://ar5iv.org/html/2405.14260#bib.bib84 \"\")\\] | 79.40‚Üì3.33 | 79.83‚Üì3.90 | 78.50‚Üì4.23 | 78.25‚Üì4.48 |\n| Forest Fire‚Ä†\\[ [85](https://ar5iv.org/html/2405.14260#bib.bib85 \"\")\\] | 81.49‚Üì1.24 | 78.47‚Üì4.26 | 76.14‚Üì6.59 | 73.89‚Üì9.84 |\n| G-Spar \\[ [86](https://ar5iv.org/html/2405.14260#bib.bib86 \"\")\\] | 81.56‚Üì1.17 | 81.12‚Üì1.61 | 79.13‚Üì3.60 | 77.45‚Üì5.28 |\n| LSim‚Ä†\\[ [87](https://ar5iv.org/html/2405.14260#bib.bib87 \"\")\\] | 80.30‚Üì2.43 | 79.19‚Üì3.54 | 77.13‚Üì5.60 | 77.85‚Üì4.88 |\n| SCAN \\[ [88](https://ar5iv.org/html/2405.14260#bib.bib88 \"\")\\] | 81.60‚Üì1.13 | 80.19‚Üì2.54 | 81.53‚Üì1.20 | 78.58‚Üì4.15 |\n| ER \\[ [29](https://ar5iv.org/html/2405.14260#bib.bib29 \"\")\\] | OOT |\n| DSpar \\[ [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\")\\] | 81.46‚Üì1.27 | 80.57‚Üì2.16 | 77.41‚Üì5.32 | 75.35‚Üì7.39 |\n| Semantic-guided | UGS‚Ä†\\[ [20](https://ar5iv.org/html/2405.14260#bib.bib20 \"\")\\] | 82.33‚Üì0.40 | 81.54‚Üì1.19 | 78.75‚Üì4.98 | 76.40‚Üì6.33 |\n| GEBT \\[ [45](https://ar5iv.org/html/2405.14260#bib.bib45 \"\")\\] | 80.74‚Üì2.99 | 80.22‚Üì2.51 | 79.81‚Üì3.92 | 76.05‚Üì6.68 |\n| MGSpar \\[ [71](https://ar5iv.org/html/2405.14260#bib.bib71 \"\")\\] | OOM |\n| ACE-GLT‚Ä†\\[ [89](https://ar5iv.org/html/2405.14260#bib.bib89 \"\")\\] | 82.93‚Üë0.80 | 82.01‚Üì0.72 | 81.05‚Üì1.68 | 75.92‚Üì6.81 |\n| WD-GLT‚Ä†\\[ [90](https://ar5iv.org/html/2405.14260#bib.bib90 \"\")\\] | OOM |\n| AdaGLT \\[ [17](https://ar5iv.org/html/2405.14260#bib.bib17 \"\")\\] | 82.60‚Üì0.13 | 82.76‚Üë0.97 | 80.55‚Üì2.18 | 78.42‚Üì4.31 |\n| MoG (Ours)‚Ä† | 83.32‚Üë0.41‚Üëabsent0.41{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.41}} | 82.14‚Üì0.59‚Üìabsent0.59{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{0.59}} | 81.92‚Üì0.81‚Üìabsent0.81{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{0.81}} | 80.90‚Üì1.83‚Üìabsent1.83{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{1.83}} |\n| Whole Dataset | 82.73¬±0.02 |\n\nTable 11: Graph classification performance comparison to state-of-the-art sparsification methods. All methods are trained using PNA, and the reported metrics represent the average of five runs. We denote methods with ‚Ä†‚Ä†{\\\\dagger} that do not have precise control over sparsity; their performance is reported around the target sparsity ¬±2%plus-or-minuspercent2\\\\pm 2\\\\%.\n\n|     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- |\n|  | Dataset | cifar-10 (Accuracy ‚Üë‚Üë\\\\uparrow) |\n| Sparsity % | 10 | 30 | 50 | 70 |\n| Topology | Random | 68.04‚Üì1.70 | 66.81‚Üì2.93 | 65.35‚Üì4.39 | 62.14‚Üì7.60 |\n| Rank Degree‚Ä†\\[ [83](https://ar5iv.org/html/2405.14260#bib.bib83 \"\")\\] | 68.27‚Üì1.77 | 67.14‚Üì2.60 | 64.05‚Üì5.69 | 60.22‚Üì9.52 |\n| Local Degree‚Ä†\\[ [84](https://ar5iv.org/html/2405.14260#bib.bib84 \"\")\\] | 68.10‚Üì1.64 | 67.29‚Üì2.45 | 64.96‚Üì4.78 | 61.77‚Üì8.97 |\n| G-Spar \\[ [86](https://ar5iv.org/html/2405.14260#bib.bib86 \"\")\\] | 67.13‚Üì2.61 | 65.06‚Üì4.68 | 64.86‚Üì4.88 | 62.92‚Üì6.82 |\n| LSim‚Ä†\\[ [87](https://ar5iv.org/html/2405.14260#bib.bib87 \"\")\\] | 69.75‚Üë0.01 | 67.33‚Üì2.41 | 66.58‚Üì3.16 | 64.86‚Üì4.88 |\n| SCAN \\[ [88](https://ar5iv.org/html/2405.14260#bib.bib88 \"\")\\] | 68.25‚Üì1.49 | 66.11‚Üì3.63 | 64.59‚Üì5.15 | 63.20‚Üì6.54 |\n| DSpar \\[ [13](https://ar5iv.org/html/2405.14260#bib.bib13 \"\")\\] | 68.94‚Üë0.53 | 66.80‚Üì2.94 | 64.87‚Üì4.87 | 64.10‚Üì5.64 |\n| Sema | AdaGLT \\[ [17](https://ar5iv.org/html/2405.14260#bib.bib17 \"\")\\] | 69.77‚Üë0.02 | 67.97‚Üì1.78 | 65.06‚Üì4.68 | 64.22‚Üì5.52 |\n| MoG (Ours)‚Ä† | 70.04‚Üë0.30‚Üëabsent0.30{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.30}} | 69.80‚Üë-0.94‚Üëabsent-0.94{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{-0.94}} | 68.28‚Üì-1.46 | 66.55‚Üì-3.19 |\n| Whole Dataset | 69.74¬±0.17 |\n\n### G.2 Results for Efficiency Validation\n\nIn [Table12](https://ar5iv.org/html/2405.14260#A7.T12 \"In G.2 Results for Efficiency Validation ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\"), we present a comparison of the precision and per epoch time between MoG and Random, AdaGLT. It can be observed that MoG incurs less additional training cost compared to AdaGLT while achieving significant improvements in sparsification performance. More importantly, we demonstrate that with k=2ùëò2k=2, MoG does not incur significantly heavier training burdens as the number of sparsifiers increases. Specifically, at s%=50%percentùë†percent50s\\\\%=50\\\\%, the difference in per epoch time between MoG (K=3ùêæ3K=3) and MoG (K=12ùêæ12K=12) is only 2.632.632.63 seconds, consistent with the findings of mainstream sparse MoE approaches \\[ [65](https://ar5iv.org/html/2405.14260#bib.bib65 \"\")\\].\n\nTable 12: Running time efficiency comparison on ogbn-products+GraphSAGE. We consistently set n=4,k=2formulae-sequenceùëõ4ùëò2n=4,k=2, corresponding to utilizing 4 pruning criteria and selecting 2 experts for each node, and vary m‚àà{1,2,3}ùëö123m\\\\in\\\\{1,2,3\\\\} to check how the training cost grows with mùëöm increasing.\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n| Sparsity | 30% | 50% |\n| Metric | Per-epoch Time (s) | Accuracy (%) | Per-epoch Time (s) | Accuracy (%) |\n| Random | 18.71¬±plus-or-minus\\\\pm 0.14 | 74.21¬±plus-or-minus\\\\pm 0.28 | 15.42 ¬±plus-or-minus\\\\pm 0.24 | 71.08¬±plus-or-minus\\\\pm 0.34 |\n| AdaGLT | 23.55¬±plus-or-minus\\\\pm 0.20 | 77.30 ¬±plus-or-minus\\\\pm 0.54 | 21.68 ¬±plus-or-minus\\\\pm 0.26 | 74.38 ¬±plus-or-minus\\\\pm 0.79 |\n| MoG(m=1,K=3formulae-sequenceùëö1ùêæ3m=1,K=3) | 20.18¬±plus-or-minus\\\\pm 0.14 | 77.75 ¬±plus-or-minus\\\\pm 0.22 | 18.19 ¬±plus-or-minus\\\\pm 0.30 | 76.10 ¬±plus-or-minus\\\\pm 0.49 |\n| MoG(m=2,K=6formulae-sequenceùëö2ùêæ6m=2,K=6) | 21.25¬±plus-or-minus\\\\pm 0.22 | 78.23 ¬±plus-or-minus\\\\pm 0.29 | 19.70 ¬±plus-or-minus\\\\pm 0.30 | 76.43 ¬±plus-or-minus\\\\pm 0.49 |\n| MoG(m=3,K=12formulae-sequenceùëö3ùêæ12m=3,K=12) | 23.19¬±plus-or-minus\\\\pm 0.18 | 78.15 ¬±plus-or-minus\\\\pm 0.32 | 20.83 ¬±plus-or-minus\\\\pm 0.29 | 76.98 ¬±plus-or-minus\\\\pm 0.49 |\n\n## Appendix H Broader Impact.\n\nMoG, as a novel concept in graph sparsification, holds vast potential for general application. It allows for the sparsification of each node based on its specific circumstances, making it well-suited to meet the demands of complex real-world scenarios such as financial fraud detection and online recommender systems, which require customized approaches. More importantly, MoG provides a selectable pool for future sparsification, enabling various pruning algorithms to collaborate and enhance the representational capabilities of graphs.\n\n[‚óÑ](https://ar5iv.org/html/2405.14259) [![ar5iv homepage](https://ar5iv.org/assets/ar5iv.png)](https://ar5iv.org/) [Feeling\\\\\n\\\\\nlucky?](https://ar5iv.org/feeling_lucky) [Conversion\\\\\n\\\\\nreport](https://ar5iv.org/log/2405.14260) [Report\\\\\n\\\\\nan issue](https://github.com/dginev/ar5iv/issues/new?template=improve-article--arxiv-id-.md&title=Improve+article+2405.14260) [View original\\\\\n\\\\\non arXiv](https://arxiv.org/abs/2405.14260) [‚ñ∫](https://ar5iv.org/html/2405.14261)",
  "sections": {
    "1 Introduction": {
      "content": "Graph Neural Networks (GNNs) \\[ [1], [2]\\] have become prominent for confronting graph-related learning tasks, including social recommendation \\[ [3], [4]\\], fraud detection \\[ [5], [6], [7]\\], drug design \\[ [8]\\], and many others \\[ [9], [10]\\]. The superiority of GNNs stems from iterative _aggregation_ and _update_ processes. The former accumulates embeddings from neighboring nodes via sparse matrix-based operations (e.g., sparse-dense matrix multiplication (SpMM) and sampled dense-dense matrix multiplication (SDDMM) \\[ [11], [12]\\]), and the latter updates the central nodes‚Äô embeddings using dense matrix-based operations (e.g., MatMul) \\[ [11], [12]\\]. SpMM typically contributes the most substantial part (‚àºsimilar-to\\\\sim70%) to the computational demands \\[ [13], [14]\\], influenced largely by the graph‚Äôs scale. Nevertheless, large-scale graphs are widespread in real-world scenarios \\[ [15], [16], [17]\\], leading to substantial computational burdens, which hinder the efficient processing of features during the training and inference, posing headache barriers to deploying GNNs in the limited resources environments.\n\n![Refer to caption]Figure 1: (Left) We illustrated the kùëòk-hop neighborhood expansion rates for nodes 6 and 14, which is proportional to the amount of message they receive as the GNN layers deepen; (Middle) The local patterns of different nodes vary, hence the attributions of edge pruning may also differ. For instance, pruning (v1,v2)subscriptùë£1subscriptùë£2(v\\_{1},v\\_{2}) might be due to its non-bridge identity, while pruning (v5,v6)subscriptùë£5subscriptùë£6(v\\_{5},v\\_{6}) could be attributed to it non-homophilic nature; (Right) The overview of our proposed MoG.\n\nTo conquer the above challenge, graph sparsification \\[ [18], [19]\\] has recently seen a revival as it directly reduces the aggregation process associated with SpMM\\[ [13], [14]\\] in GNNs. Specifically, graph sparsification is a technique that approximates a given graph by creating a sparse subgraph with a subset of vertices and/or edges. Since the execution time of SpMM is directly related to the number of edges in the graph, this method can significantly accelerate GNN training or inference. Existing efforts such as UGS \\[ [20]\\], DSpar \\[ [13]\\], and AdaGLT \\[ [21]\\] have achieved notable successes, with some maintaining GNN performance even with up to 40% edge sparsity.\n\nBeyond serving as a computational accelerator, the purpose of graph sparsification extends further. Another research line leverages graph sparsification as a performance booster to remove task-irrelevant edges and pursue highly performant and robust GNNs \\[ [22]\\]. Specifically, it is argued that due to uncertainty and complexity in data collection, graph structures are inevitably redundant, biased, and noisy \\[ [23]\\]. Therefore, employing graph sparsification can effectively facilitate the evolution of graph structures towards cleaner conditions \\[ [22], [24]\\], and finally boost GNN performance.\n\nHowever, existing sparsification methods, namely sparsifiers, whether aimed at achieving higher sparsity or seeking enhanced performance, often adopt a rigid, global approach to conduct graph sparsification, thus suffering from the inflexibility in two aspects:\n\n- ‚ù∂\n\n\nInflexibility of sparsity level. Previous sparsifiers globally score all edges uniformly and prune them based on a preset sparsity level \\[ [18]\\]. However, as shown in [Figure1]In 1 Introduction ‚Ä£ Graph Sparsification via Mixture of Graphs\") (Left), the degrees of different nodes vary, which leads to varying rates of kùëòk-hop neighborhood expansion. This phenomenon, along with prior work on node-wise aggregation \\[ [25], [26]\\], suggests that different nodes require customized sparsity levels tailored to their specific connectivity and local patterns.\n\n- ‚ù∑\n\n\nInflexibility of sparsity criteria. Previous sparsifiers often operate under a unified guiding principle, such as pruning non-bridge edges \\[ [27]\\], non-homophilic edges \\[ [28]\\], or edges with low effective resistance \\[ [29], [13]\\], among others. However, as illustrated in [Figure1]In 1 Introduction ‚Ä£ Graph Sparsification via Mixture of Graphs\") (Middle), the context of different nodes varies significantly, leading to varied rationales for edge pruning. Therefore, it is essential to select appropriate pruning criteria tailored to the specific circumstances of each node to customize the pruning process effectively.\n\n\nBased on these observations and reflections, we propose the following challenge: Can we customize the sparsity level and pruning criteria for each node, in the meanwhile ensuring the efficiency of graph sparsification? Towards this end, we propose a novel graph sparsifier dubbed Mixture of Graphs (MoG). It comprises multiple sparsifier experts, each equipped with distinct pruning criteria and sparsity settings, as in [Figure1]In 1 Introduction ‚Ä£ Graph Sparsification via Mixture of Graphs\") (Right). Throughout the training process, MoG dynamically selects the most suitable sparsifier expert for each node based on its neighborhood properties. This fosters specialization within each MoG expert, focusing on specific subsets of nodes with similar neighborhood contexts.\nAfter each selected expert prunes the 1-hop subgraph of the central nodes and outputs its sparse version, MoG seamlessly integrates these sparse subgraphs on the Grassmann manifold in an expert-weighted manner, thereby forming an optimized sparse graph.\n\nWe validate the effectiveness of MoG across six datasets and three GNN backbones, and show that MoG can ‚ù∂ effectively locate well-performing sparse graphs, maintaining GNN performance losslessly at satisfactory sparsity levels (8.67%‚àº50.85%similar-topercent8.67percent50.858.67\\\\%\\\\sim 50.85\\\\%), and even only experiencing a 1.65%percent1.651.65\\\\% accuracy drop at 69.13%percent69.1369.13\\\\% sparsity on ogbn-proteins; ‚ù∑ achieve a tangible 1.47‚àº2.62√ó1.47\\\\sim 2.62\\\\times inference speedup with negligible performance drop; and ‚ù∏ boost ROC-AUC by 1.81%percent1.811.81\\\\% on ogbg-molhiv, 1.02%percent1.021.02\\\\% on ogbn-proteins and enhances accuracy by 0.95%percent0.950.95\\\\% on ogbn-arxiv.",
      "citations": [
        {
          "start_pos": 32,
          "end_pos": 35,
          "text": "[1]",
          "paper_id": "bib.bib1",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 37,
          "end_pos": 40,
          "text": "[2]",
          "paper_id": "bib.bib2",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 146,
          "end_pos": 149,
          "text": "[3]",
          "paper_id": "bib.bib3",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 151,
          "end_pos": 154,
          "text": "[4]",
          "paper_id": "bib.bib4",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 177,
          "end_pos": 180,
          "text": "[5]",
          "paper_id": "bib.bib5",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 182,
          "end_pos": 185,
          "text": "[6]",
          "paper_id": "bib.bib6",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 187,
          "end_pos": 190,
          "text": "[7]",
          "paper_id": "bib.bib7",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 209,
          "end_pos": 212,
          "text": "[8]",
          "paper_id": "bib.bib8",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 235,
          "end_pos": 238,
          "text": "[9]",
          "paper_id": "bib.bib9",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 240,
          "end_pos": 244,
          "text": "[10]",
          "paper_id": "bib.bib10",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 529,
          "end_pos": 533,
          "text": "[11]",
          "paper_id": "bib.bib11",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 535,
          "end_pos": 539,
          "text": "[12]",
          "paper_id": "bib.bib12",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 651,
          "end_pos": 655,
          "text": "[11]",
          "paper_id": "bib.bib11",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 657,
          "end_pos": 661,
          "text": "[12]",
          "paper_id": "bib.bib12",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 772,
          "end_pos": 776,
          "text": "[13]",
          "paper_id": "bib.bib13",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 778,
          "end_pos": 782,
          "text": "[14]",
          "paper_id": "bib.bib14",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 902,
          "end_pos": 906,
          "text": "[15]",
          "paper_id": "bib.bib15",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 908,
          "end_pos": 912,
          "text": "[16]",
          "paper_id": "bib.bib16",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 914,
          "end_pos": 918,
          "text": "[17]",
          "paper_id": "bib.bib17",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1758,
          "end_pos": 1762,
          "text": "[18]",
          "paper_id": "bib.bib18",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1764,
          "end_pos": 1768,
          "text": "[19]",
          "paper_id": "bib.bib19",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1869,
          "end_pos": 1873,
          "text": "[13]",
          "paper_id": "bib.bib13",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1875,
          "end_pos": 1879,
          "text": "[14]",
          "paper_id": "bib.bib14",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2233,
          "end_pos": 2237,
          "text": "[20]",
          "paper_id": "bib.bib20",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2250,
          "end_pos": 2254,
          "text": "[13]",
          "paper_id": "bib.bib13",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2272,
          "end_pos": 2276,
          "text": "[21]",
          "paper_id": "bib.bib21",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2644,
          "end_pos": 2648,
          "text": "[22]",
          "paper_id": "bib.bib22",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2802,
          "end_pos": 2806,
          "text": "[23]",
          "paper_id": "bib.bib23",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2943,
          "end_pos": 2947,
          "text": "[22]",
          "paper_id": "bib.bib22",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2949,
          "end_pos": 2953,
          "text": "[24]",
          "paper_id": "bib.bib24",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3402,
          "end_pos": 3406,
          "text": "[18]",
          "paper_id": "bib.bib18",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3681,
          "end_pos": 3685,
          "text": "[25]",
          "paper_id": "bib.bib25",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3687,
          "end_pos": 3691,
          "text": "[26]",
          "paper_id": "bib.bib26",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3969,
          "end_pos": 3973,
          "text": "[27]",
          "paper_id": "bib.bib27",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4001,
          "end_pos": 4005,
          "text": "[28]",
          "paper_id": "bib.bib28",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4051,
          "end_pos": 4055,
          "text": "[29]",
          "paper_id": "bib.bib29",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4057,
          "end_pos": 4061,
          "text": "[13]",
          "paper_id": "bib.bib13",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        }
      ]
    },
    "2 Technical Backgound": {
      "content": "#### Notations & Problem Formulation\n\nWe consider an undirected graph ùí¢={ùí±,‚Ñ∞}ùí¢ùí±‚Ñ∞\\\\mathcal{G}=\\\\{\\\\mathcal{V},\\\\mathcal{E}\\\\}, with ùí±ùí±\\\\mathcal{V} as the node set and ‚Ñ∞‚Ñ∞\\\\mathcal{E} the edge set. The node features of ùí¢ùí¢\\\\mathcal{G} is represented as ùêó‚àà‚ÑùN√óFùêósuperscript‚ÑùùëÅùêπ\\\\mathbf{X}\\\\in\\\\mathbb{R}^{N\\\\times F}, where N=\\|ùí±\\|ùëÅùí±N=\\|\\\\mathcal{V}\\| signifies the total number of nodes in the graph. The feature vector for each node vi‚ààùí±subscriptùë£ùëñùí±v\\_{i}\\\\in\\\\mathcal{V}, with FùêπF dimensions, is denoted by xi=ùêó‚Äã\\[i,‚ãÖ\\]subscriptùë•ùëñùêóùëñ‚ãÖx\\_{i}=\\\\mathbf{X}\\[i,\\\\cdot\\]. An adjacency matrix ùêÄ‚àà{0,1}N√óNùêÄsuperscript01ùëÅùëÅ\\\\mathbf{A}\\\\in\\\\{0,1\\\\}^{N\\\\times N} is utilized to depict the inter-node connectivity, where ùêÄ‚Äã\\[i,j\\]=1ùêÄùëñùëó1\\\\mathbf{A}\\[i,j\\]=1 indicates an edge ei‚Äãj‚àà‚Ñ∞subscriptùëíùëñùëó‚Ñ∞e\\_{ij}\\\\in\\\\mathcal{E}, and 00 otherwise. For our task of graph sparsification, the core objective is to identify a subgraph ùí¢subsubscriptùí¢sub\\\\mathcal{G}\\_{\\\\text{sub}} given a sparsity ratio s%percentùë†s\\\\%:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùí¢sub={ùí±,‚Ñ∞‚àñ‚Ñ∞‚Ä≤},s%=\\|‚Ñ∞‚Ä≤\\|\\|‚Ñ∞\\|,formulae-sequencesuperscriptùí¢subùí±‚Ñ∞superscript‚Ñ∞‚Ä≤percentùë†superscript‚Ñ∞‚Ä≤‚Ñ∞\\\\mathcal{G}^{\\\\text{sub}}=\\\\{\\\\mathcal{V},\\\\mathcal{E}\\\\setminus\\\\mathcal{E}^{\\\\prime}\\\\},\\\\;s\\\\%=\\\\frac{\\|\\\\mathcal{E}^{\\\\prime}\\|}{\\|\\\\mathcal{E}\\|}, |  | (1) |\n\nwhere ùí¢subsuperscriptùí¢sub\\\\mathcal{G}^{\\\\text{sub}} only modifies the edge set ‚Ñ∞‚Ñ∞\\\\mathcal{E} without altering the node set ùí±ùí±\\\\mathcal{V}, and ‚Ñ∞‚Ä≤superscript‚Ñ∞‚Ä≤\\\\mathcal{E}^{\\\\prime} denotes the removed edges, and s%percentùë†s\\\\% represents the ratio of removed edges.\n\n#### Graph Neural Networks\n\nGraph neural networks (GNNs) \\[ [30]\\] have become pivotal for learning graph representations, achieving benchmark performances in various graph tasks at node-level \\[ [31]\\], edge-level \\[ [32]\\], and graph-level \\[ [33]\\]. At the node-level, two of the most famous frameworks are GCN \\[ [34]\\] and GraphSAGE \\[ [35]\\], which leverages the message-passing neural network (MPNN) framework \\[ [36]\\] to aggregate and update node information iteratively. For edge-level and graph-level tasks, GCN and GraphSAGE can be adapted by simply incorporating a predictor head or pooling layers. Nevertheless, there are still specialized frameworks like SEAL \\[ [37]\\] and Neo-GNN \\[ [38]\\] for link prediction, and DiffPool \\[ [39]\\] and PNA \\[ [40]\\] for graph classification. Regardless of the task, MPNN-style GNNs generally adhere to the following paradigm:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùê°i(l)=COMB‚Äã(ùê°i(l‚àí1),AGGR‚Äã{ùê°j(k‚àí1):vj‚ààùí©‚Äã(vi)}),‚ÄÑ0‚â§l‚â§Lformulae-sequencesuperscriptsubscriptùê°ùëñùëôCOMBsuperscriptsubscriptùê°ùëñùëô1AGGRconditional-setsuperscriptsubscriptùê°ùëóùëò1subscriptùë£ùëóùí©subscriptùë£ùëñ‚ÄÑ0ùëôùêø\\\\mathbf{h}\\_{i}^{(l)}=\\\\text{{COMB}}\\\\left(\\\\mathbf{h}\\_{i}^{(l-1)},\\\\text{{AGGR}}\\\\{\\\\mathbf{h}\\_{j}^{(k-1)}:v\\_{j}\\\\in\\\\mathcal{N}(v\\_{i})\\\\}\\\\right),\\\\;0\\\\leq l\\\\leq L |  | (2) |\n\nwhere LùêøL is the number of GNN layers, ùê°i(0)=ùê±isuperscriptsubscriptùê°ùëñ0subscriptùê±ùëñ\\\\mathbf{h}\\_{i}^{(0)}=\\\\mathbf{x}\\_{i}, and ùê°i(l)‚Äã(1‚â§l‚â§L)superscriptsubscriptùê°ùëñùëô1ùëôùêø\\\\mathbf{h}\\_{i}^{(l)}(1\\\\leq l\\\\leq L) denotes visubscriptùë£ùëñv\\_{i}‚Äôs node embedding at the lùëôl-th layer. AGGR(‚ãÖ‚ãÖ\\\\cdot) and COMB(‚ãÖ‚ãÖ\\\\cdot) represent functions used for aggregating neighborhood information and combining ego- and neighbor-representations, respectively.\n\n#### Graph Sparsification\n\nGraph sparsification methods can be categorized by their utility into two main types: computational accelerators and performance boosters. Regarding computational accelerators, early works aimed at speeding up traditional tasks like graph partitioning/clustering often provide theoretical assurances for specific graph properties, such as pairwise distances \\[ [41]\\], cuts \\[ [42]\\], eigenvalue distribution \\[ [43]\\], and effective resistance \\[ [29]\\].\nMore contemporary efforts focus on the GNN training and/or inference acceleration, including methods like SGCN \\[ [44]\\], GEBT \\[ [45]\\], UGS \\[ [20]\\], DSpar \\[ [13]\\], and AdaGLT \\[ [17]\\]. Regarding performance boosters, methods like NeuralSparse \\[ [22]\\] and PTDNet \\[ [24]\\] utilize parameterized denoising networks to eliminate task-irrelevant edges. SUBLIME \\[ [46]\\] and Nodeformer \\[ [47]\\] also involve refining or inferring a cleaner graph structure followed by kùëòk-nearest neighbors (kùëòkNN) sparsification.\n\n#### Mixture of Experts\n\nThe Mixture of Experts (MoE) concept \\[ [48]\\] traces its origins to several seminal works \\[ [49], [50]\\]. Recently, the sparse MoE architecture \\[ [51], [52], [53], [54], [55]\\] has regained attention due to its capacity to support the creation of vast (language) models with trillions of parameters \\[ [54], [56]\\]. Given its stability and generalizability, sparse MoE is now broadly implemented in modern frameworks across various domains, including vision \\[ [57]\\], multi-modal \\[ [58]\\], and multi-task learning \\[ [59], [60]\\]. As for graph learning, MoE has been explored for applications in graph classification \\[ [61]\\], scene graph generation \\[ [62]\\], molecular representation \\[ [63]\\], graph fairness \\[ [64]\\], and graph diversity modeling \\[ [65]\\].",
      "citations": [
        {
          "start_pos": 1634,
          "end_pos": 1638,
          "text": "[30]",
          "paper_id": "bib.bib30",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1770,
          "end_pos": 1774,
          "text": "[31]",
          "paper_id": "bib.bib31",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1792,
          "end_pos": 1796,
          "text": "[32]",
          "paper_id": "bib.bib32",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1819,
          "end_pos": 1823,
          "text": "[33]",
          "paper_id": "bib.bib33",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1891,
          "end_pos": 1895,
          "text": "[34]",
          "paper_id": "bib.bib34",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1915,
          "end_pos": 1919,
          "text": "[35]",
          "paper_id": "bib.bib35",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1994,
          "end_pos": 1998,
          "text": "[36]",
          "paper_id": "bib.bib36",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2252,
          "end_pos": 2256,
          "text": "[37]",
          "paper_id": "bib.bib37",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2274,
          "end_pos": 2278,
          "text": "[38]",
          "paper_id": "bib.bib38",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2318,
          "end_pos": 2322,
          "text": "[39]",
          "paper_id": "bib.bib39",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2336,
          "end_pos": 2340,
          "text": "[40]",
          "paper_id": "bib.bib40",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3708,
          "end_pos": 3712,
          "text": "[41]",
          "paper_id": "bib.bib41",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3724,
          "end_pos": 3728,
          "text": "[42]",
          "paper_id": "bib.bib42",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3759,
          "end_pos": 3763,
          "text": "[43]",
          "paper_id": "bib.bib43",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3795,
          "end_pos": 3799,
          "text": "[29]",
          "paper_id": "bib.bib29",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3917,
          "end_pos": 3921,
          "text": "[44]",
          "paper_id": "bib.bib44",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3933,
          "end_pos": 3937,
          "text": "[45]",
          "paper_id": "bib.bib45",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3948,
          "end_pos": 3952,
          "text": "[20]",
          "paper_id": "bib.bib20",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3965,
          "end_pos": 3969,
          "text": "[13]",
          "paper_id": "bib.bib13",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3987,
          "end_pos": 3991,
          "text": "[17]",
          "paper_id": "bib.bib17",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4056,
          "end_pos": 4060,
          "text": "[22]",
          "paper_id": "bib.bib22",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4077,
          "end_pos": 4081,
          "text": "[24]",
          "paper_id": "bib.bib24",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4172,
          "end_pos": 4176,
          "text": "[46]",
          "paper_id": "bib.bib46",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4197,
          "end_pos": 4201,
          "text": "[47]",
          "paper_id": "bib.bib47",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4389,
          "end_pos": 4393,
          "text": "[48]",
          "paper_id": "bib.bib48",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4443,
          "end_pos": 4447,
          "text": "[49]",
          "paper_id": "bib.bib49",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4449,
          "end_pos": 4453,
          "text": "[50]",
          "paper_id": "bib.bib50",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4498,
          "end_pos": 4502,
          "text": "[51]",
          "paper_id": "bib.bib51",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4504,
          "end_pos": 4508,
          "text": "[52]",
          "paper_id": "bib.bib52",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4510,
          "end_pos": 4514,
          "text": "[53]",
          "paper_id": "bib.bib53",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4516,
          "end_pos": 4520,
          "text": "[54]",
          "paper_id": "bib.bib54",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4522,
          "end_pos": 4526,
          "text": "[55]",
          "paper_id": "bib.bib55",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4654,
          "end_pos": 4658,
          "text": "[54]",
          "paper_id": "bib.bib54",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4660,
          "end_pos": 4664,
          "text": "[56]",
          "paper_id": "bib.bib56",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4813,
          "end_pos": 4817,
          "text": "[57]",
          "paper_id": "bib.bib57",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4836,
          "end_pos": 4840,
          "text": "[58]",
          "paper_id": "bib.bib58",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4871,
          "end_pos": 4875,
          "text": "[59]",
          "paper_id": "bib.bib59",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4877,
          "end_pos": 4881,
          "text": "[60]",
          "paper_id": "bib.bib60",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4974,
          "end_pos": 4978,
          "text": "[61]",
          "paper_id": "bib.bib61",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 5008,
          "end_pos": 5012,
          "text": "[62]",
          "paper_id": "bib.bib62",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 5044,
          "end_pos": 5048,
          "text": "[63]",
          "paper_id": "bib.bib63",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 5070,
          "end_pos": 5074,
          "text": "[64]",
          "paper_id": "bib.bib64",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 5110,
          "end_pos": 5114,
          "text": "[65]",
          "paper_id": "bib.bib65",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        }
      ]
    },
    "3 Methodology": {
      "content": "### 3.1 Overview\n\n[Figure2]In 3.1 Overview ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") illustrates the workflow of our proposed MoG. Specifically, for an input graph, MoG first decomposes it into 1-hop ego graphs for each node. For each node and its corresponding ego graph, a routing network calculates the expert scores. Based on the router‚Äôs decisions, sparsifier experts with different sparsity levels and pruning criteria are allocated to different nodes. Ultimately, a mixture of graphs is obtained based on the weighted consensus of the sparsifier experts. In the following sections, we will first detail how to route different sparsifiers in [Section3.2]Routing to Diverse Experts ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"), then describe how to explicitly model various sparsifier experts in [Section3.3]Customized Sparsifier Modeling ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") and how to ensemble the sparse graphs output by sparsifiers on the Grassmann manifold in [Section3.4]Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"). Finally, the overall optimization process and complexity analysis of MoG is placed in [Section3.5]Training and Optimization ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\n![Refer to caption]Figure 2: The overview of our proposed method. MoG primarily comprises ego-graph decomposition, expert routing, sparsifier customization, and the final graph mixture. For simplicity, we only showcase three pruning criteria including Jaccard similarity, gradient magnitude, and effective resistance.\n\n### 3.2 Routing to Diverse Experts\n\nFollowing the classic concept of a (sparsely-gated) mixture-of-experts \\[ [66]\\], which assigns the most suitable expert(s) to each input sample, MoG aims to allocate the most appropriate sparsity level and pruning criteria to each input node. To achieve this, we first decompose the input graph ùí¢={ùí±,‚Ñ∞}ùí¢ùí±‚Ñ∞\\\\mathcal{G}=\\\\{\\\\mathcal{V},\\\\mathcal{E}\\\\} into 1-hop ego graphs centered on different nodes, denoted as {ùí¢(1),ùí¢(2),‚ãØ,ùí¢(N)}superscriptùí¢1superscriptùí¢2‚ãØsuperscriptùí¢ùëÅ\\\\{\\\\mathcal{G}^{(1)},\\\\mathcal{G}^{(2)},\\\\cdots,\\\\mathcal{G}^{(N)}\\\\}, where ùí¢(i)={ùí±(i),‚Ñ∞(i)}superscriptùí¢ùëñsuperscriptùí±ùëñsuperscript‚Ñ∞ùëñ\\\\mathcal{G}^{(i)}=\\\\{\\\\mathcal{V}^{(i)},\\\\mathcal{E}^{(i)}\\\\}, ùí±(i)={vj\\|vj‚ààùí©‚Äã(vi)}superscriptùí±ùëñconditional-setsubscriptùë£ùëósubscriptùë£ùëóùí©subscriptùë£ùëñ\\\\mathcal{V}^{(i)}=\\\\{v\\_{j}\\|v\\_{j}\\\\in\\\\mathcal{N}(v\\_{i})\\\\}, and ‚Ñ∞(i)={ei‚Äãj\\|(vi,vj)‚àà‚Ñ∞}superscript‚Ñ∞ùëñconditional-setsubscriptùëíùëñùëósubscriptùë£ùëñsubscriptùë£ùëó‚Ñ∞\\\\mathcal{E}^{(i)}=\\\\{e\\_{ij}\\|(v\\_{i},v\\_{j})\\\\in\\\\mathcal{E}\\\\}. Assuming we have KùêæK sparsifier experts, for each node visubscriptùë£ùëñv\\_{i} and its corresponding ego graph ùí¢(i)superscriptùí¢ùëñ\\\\mathcal{G}^{(i)}, we aim to select the kùëòk most suitable sparsifiers. We employ the classic noisy top-kùëòk gating mechanism following \\[ [51]\\]:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Œ®‚Äã(ùí¢(i))=Softmax‚Å°(TopK‚Å°(œà‚Äã(xi),k)),Œ®superscriptùí¢ùëñSoftmaxTopKùúìsubscriptùë•ùëñùëò\\\\displaystyle\\\\Psi(\\\\mathcal{G}^{(i)})=\\\\operatorname{Softmax}(\\\\operatorname{TopK}(\\\\psi(x\\_{i}),k)), |  | (3) |\n|  | œà‚Äã(xi)=xi‚ÄãWg+œµ‚ãÖSoftplus‚Å°(xi‚ÄãWn),ùúìsubscriptùë•ùëñsubscriptùë•ùëñsubscriptùëäùëî‚ãÖitalic-œµSoftplussubscriptùë•ùëñsubscriptùëäùëõ\\\\displaystyle\\\\psi(x\\_{i})=x\\_{i}W\\_{g}+\\\\epsilon\\\\cdot\\\\operatorname{Softplus}(x\\_{i}W\\_{n}), |  | (4) |\n\nwhere œà‚Äã(xi)‚àà‚ÑùKùúìsubscriptùë•ùëñsuperscript‚Ñùùêæ\\\\psi(x\\_{i})\\\\in\\\\mathbb{R}^{K} is the calculated scores of visubscriptùë£ùëñv\\_{i} for total KùêæK experts, TopK‚Å°(‚ãÖ)TopK‚ãÖ\\\\operatorname{TopK}(\\\\cdot) is a selection function that outputs the largest kùëòk\nvalues, and Œ®‚Äã(ùí¢(i))‚àà‚Ñùk=\\[E1(i),E2(i),‚ãØ,Ek(i)\\]Œ®superscriptùí¢ùëñsuperscript‚Ñùùëòsubscriptsuperscriptùê∏ùëñ1subscriptsuperscriptùê∏ùëñ2‚ãØsubscriptsuperscriptùê∏ùëñùëò\\\\Psi(\\\\mathcal{G}^{(i)})\\\\in\\\\mathbb{R}^{k}=\\[E^{(i)}\\_{1},E^{(i)}\\_{2},\\\\cdots,E^{(i)}\\_{k}\\] represents those for selected kùëòk experts. In Œ®‚Äã(ùí¢(i))Œ®superscriptùí¢ùëñ\\\\Psi(\\\\mathcal{G}^{(i)}), œµ‚ààùí©‚Äã(0,1)italic-œµùí©01\\\\epsilon\\\\in\\\\mathcal{N}(0,1) denotes the standard Gaussian noise, Wg‚àà‚ÑùK√óFsubscriptùëäùëîsuperscript‚ÑùùêæùêπW\\_{g}\\\\in\\\\mathbb{R}^{K\\\\times F} and Wn‚àà‚ÑùK√óFsubscriptùëäùëõsuperscript‚ÑùùêæùêπW\\_{n}\\\\in\\\\mathbb{R}^{K\\\\times F} are trainable parameters that learn clean and noisy scores, respectively.\n\nAfter determining the appropriate experts, we proceed to generate different sparse graphs with diverse sparsifiers. We denote each sparsifier by Œ∫‚Äã(‚ãÖ)ùúÖ‚ãÖ\\\\kappa(\\\\cdot), which takes in a dense graph ùí¢ùí¢\\\\mathcal{G} and outputs a sparse one ùí¢~=Œ∫‚Äã(ùí¢)~ùí¢ùúÖùí¢\\\\tilde{\\\\mathcal{G}}=\\\\kappa(\\\\mathcal{G}). Based on this, for each node visubscriptùë£ùëñv\\_{i} and its ego graph ùí¢(i)superscriptùí¢ùëñ\\\\mathcal{G}^{(i)}, the routing network selects kùëòk experts that produce kùëòk sparse ego graphs. Notably, sparsifiers differ in their pruning rates (i.e. the proportion of the edges to be removed) and the pruning criteria, which will be detailed in [Section3.3]Customized Sparsifier Modeling ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"). MoG‚Äôs dynamic selection of different sparsifiers for each node aids in identifying pruning strategies truly adapted to the node‚Äôs local context. Formally, the mixture of kùëòk sparse graphs can be written as:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùí¢(i)^=ESMB‚Äã({ùí¢~m(i)}m=1k),ùí¢~m(i)=Œ∫m‚Äã(ùí¢(i)),formulae-sequence^superscriptùí¢ùëñESMBsuperscriptsubscriptsubscriptsuperscript~ùí¢ùëñùëöùëö1ùëòsubscriptsuperscript~ùí¢ùëñùëösuperscriptùúÖùëösuperscriptùí¢ùëñ\\\\widehat{\\\\mathcal{G}^{(i)}}=\\\\text{{ESMB}}(\\\\{\\\\widetilde{\\\\mathcal{G}}^{(i)}\\_{m}\\\\}\\_{m=1}^{k}),\\\\;\\\\;\\\\widetilde{\\\\mathcal{G}}^{(i)}\\_{m}=\\\\kappa^{m}(\\\\mathcal{G}^{(i)}), |  | (5) |\n\nwhere ESMB‚Äã(‚ãÖ)ESMB‚ãÖ\\\\text{{ESMB}}(\\\\cdot) is a combination function that receives kùëòk sparse graphs and ideally outputs an emsemble version ùí¢(i)^={ùí±(i)^,‚Ñ∞(i)^}^superscriptùí¢ùëñ^superscriptùí±ùëñ^superscript‚Ñ∞ùëñ\\\\widehat{\\\\mathcal{G}^{(i)}}=\\\\{\\\\widehat{\\\\mathcal{V}^{(i)}},\\\\widehat{\\\\mathcal{E}^{(i)}}\\\\} that preserves their desirable properties.\nIt is noteworthy that, MoG can seamlessly integrate with any GNN backbone after obtaining each node‚Äôs sparse ego graph. Specifically, we modify the aggregation method in [Equation2]In Graph Neural Networks ‚Ä£ 2 Technical Backgound ‚Ä£ Graph Sparsification via Mixture of Graphs\") as follows:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùê°i(l)=COMB‚Äã(ùê°i(l‚àí1),AGGR‚Äã{ùê°j(k‚àí1):vj‚ààùí±(i)^}).superscriptsubscriptùê°ùëñùëôCOMBsuperscriptsubscriptùê°ùëñùëô1AGGRconditional-setsuperscriptsubscriptùê°ùëóùëò1subscriptùë£ùëó^superscriptùí±ùëñ\\\\mathbf{h}\\_{i}^{(l)}=\\\\text{{COMB}}\\\\left(\\\\mathbf{h}\\_{i}^{(l-1)},\\\\text{{AGGR}}\\\\{\\\\mathbf{h}\\_{j}^{(k-1)}:v\\_{j}\\\\in\\\\widehat{\\\\mathcal{V}^{(i)}}\\\\}\\\\right). |  | (6) |\n\nMoG acts as a plug-and-play module that can be pre-attached to any GNN architecture, leveraging multi-expert sparsification to enhance GNNs with (1) performance improvements from removing task-irrelevant edges (validated in [Section4.3]MoG as Performance Booster ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\")); (2) resistance to high graph sparsity through precise and customized sparsification (validated in [Section4.2]MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\")). The remaining questions now are: how can we design explicitly different sparsifiers? and further, how can we develop an effective combination function that integrates the sparse graphs from different experts?\n\n### 3.3 Customized Sparsifier Modeling\n\nWith the workflow of MoG in mind, in this section, we will delve into how to design sparsifiers driven by various pruning criteria and different levels of sparsity. Revisiting graph-related learning tasks, their objective can generally be considered as learning P‚Äã(ùêò\\|ùí¢)ùëÉconditionalùêòùí¢P(\\\\mathbf{Y}\\|\\\\mathcal{G}), which means learning the distribution of the target ùêòùêò\\\\mathbf{Y} given an input graph. Based on this, a sparsifier Œ∫‚Äã(‚ãÖ)ùúÖ‚ãÖ\\\\kappa(\\\\cdot) can be formally expressed as follows:\n\n|     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- |\n|  | P‚Äã(ùêò\\|ùí¢)ùëÉconditionalùêòùí¢\\\\displaystyle P(\\\\mathbf{Y}\\|\\\\mathcal{G}) | ‚âà‚àëg‚ààùïäùí¢P‚Äã(ùêò\\|ùí¢~)‚ÄãP‚Äã(ùí¢~\\|ùí¢)absentsubscriptùëîsubscriptùïäùí¢ùëÉconditionalùêò~ùí¢ùëÉconditional~ùí¢ùí¢\\\\displaystyle\\\\approx\\\\sum\\_{g\\\\in\\\\mathbb{S}\\_{\\\\mathcal{G}}}P(\\\\mathbf{Y}\\\\;\\|\\\\;\\\\tilde{\\\\mathcal{G}})P(\\\\tilde{\\\\mathcal{G}}\\\\;\\|\\\\;\\\\mathcal{G}) | ‚âà‚àëg‚ààùïäùí¢QŒò‚Äã(ùêò\\|ùí¢~)‚ÄãQŒ∫‚Äã(ùí¢~\\|ùí¢)absentsubscriptùëîsubscriptùïäùí¢subscriptùëÑŒòconditionalùêò~ùí¢subscriptùëÑùúÖconditional~ùí¢ùí¢\\\\displaystyle\\\\approx\\\\sum\\_{g\\\\in\\\\mathbb{S}\\_{\\\\mathcal{G}}}Q\\_{\\\\Theta}(\\\\mathbf{Y}\\\\;\\|\\\\;\\\\tilde{\\\\mathcal{G}})Q\\_{\\\\kappa}(\\\\tilde{\\\\mathcal{G}}\\\\;\\|\\\\;\\\\mathcal{G}) |  | (7) |\n\nwhere ùïäùí¢subscriptùïäùí¢\\\\mathbb{S}\\_{\\\\mathcal{G}} is a class of sparsified subgraphs of ùí¢ùí¢\\\\mathcal{G}. The second term in [Equation7]In 3.3 Customized Sparsifier Modeling ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") aims to approximate the distribution of ùêòùêò\\\\mathbf{Y} using the sparsified graph ùí¢~~ùí¢\\\\tilde{\\\\mathcal{G}} as a bottleneck, while the third term uses two approximation functions QŒòsubscriptùëÑŒòQ\\_{\\\\Theta} and QŒ∫subscriptùëÑùúÖQ\\_{\\\\kappa} for P‚Äã(ùêò\\|ùí¢~)ùëÉconditionalùêò~ùí¢P(\\\\mathbf{Y}\\\\;\\|\\\\;\\\\tilde{\\\\mathcal{G}}) and P‚Äã(ùí¢~\\|ùí¢)ùëÉconditional~ùí¢ùí¢P(\\\\tilde{\\\\mathcal{G}}\\\\;\\|\\\\;\\\\mathcal{G}) parameterized by ŒòŒò\\\\Theta and Œ∫ùúÖ\\\\kappa respectively. The parameter ŒòŒò\\\\Theta typically refers to the parameters of the GNN, while the sparsifier Œ∫‚Äã(‚ãÖ)ùúÖ‚ãÖ\\\\kappa(\\\\cdot), on the other hand, is crafted to take an ego graph ùí¢(i)superscriptùí¢ùëñ\\\\mathcal{G}^{(i)} and output its sparsified version ùí¢(i)~~superscriptùí¢ùëñ\\\\tilde{\\\\mathcal{G}^{(i)}}, guided by a specific pruning paradigm Cùê∂C and sparsity sm%percentsuperscriptùë†ùëös^{m}\\\\%:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Œ∫m‚Äã(ùí¢(i))={ùí±(i),‚Ñ∞(i)‚àñ‚Ñ∞p(i)},‚Ñ∞p(i)=TopK‚Å°(‚àíCm‚Äã(‚Ñ∞),‚åà\\|‚Ñ∞(i)\\|√ósm%‚åâ),formulae-sequencesuperscriptùúÖùëösuperscriptùí¢ùëñsuperscriptùí±ùëñsuperscript‚Ñ∞ùëñsuperscriptsubscript‚Ñ∞ùëùùëñsuperscriptsubscript‚Ñ∞ùëùùëñTopKsuperscriptùê∂ùëö‚Ñ∞superscript‚Ñ∞ùëñpercentsuperscriptùë†ùëö\\\\kappa^{m}(\\\\mathcal{G}^{(i)})=\\\\{\\\\mathcal{V}^{(i)},\\\\mathcal{E}^{(i)}\\\\setminus\\\\mathcal{E}\\_{p}^{(i)}\\\\},\\\\;\\\\mathcal{E}\\_{p}^{(i)}=\\\\operatorname{TopK}\\\\left(-C^{m}(\\\\mathcal{E}),\\\\lceil\\|\\\\mathcal{E}^{(i)}\\|\\\\times s^{m}\\\\%\\\\rceil\\\\right), |  | (8) |\n\nwhere Cm‚Äã(‚ãÖ)superscriptùê∂ùëö‚ãÖC^{m}(\\\\cdot) acts as the mùëöm-th expert‚Äôs scoring function that evaluates edge importance. We leverage long-tail gradient estimation \\[ [67]\\] to ensure the TopK‚Å°(‚ãÖ)TopK‚ãÖ\\\\operatorname{TopK}(\\\\cdot) operator is differentiable. Furthermore, to ensure the sparsifier is driven by different sparsity criteria, we implement Cm‚Äã(‚ãÖ)superscriptùê∂ùëö‚ãÖC^{m}(\\\\cdot) as follows:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Cm‚Äã(ei‚Äãj)=FFN‚Å°(xi,xj,c‚Äã(ei‚Äãj)),cm‚Äã(ei‚Äãj)‚àà{Degree: ‚Äã(\\|ùí©‚Äã(vi)+ùí©‚Äã(vj)\\|)/2Jaccard Similarity: ‚Äã\\|ùí©‚Äã(vi)‚à©ùí©‚Äã(vj)\\|\\|ùí©‚Äã(vi)‚à™ùí©‚Äã(vj)\\|ER: ‚Äã(ei‚àíej)T‚Äãùêã‚àí1‚Äã(ei‚àíej)Gradient Magnitude: ‚Äã\\|‚àÇ‚Ñí/‚àÇei‚Äãj\\|},formulae-sequencesuperscriptùê∂ùëösubscriptùëíùëñùëóFFNsubscriptùë•ùëñsubscriptùë•ùëóùëêsubscriptùëíùëñùëósuperscriptùëêùëösubscriptùëíùëñùëóDegree: ùí©subscriptùë£ùëñùí©subscriptùë£ùëó2Jaccard Similarity: ùí©subscriptùë£ùëñùí©subscriptùë£ùëóùí©subscriptùë£ùëñùí©subscriptùë£ùëóER: superscriptsubscriptùëíùëñsubscriptùëíùëóùëásuperscriptùêã1subscriptùëíùëñsubscriptùëíùëóGradient Magnitude: ‚Ñísubscriptùëíùëñùëó\\\\displaystyle C^{m}(e\\_{ij})=\\\\operatorname{FFN}\\\\left(x\\_{i},x\\_{j},c(e\\_{ij})\\\\right),\\\\;c^{m}(e\\_{ij})\\\\in\\\\left\\\\{\\\\begin{array}\\[\\]{c}\\\\text{Degree: }\\\\left(\\|\\\\mathcal{N}(v\\_{i})+\\\\mathcal{N}(v\\_{j})\\|\\\\right)/2\\\\\\<br>\\\\text{Jaccard Similarity: }\\\\frac{\\|\\\\mathcal{N}(v\\_{i})\\\\cap\\\\mathcal{N}(v\\_{j})\\|}{\\|\\\\mathcal{N}(v\\_{i})\\\\cup\\\\mathcal{N}(v\\_{j})\\|}\\\\\\<br>\\\\text{ER: }(e\\_{i}-e\\_{j})^{T}\\\\mathbf{L}^{-1}(e\\_{i}-e\\_{j})\\\\\\<br>\\\\text{Gradient Magnitude: }\\|\\\\partial\\\\mathcal{L}/\\\\partial e\\_{ij}\\|\\\\end{array}\\\\right\\\\}, |  | (9) |\n\nwhere FFN‚Å°(‚ãÖ)FFN‚ãÖ\\\\operatorname{FFN}(\\\\cdot) is a feed-forward network, cm‚Äã(ei‚Äãj)superscriptùëêùëösubscriptùëíùëñùëóc^{m}(e\\_{ij}) represents the prior guidance on edge significance. By equipping different sparsifiers with various priors and sparsity levels, we can customize the most appropriate pruning strategy for each node‚Äôs local scenario. In practice, we select four widely-used pruning criteria including edge degree \\[ [68]\\], Jaccard similarity \\[ [69], [70]\\], effective resistance \\[ [29], [13]\\] and gradient magnitude \\[ [71], [17]\\]. Details regarding these criteria and their implementations are in [AppendixB]Appendix B Deatils on Pruning Criteria ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\n### 3.4 Graph Mixture on Grassmann Manifold\n\nAfter employing kùëòk sparsifiers driven by different criteria and sparsity levels, we are in need of an effective mechanism to ensemble these kùëòk sparse subgraphs and maximize the aggregation of their advantages. A straightforward approach is voting or averaging \\[ [72]\\]; however, such simple merging may fail to capture the intricate relationships among multi-view graphs \\[ [73]\\], potentially resulting in the loss of advantageous properties from all experts.\nInspired by recent advances in manifold representations \\[ [74], [75]\\], we develop a subspace-based sparse graph ensembling mechanism. We first provide the definition of the Grassmann manifold \\[ [75]\\] as follows:\n\n###### Definition 1(Grassmann manifold).\n\nGrassmann manifold G‚Äãr‚Äã(n,p)ùê∫ùëüùëõùëùGr(n,p) is the space of nùëõn-by-pùëùp matrices (e.g., ùêåùêå\\\\mathbf{M}) with\northonormal columns, where 0‚â§p‚â§n0ùëùùëõ0\\\\leq p\\\\leq n, i.e.,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | G‚Äãr‚Äã(n,p)={ùêå\\|ùêå‚àà‚Ñùn√óp,ùêå‚ä§‚Äãùêå=ùêà}.ùê∫ùëüùëõùëùconditional-setùêåformulae-sequenceùêåsuperscript‚ÑùùëõùëùsuperscriptùêåtopùêåùêàGr(n,p)=\\\\left\\\\{\\\\mathbf{M}\\|\\\\mathbf{M}\\\\in\\\\mathbb{R}^{n\\\\times p},\\\\mathbf{M}^{\\\\top}\\\\mathbf{M}=\\\\mathbf{I}\\\\right\\\\}. |  | (10) |\n\nAccording to Grassmann manifold theory, each orthonormal matrix represents a unique subspace and thus corresponds to a distinct point on the Grassmann manifold \\[ [76]\\]. This applies to the eigenvector matrix of the normalized Laplacian matrix (ùêî=ùêã\\[:,:p\\]‚àà‚Ñùn√óp\\\\mathbf{U}=\\\\mathbf{L}\\[:,:p\\]\\\\in\\\\mathbb{R}^{n\\\\times p}), which comprises the first pùëùp eigenvectors and is orthonormal \\[ [77]\\], and thereby can be mapped onto the Grassmann manifold.\n\nConsider the kùëòk sparse subgraphs {ùí¢~m(i)}m=1ksuperscriptsubscriptsubscriptsuperscript~ùí¢ùëñùëöùëö1ùëò\\\\{\\\\widetilde{\\\\mathcal{G}}^{(i)}\\_{m}\\\\}\\_{m=1}^{k}, their subspace representations are {ùêîm(i)‚àà‚Ñù\\|ùí©‚Äã(vi)\\|√óp}m=1ksuperscriptsubscriptsubscriptsuperscriptùêîùëñùëösuperscript‚Ñùùí©subscriptùë£ùëñùëùùëö1ùëò\\\\{\\\\mathbf{U}^{(i)}\\_{m}\\\\in\\\\mathbb{R}^{\\|\\\\mathcal{N}(v\\_{i})\\|\\\\times p}\\\\}\\_{m=1}^{k}. We aim to identify an oracle subspace ùêî(i)superscriptùêîùëñ\\\\mathbf{U}^{(i)} on the Grassmann manifold, which essentially represents a graph, that serves as an informative combination of kùëòk base graphs. Formally, we present the following objective function:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | minùêî(ùê¢)‚àà‚Ñù\\|ùí©‚Äã(vi)\\|√óp‚Äã‚àëm=1k(tr‚Å°(ùêî(ùê¢)‚ä§‚Äãùêãm‚Äãùêî(i))‚èü(1) node connectivity+Em(i)‚èûexpert score‚ãÖd2‚Äã(ùêî(i),ùêîm(i))‚èü(2) subspace distance),s.t.‚Å°ùêî(ùê¢)‚ä§‚Äãùêî(ùê¢)=ùêà\\\\displaystyle\\\\min\\_{\\\\mathbf{U^{(i)}}\\\\in\\\\mathbb{R}^{\\|\\\\mathcal{N}(v\\_{i})\\|\\\\times p}}\\\\sum\\_{m=1}^{k}\\\\left(\\\\underbrace{\\\\operatorname{tr}(\\\\mathbf{U^{(i)}}^{\\\\top}\\\\mathbf{L}\\_{m}\\\\mathbf{U}^{(i)})}\\_{\\\\textrm{(1) node connectivity}}+\\\\underbrace{\\\\overbrace{E^{(i)}\\_{m}}^{\\\\text{expert score}}\\\\cdot d^{2}(\\\\mathbf{U}^{(i)},\\\\mathbf{U}^{(i)}\\_{m})}\\_{\\\\textrm{(2) subspace distance}}\\\\right),\\\\operatorname{s.t.}\\\\mathbf{U^{(i)}}^{\\\\top}\\\\mathbf{U^{(i)}}=\\\\mathbf{I} |  | (11) |\n\nwhere tr‚Å°(‚ãÖ)tr‚ãÖ\\\\operatorname{tr}(\\\\cdot) calculates the trace of matrices, ùêãmsubscriptùêãùëö\\\\mathbf{L}\\_{m} is the graph Laplacian of ùí¢m(i)subscriptsuperscriptùí¢ùëñùëö\\\\mathcal{G}^{(i)}\\_{m}, d2‚Äã(ùêî1,ùêî2)superscriptùëë2subscriptùêî1subscriptùêî2d^{2}(\\\\mathbf{U}\\_{1},\\\\mathbf{U}\\_{2}) denotes the project distance between two subspaces \\[ [74]\\], and Em(i)subscriptsuperscriptùê∏ùëñùëöE^{(i)}\\_{m} is the expert score for the mùëöm-th expert, calculated by the routing network Œ®Œ®\\\\Psi, which determines which expert‚Äôs subspace the combined subspace should more closely align with. In [Equation11]In 3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"), the first term is designed to preserve the original node connectivity based on spectral embedding, and the second term controls that individual subspaces are\nclose to the final representative subspace ùêî(i)superscriptùêîùëñ\\\\mathbf{U}^{(i)}. Using the Rayleigh-Ritz Theorem \\[ [78]\\], we provide a closed-form solution for [Equation11]In 3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") and obtain the graph Laplacian of the ensemble sparse graph ùí¢(i)^^superscriptùí¢ùëñ\\\\widehat{\\\\mathcal{G}^{(i)}} as follows:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùêã(i)^=‚àëm=1k(ùêãm‚àíEm(i)‚ãÖùêî(ùê¢)‚ä§‚Äãùêî(ùê¢)).^superscriptùêãùëñsuperscriptsubscriptùëö1ùëòsubscriptùêãùëö‚ãÖsuperscriptsubscriptùê∏ùëöùëñsuperscriptsuperscriptùêîùê¢topsuperscriptùêîùê¢\\\\widehat{\\\\mathbf{L}^{(i)}}=\\\\sum\\_{m=1}^{k}\\\\left(\\\\mathbf{L}\\_{m}-E\\_{m}^{(i)}\\\\cdot\\\\mathbf{U^{(i)}}^{\\\\top}\\\\mathbf{U^{(i)}}\\\\right). |  | (12) |\n\nWe provide detailed derivations and explanations for [Equations11]In 3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") and [12]Equation 12 ‚Ä£ 3.4 Graph Mixture on Grassmann Manifold ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") in [AppendixC]Appendix C Graph Mixture on Grassmann Manifold ‚Ä£ Graph Sparsification via Mixture of Graphs\"). Consequently, we can reformulate the function ESMB‚Äã(‚ãÖ)ESMB‚ãÖ\\\\text{{ESMB}}(\\\\cdot) in [Equation5]In 3.2 Routing to Diverse Experts ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\") as follows:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ESMB‚Äã({ùí¢~m(i)}m=1k)={ùêÉ‚àíùêã(i)^,ùêó(i)}={ùêÉ‚àí‚àëm=1k(ùêãm‚àíEm(i)‚ãÖùêî(ùê¢)‚ä§‚Äãùêî(ùê¢)),ùêó(i)}.ESMBsuperscriptsubscriptsubscriptsuperscript~ùí¢ùëñùëöùëö1ùëòùêÉ^superscriptùêãùëñsuperscriptùêóùëñùêÉsuperscriptsubscriptùëö1ùëòsubscriptùêãùëö‚ãÖsuperscriptsubscriptùê∏ùëöùëñsuperscriptsuperscriptùêîùê¢topsuperscriptùêîùê¢superscriptùêóùëñ\\\\text{{ESMB}}(\\\\{\\\\widetilde{\\\\mathcal{G}}^{(i)}\\_{m}\\\\}\\_{m=1}^{k})=\\\\{\\\\mathbf{D}-\\\\widehat{\\\\mathbf{L}^{(i)}},\\\\mathbf{X}^{(i)}\\\\}=\\\\left\\\\{\\\\mathbf{D}-\\\\sum\\_{m=1}^{k}\\\\left(\\\\mathbf{L}\\_{m}-E\\_{m}^{(i)}\\\\cdot\\\\mathbf{U^{(i)}}^{\\\\top}\\\\mathbf{U^{(i)}}\\\\right),\\\\mathbf{X}^{(i)}\\\\right\\\\}. |  | (13) |\n\nOn the Grassmann manifold, the subspace ensemble effectively captures the beneficial properties of each expert‚Äôs sparse graph. After obtaining the final version of each node‚Äôs ego-graph, ùí¢(i)^={ùêÄ(i)^,ùêó(i)}^superscriptùí¢ùëñ^superscriptùêÄùëñsuperscriptùêóùëñ\\\\widehat{\\\\mathcal{G}^{(i)}}=\\\\{\\\\widehat{\\\\mathbf{A}^{(i)}},\\\\mathbf{X}^{(i)}\\\\}, we conduct a post-sparsification step as the graph ensembled on the Grassmann manifold can become dense again. Specifically, we obtain the final sparsity s(i)%percentsuperscriptùë†ùëñs^{(i)}\\\\% for visubscriptùë£ùëñv\\_{i} by weighting the sparsity of each expert and sparsifying ùí¢(i)^^superscriptùí¢ùëñ\\\\widehat{\\\\mathcal{G}^{(i)}}.\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùí¢(i)^‚Üê{TopK‚Å°(ùêÄ(i)^,\\|‚Ñ∞(i)\\|√ós(i)%),ùêó(i)},s(i)%=1k‚Äã‚àëm=1ksm%.formulae-sequence‚Üê^superscriptùí¢ùëñTopK^superscriptùêÄùëñsuperscript‚Ñ∞ùëñpercentsuperscriptùë†ùëñsuperscriptùêóùëñpercentsuperscriptùë†ùëñ1ùëòsuperscriptsubscriptùëö1ùëòpercentsuperscriptùë†ùëö\\\\widehat{\\\\mathcal{G}^{(i)}}\\\\leftarrow\\\\{\\\\operatorname{TopK}(\\\\widehat{\\\\mathbf{A}^{(i)}},\\|\\\\mathcal{E}^{(i)}\\|\\\\times s^{(i)}\\\\%),\\\\mathbf{X}^{(i)}\\\\},\\\\;s^{(i)}\\\\%=\\\\frac{1}{k}\\\\sum\\_{m=1}^{k}s^{m}\\\\%. |  | (14) |\n\nThese post-sparsified ùí¢(i)^^superscriptùí¢ùëñ\\\\widehat{\\\\mathcal{G}^{(i)}} are then reassembled together into ùí¢^‚Üê{ùí¢(1)^,ùí¢(2)^,‚ãØ,ùí¢(\\|ùí±\\|)^}‚Üê^ùí¢^superscriptùí¢1^superscriptùí¢2‚ãØ^superscriptùí¢ùí±\\\\widehat{\\\\mathcal{G}}\\\\leftarrow\\\\{\\\\widehat{\\\\mathcal{G}^{(1)}},\\\\widehat{\\\\mathcal{G}^{(2)}},\\\\cdots,\\\\widehat{\\\\mathcal{G}^{(\\|\\\\mathcal{V}\\|)}}\\\\}. Ultimately, the sparsified graph ùí¢^^ùí¢\\\\widehat{\\\\mathcal{G}} produced by MoG can be input into any MPNN \\[ [36]\\] or graph transformer \\[ [79]\\] architectures for end-to-end training.\n\n### 3.5 Training and Optimization\n\n#### Additional Loss Functions\n\nFollowing classic MoE works \\[ [51], [65]\\], we introduce an expert importance loss to prevent MoG from converging to a trivial solution where only a single group of experts is consistently selected:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Importance(ùí±)=‚àëi=1\\|ùí±\\|‚àëj=1kEm(i),‚Ñíimportance(ùí±)=CV(Importance(ùí±))2,\\\\operatorname{Importance}(\\\\mathcal{V})=\\\\sum\\_{i=1}^{\\|\\\\mathcal{V}\\|}\\\\sum\\_{j=1}^{k}E^{(i)}\\_{m},\\\\;\\\\;\\\\mathcal{L}\\_{\\\\text{importance}}(\\\\mathcal{V})=\\\\operatorname{CV}(\\\\operatorname{Importance}(\\\\mathcal{V}))^{2}, |  | (15) |\n\nwhere Importance‚Å°(ùí±)Importanceùí±\\\\operatorname{Importance}(\\\\mathcal{V}) represents the sum of each node‚Äôs expert scores across the node-set, CV‚Å°(‚ãÖ)CV‚ãÖ\\\\operatorname{CV}(\\\\cdot) calculates the coefficient of variation, and ‚Ñíimportancesubscript‚Ñíimportance\\\\mathcal{L}\\_{\\\\text{importance}} ensures the variation of experts. Therefore, the final loss function combines both task-specific and MoG-related losses, formulated as follows:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ‚Ñí=‚Ñítask+Œª‚ãÖ‚Ñíimportance,‚Ñísubscript‚Ñítask‚ãÖùúÜsubscript‚Ñíimportance\\\\mathcal{L}=\\\\mathcal{L}\\_{\\\\text{task}}+\\\\lambda\\\\cdot\\\\mathcal{L}\\_{\\\\text{importance}}, |  | (16) |\n\nwhere ŒªùúÜ\\\\lambda is a hand-tuned scaling factor, with its sensitivity analysis placed in [Section4.4]Sensitivity Analysis ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\n#### Complexity Analysis\n\nTo better illustrate the effectiveness and clarity of MoG, we provide a comprehensive algorithmic table in [AppendixD]Appendix D Algorithm Workflow ‚Ä£ Graph Sparsification via Mixture of Graphs\") and detailed complexity analysis in [AppendixE]Appendix E Complexity Analysis ‚Ä£ Graph Sparsification via Mixture of Graphs\"). To address concerns regarding the runtime efficiency of MoG, we have included an empirical analysis of efficiency in [SectionG.2]G.2 Results for Efficiency Validation ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\").",
      "citations": [
        {
          "start_pos": 1765,
          "end_pos": 1769,
          "text": "[66]",
          "paper_id": "bib.bib66",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2924,
          "end_pos": 2928,
          "text": "[51]",
          "paper_id": "bib.bib51",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 10348,
          "end_pos": 10352,
          "text": "[67]",
          "paper_id": "bib.bib67",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12097,
          "end_pos": 12101,
          "text": "[68]",
          "paper_id": "bib.bib68",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12127,
          "end_pos": 12131,
          "text": "[69]",
          "paper_id": "bib.bib69",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12133,
          "end_pos": 12137,
          "text": "[70]",
          "paper_id": "bib.bib70",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12165,
          "end_pos": 12169,
          "text": "[29]",
          "paper_id": "bib.bib29",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12171,
          "end_pos": 12175,
          "text": "[13]",
          "paper_id": "bib.bib13",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12204,
          "end_pos": 12208,
          "text": "[71]",
          "paper_id": "bib.bib71",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12210,
          "end_pos": 12214,
          "text": "[17]",
          "paper_id": "bib.bib17",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12693,
          "end_pos": 12697,
          "text": "[72]",
          "paper_id": "bib.bib72",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12805,
          "end_pos": 12809,
          "text": "[73]",
          "paper_id": "bib.bib73",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12951,
          "end_pos": 12955,
          "text": "[74]",
          "paper_id": "bib.bib74",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12957,
          "end_pos": 12961,
          "text": "[75]",
          "paper_id": "bib.bib75",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 13089,
          "end_pos": 13093,
          "text": "[75]",
          "paper_id": "bib.bib75",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 13768,
          "end_pos": 13772,
          "text": "[76]",
          "paper_id": "bib.bib76",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 13994,
          "end_pos": 13998,
          "text": "[77]",
          "paper_id": "bib.bib77",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 15701,
          "end_pos": 15705,
          "text": "[74]",
          "paper_id": "bib.bib74",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 16329,
          "end_pos": 16333,
          "text": "[78]",
          "paper_id": "bib.bib78",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 19798,
          "end_pos": 19802,
          "text": "[36]",
          "paper_id": "bib.bib36",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 19829,
          "end_pos": 19833,
          "text": "[79]",
          "paper_id": "bib.bib79",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 19974,
          "end_pos": 19978,
          "text": "[51]",
          "paper_id": "bib.bib51",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 19980,
          "end_pos": 19984,
          "text": "[65]",
          "paper_id": "bib.bib65",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        }
      ]
    },
    "4 Experiments": {
      "content": "In this section, we conduct extensive experiments to answer the following research questions:\n(RQ1) Can MoG effectively help GNNs combat graph sparsity?\n(RQ2) Does MoG genuinely accelerate the GNN inference?\n(RQ3) Can MoG help boost GNN performance?\n(RQ4) How sensitive is MoG to its key components and parameters?\n\n### 4.1 Experiment Setup\n\n#### Datasets and Backbones\n\nWe opt for four large-scale OGB benchmarks \\[ [80]\\], including ogbn-arxiv, ogbn-proteins and ogbn-products for node classification, and ogbg-ppa for graph classification. The dataset splits are given by \\[ [80]\\]. Additionally, we choose two superpixel datasets, MNIST and CIFAR-10 \\[ [81]\\]. We select GraphSAGE \\[ [35]\\], DeeperGCN \\[ [82]\\], and PNA \\[ [40]\\] as the GNN backbones. More details are provided in [AppendixF]Appendix F Experimental Details ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\n#### Parameter Configurations\n\nFor MoG, we adopt the m=4ùëö4m=4 sparsity criteria outlined in [Section3.3]Customized Sparsifier Modeling ‚Ä£ 3 Methodology ‚Ä£ Graph Sparsification via Mixture of Graphs\"), assigning n=3ùëõ3n=3 different sparsity levels {s1,s2,s3}subscriptùë†1subscriptùë†2subscriptùë†3\\\\{s\\_{1},s\\_{2},s\\_{3}\\\\} to each criterion, resulting in a total of K=m√ón=12ùêæùëöùëõ12K=m\\\\times n=12 experts. We select k=2ùëò2k=2 sparsifier experts for each node, and set the loss scaling factor Œª=1‚Äãe‚àí2ùúÜ1ùëí2\\\\lambda=1e-2 across all datasets and backbones. By adjusting the sparsity combination, we can control the global sparsity of the entire graph. We present more details on parameter settings in [SectionF.4]F.4 Parameter Setting ‚Ä£ Appendix F Experimental Details ‚Ä£ Graph Sparsification via Mixture of Graphs\"), and a recipe for adjusting the graph sparsity in [SectionF.6]F.6 Adjusting Graph Sparsity ‚Ä£ Appendix F Experimental Details ‚Ä£ Graph Sparsification via Mixture of Graphs\").\n\n### 4.2 MoG as Graph Sparsifier\n\nTo answer RQ1 and RQ2, we comprehensively compare MoG with eleven widely-used topology-guided sparsifiers and five semantic-guided sparsifiers, as outlined in [Table1]In 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"), with more detailed explanations in [SectionF.5]F.5 Sparsifier Baseline Configurations ‚Ä£ Appendix F Experimental Details ‚Ä£ Graph Sparsification via Mixture of Graphs\"). The quantitative results on five datasets are shown in [Tables1]In 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"), [9]Table 9 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\"), [8]Table 8 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\"), [11]Table 11 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\") and [10]Table 10 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\") and the efficiency comparison is in [Figure3]In Obs. ‚ù∏ MoG can effectively accelerate GNN inference with negligible performance loss. ‚Ä£ 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"). We give the following observations (Obs.):\n\nTable 1: Node classification performance comparison to state-of-the-art sparsification methods. All methods are trained using GraphSAGE, and the reported metrics represent the average of five runs. We denote methods with ‚Ä†‚Ä†{\\\\dagger} that do not have precise control over sparsity; their performance is reported around the target sparsity ¬±2%plus-or-minuspercent2\\\\pm 2\\\\%. ‚ÄúSparsity %‚Äù refers to the ratio of removed edges as defined in [Section2]Notations & Problem Formulation ‚Ä£ 2 Technical Backgound ‚Ä£ Graph Sparsification via Mixture of Graphs\"). ‚ÄúOOM‚Äù and ‚ÄúOOT‚Äù denotes out-of-memory and out-of-time, respectively.\n\n|     |     |     |     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n|  | Dataset | ogbn-arxiv (Accuracy‚Üë‚Üë\\\\uparrow) | ogbn-proteins (ROC-AUC‚Üë‚Üë\\\\uparrow) |\n| Sparsity % | 10 | 30 | 50 | 70 | 10 | 30 | 50 | 70 |\n| Topology-guided | Random | 70.03‚Üì1.46 | 68.40‚Üì3.09 | 64.32‚Üì7.17 | 61.18‚Üì10.3 | 76.72‚Üì0.68 | 75.03‚Üì2.37 | 73.58‚Üì3.82 | 72.30‚Üì5.10 |\n| Rank Degree‚Ä†\\[ [83]\\] | 68.13‚Üì3.36 | 67.01‚Üì4.48 | 65.58‚Üì5.91 | 62.17‚Üì9.32 | 77.47‚Üë0.07 | 76.15‚Üì1.25 | 75.59‚Üì1.81 | 74.23‚Üì3.17 |\n| Local Degree‚Ä†\\[ [84]\\] | 68.94‚Üì2.55 | 67.20‚Üì4.29 | 65.45‚Üì6.04 | 65.59‚Üì5.90 | 76.20‚Üì1.20 | 76.05‚Üì1.35 | 76.09‚Üì1.31 | 72.88‚Üì4.52 |\n| Forest Fire‚Ä†\\[ [85]\\] | 68.39‚Üì3.10 | 68.10‚Üì3.39 | 67.36‚Üì4.13 | 65.22‚Üì6.27 | 76.50‚Üì0.90 | 75.37‚Üì2.03 | 74.29‚Üì3.11 | 72.11‚Üì5.29 |\n| G-Spar \\[ [86]\\] | 71.30‚Üì0.19 | 69.29‚Üì2.20 | 65.56‚Üì5.93 | 65.49‚Üì6.00 | 77.38‚Üì0.02 | 77.36‚Üì0.04 | 76.02‚Üì1.38 | 75.89‚Üì1.51 |\n| LSim‚Ä†\\[ [87]\\] | 69.22‚Üì2.27 | 66.15‚Üì5.34 | 61.07‚Üì10.4 | 60.32‚Üì11.2 | 76.83‚Üì0.57 | 76.01‚Üì1.39 | 74.83‚Üì2.57 | 73.65‚Üì3.75 |\n| SCAN \\[ [88]\\] | 71.55‚Üë0.06 | 69.27‚Üì2.22 | 65.14‚Üì6.35 | 64.72‚Üì6.77 | 77.60‚Üë0.20 | 76.88‚Üì0.52 | 76.19‚Üì1.21 | 74.32‚Üì3.08 |\n| ER \\[ [29]\\] | 71.63‚Üë0.14 | 69.48‚Üì2.01 | 69.00‚Üì2.49 | 67.15‚Üì4.34 | OOT |\n| DSpar \\[ [13]\\] | 71.23‚Üì0.26 | 68.50‚Üì2.99 | 64.79‚Üì6.70 | 63.11‚Üì8.38 | 77.34‚Üì0.06 | 77.06‚Üì0.34 | 76.38‚Üì1.02 | 75.49‚Üì1.91 |\n| Semantic-guided | UGS‚Ä†\\[ [20]\\] | 68.77‚Üì2.72 | 66.30‚Üì5.19 | 65.72‚Üì5.77 | 63.10‚Üì8.39 | 76.80‚Üì0.60 | 75.46‚Üì1.94 | 73.28‚Üì4.12 | 73.31‚Üì4.09 |\n| GEBT \\[ [45]\\] | 69.04‚Üì2.45 | 65.29‚Üì6.20 | 65.88‚Üì5.61 | 65.62‚Üì5.87 | 76.30‚Üì1.10 | 76.17‚Üì1.23 | 74.43‚Üì2.97 | 74.12‚Üì3.28 |\n| MGSpar \\[ [71]\\] | 70.22‚Üì1.27 | 69.13‚Üì2.36 | 68.27‚Üì3.22 | 66.55‚Üì4.94 | OOM |\n| ACE-GLT‚Ä†\\[ [89]\\] | 71.88‚Üë0.39 | 70.14‚Üì1.35 | 68.08‚Üì3.41 | 67.04‚Üì4.45 | 77.59‚Üë0.19 | 76.14‚Üì1.26 | 75.43‚Üì1.97 | 73.28‚Üì4.12 |\n| WD-GLT‚Ä†\\[ [90]\\] | 71.92‚Üë0.43 | 70.21‚Üì1.28 | 68.30‚Üì3.19 | 66.57‚Üì4.92 | OOM |\n| AdaGLT \\[ [17]\\] | 71.22‚Üì0.27 | 70.18‚Üì1.31 | 69.13‚Üì2.36 | 67.02‚Üì4.47 | 77.49‚Üë0.09 | 76.76‚Üì1.64 | 76.00‚Üì2.40 | 75.44‚Üì2.96 |\n| MoG (Ours)‚Ä† | 71.93‚Üë0.44‚Üëabsent0.44{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.44}} | 70.53‚Üì0.96‚Üìabsent0.96{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{0.96}} | 69.06‚Üì2.43 | 67.31‚Üì4.18‚Üìabsent4.18{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{4.18}} | 77.78‚Üë0.38‚Üëabsent0.38{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.38}} | 77.49‚Üë0.09‚Üëabsent0.09{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.09}} | 76.46‚Üì0.94‚Üìabsent0.94{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{0.94}} | 76.12‚Üì1.28‚Üìabsent1.28{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{1.28}} |\n| Whole Dataset | 71.49¬±0.01 | 77.40¬±0.1 |\n\n#### Obs. ‚ù∂ MoG demonstrates superior performance in both transductive and inductive settings.\n\nAs shown in [Tables1]In 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"), [2]Table 2 ‚Ä£ Obs. ‚ù∏ MoG can effectively accelerate GNN inference with negligible performance loss. ‚Ä£ 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"), [8]Table 8 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\"), [9]Table 9 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\") and [10]Table 10 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\"), MoG outperforms other sparsifiers in both transductive and inductive settings. Specifically, for node classification tasks, MoG achieves a 0.09%percent0.090.09\\\\% performance improvement while sparsifying 30%percent3030\\\\% of the edges on ogbn-proteins+GraphSAGE. Even when sparsifying 50%percent5050\\\\% of the edges on ogbn-proteins+DeeperGCN, the ROC-AUC only drops by 0.81%percent0.810.81\\\\%. For graph classification tasks, MoG can remove up to 50%percent5050\\\\% of the edges on MNIST with a 0.14%percent0.140.14\\\\% performance improvement, surpassing other sparsifiers by 0.99%‚àº12.97%similar-topercent0.99percent12.970.99\\\\%\\\\sim 12.97\\\\% in accuracy.\n\n#### Obs. ‚ù∑ Different datasets and backbones exhibit varying sensitivities to sparsification.\n\nAs shown in [Tables1]In 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\") and [9]Table 9 ‚Ä£ G.1 Results for RQ1 ‚Ä£ Appendix G Addtional Experiment Results ‚Ä£ Graph Sparsification via Mixture of Graphs\"), despite ogbn-proteins being relatively insensitive to sparsification, sparsification at extremely high levels (e.g., 70%percent7070\\\\%) causes more performance loss for GraphSAGE compared to DeeperGCN, with the former experiencing a 2.28%percent2.282.28\\\\% drop and the latter only 1.07%percent1.071.07\\\\%, which demonstrates the varying sensitivity of different GNN backbones to sparsification. Similarly, we observe in [Table2]In Obs. ‚ù∏ MoG can effectively accelerate GNN inference with negligible performance loss. ‚Ä£ 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\") that the MNIST dataset shows a slight accuracy increase even with 50%percent5050\\\\% sparsification, whereas the ogbg-ppa dataset suffers a 1.86%percent1.861.86\\\\% performance decline, illustrating the different sensitivities to sparsification across graph datasets.\n\n#### Obs. ‚ù∏ MoG can effectively accelerate GNN inference with negligible performance loss.\n\n[Figure3]In Obs. ‚ù∏ MoG can effectively accelerate GNN inference with negligible performance loss. ‚Ä£ 4.2 MoG as Graph Sparsifier ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\") illustrates the actual acceleration effects of MoG compared to other baseline sparsifiers. It is evident that MoG achieves 1.6√ó1.6\\\\timeslossless acceleration on ogbn-proteins+DeeperGCN and ogbn-products+GraphSAGE, meaning the performance is equal to or better than the vanilla backbone. Notably, on ogbn-products+DeeperGCN, MoG achieves 3.3√ó3.3\\\\times acceleration with less than a 1.0%percent1.01.0\\\\% performance drop. Overall, MoG provides significantly superior inference acceleration compared to its competitors.\n\nTable 2: Graph classification performance comparison to state-of-the-art sparsification methods. The reported metrics represent the average of five runs.\n\n|     |     |     |     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n|  | Dataset | MNIST \\+ PNA (Accuracy ‚Üë‚Üë\\\\uparrow) | ogbn-ppa \\+ DeeperGCN (Accuracy ‚Üë‚Üë\\\\uparrow) |\n| Sparsity % | 10 | 30 | 50 | 70 | 10 | 30 | 50 | 70 |\n| Topology-guided | Random | 94.61‚Üì2.74 | 87.23‚Üì10.1 | 84.82‚Üì12.5 | 80.07‚Üì17.3 | 75.44‚Üì1.65 | 73.81‚Üì4.09 | 71.97‚Üì5.12 | 69.62‚Üì7.47 |\n| Rank Degree‚Ä†\\[ [83]\\] | 96.42‚Üì0.93 | 94.23‚Üì3.12 | 92.36‚Üì4.99 | 89.20‚Üì8.15 | 75.81‚Üì1.28 | 74.99‚Üì2.10 | 74.12‚Üì2.97 | 70.68‚Üì6.41 |\n| Local Degree‚Ä†\\[ [84]\\] | 95.95‚Üì1.40 | 93.37‚Üì3.98 | 90.11‚Üì7.24 | 86.24‚Üì11.1 | 76.43‚Üì0.66 | 75.87‚Üì1.22 | 72.11‚Üì4.98 | 69.93‚Üì7.16 |\n| Forest Fire‚Ä†\\[ [85]\\] | 96.75‚Üì0.60 | 95.42‚Üì1.93 | 95.03‚Üì2.32 | 93.10‚Üì4.25 | 76.38‚Üì0.71 | 75.33‚Üì1.76 | 73.18‚Üì3.91 | 71.49‚Üì5.60 |\n| G-Spar \\[ [86]\\] | 97.10‚Üì0.25 | 96.59‚Üì0.76 | 94.36‚Üì2.99 | 92.48‚Üì4.87 | 77.68‚Üë0.59 | 73.90‚Üì3.19 | 69.52‚Üì7.57 | 68.10‚Üì8.99 |\n| LSim‚Ä†\\[ [87]\\] | 95.79‚Üì1.56 | 92.14‚Üì5.21 | 92.29‚Üì5.06 | 91.95‚Üì5.40 | 76.04‚Üì1.05 | 74.40‚Üì2.69 | 72.78‚Üì4.31 | 68.21‚Üì8.88 |\n| SCAN \\[ [88]\\] | 95.81‚Üì1.54 | 93.48‚Üì3.87 | 90.18‚Üì7.17 | 86.48‚Üì10.9 | 75.23‚Üì1.86 | 75.18‚Üì1.91 | 72.48‚Üì4.61 | 71.11‚Üì5.98 |\n| ER \\[ [29]\\] | 94.77‚Üì2.58 | 93.91‚Üì3.44 | 93.45‚Üì3.90 | 91.07‚Üì6.28 | 77.94‚Üë0.85 | 75.15‚Üì1.94 | 73.23‚Üì3.86 | 72.74‚Üì4.35 |\n| DSpar \\[ [13]\\] | 94.97‚Üì2.38 | 93.80‚Üì3.55 | 92.23‚Üì5.12 | 90.48‚Üì6.87 | 76.33‚Üì0.76 | 73.37‚Üì3.72 | 72.98‚Üì4.11 | 70.77‚Üì6.32 |\n| Semantic | ICPG \\[ [91]\\] | 97.69‚Üë0.34 | 97.39‚Üë0.04 | 96.80‚Üì0.55 | 93.77‚Üì3.58 | 77.36‚Üë0.27 | 75.24‚Üì1.85 | 73.18‚Üì3.91 | 71.09‚Üì6.00 |\n| AdaGLT \\[ [17]\\] | 97.31‚Üì0.04 | 96.58‚Üì0.77 | 94.14‚Üì3.21 | 92.08‚Üì5.27 | 76.22‚Üì0.87 | 73.54‚Üì3.55 | 70.10‚Üì6.99 | 69.28‚Üì7.81 |\n|  | MoG (Ours)‚Ä† | 97.80‚Üë0.45‚Üëabsent0.45{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.45}} | 97.74‚Üë0.39‚Üëabsent0.39{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.39}} | 97.79‚Üë0.44‚Üëabsent0.44{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.44}} | 95.30‚Üì2.05‚Üìabsent2.05{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{2.05}} | 78.43‚Üë1.34‚Üëabsent1.34{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{1.34}} | 77.90‚Üë0.81‚Üëabsent0.81{}\\_{\\\\color\\[rgb\\]{1,0.23,0.13}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{1,0.23,0.13}\\\\pgfsys@color@cmyk@stroke{0}{0.77}{0.87}{0}\\\\pgfsys@color@cmyk@fill{0}{0.77}{0.87}{0}\\\\uparrow\\\\textbf{0.81}} | 75.23‚Üì1.86‚Üìabsent1.86{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{1.86}} | 73.09‚Üì4.00‚Üìabsent4.00{}\\_{\\\\color\\[rgb\\]{0.15,1,0.67}\\\\definecolor\\[named\\]{pgfstrokecolor}{rgb}{0.15,1,0.67}\\\\pgfsys@color@cmyk@stroke{0.85}{0}{0.33}{0}\\\\pgfsys@color@cmyk@fill{0.85}{0}{0.33}{0}\\\\downarrow\\\\textbf{4.00}} |\n| Whole Dataset | 97.35¬±0.07 | 77.09¬±0.04 |\n\n![Refer to caption]Figure 3: The trade-off between inference speedup and model performance for MoG and other sparsifiers. The first and second rows represent results on GraphSAGE and DeeperGCN, respectively. The gray pentagon represents the performance of the original GNN without sparsification.\n\n### 4.3 MoG as Performance Booster\n\nIn the context of RQ3, MoG is developed to augment GNN performance by selectively removing a limited amount of noisy and detrimental edges, while simultaneously preventing excessive sparsification that could degrade GNN performance. Consequently, we uniformly set the sparsity combination to {90%,85%,80%}percent90percent85percent80\\\\{90\\\\%,85\\\\%,80\\\\%\\\\}. We combine MoG with state-of-the-art GNNs on both node-level and graph-level tasks. The former include RevGNN \\[ [92]\\] and GAT+BoT \\[ [93]\\], which rank fourth and seventh, respectively, on the ogbn-proteins benchmark, and the latter include PAS \\[ [94]\\] and DeeperGCN \\[ [82]\\], ranking fourth and sixth on the ogbn-ppa benchmark. We observe from [Table3]In Obs. ‚ùπ MoG can assist the ‚Äútop-student‚Äù backbones to learn better. ‚Ä£ 4.3 MoG as Performance Booster ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"):\n\n#### Obs. ‚ùπ MoG can assist the ‚Äútop-student‚Äù backbones to learn better.\n\nDespite RevGNN and PAS being high-ranking backbones for ogbn-proteins and ogbg-ppa, MoG still achieves non-marginal performance improvements through moderate graph sparsification: 1.02%‚Üë‚Üëpercent1.02absent1.02\\\\%\\\\uparrow on RevGNN+ogbn-proteins and 1.74%‚Üë‚Üëpercent1.74absent1.74\\\\%\\\\uparrow on DeeperGCN+ogbg-ppa. This demonstrates that MoG can effectively serve as a plugin to boost GNN performance by setting a relatively low sparsification rate.\n\nTable 3: Node classification results on ogbn-proteins with RevGNN and GAT+BoT and graph classification results on ogbg-ppa with PAS and DeeperGCN. Mean and standard deviation values from five random runs are presented.\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n|  | ogbn-proteins (ROC-AUC‚Üë‚Üë\\\\uparrow) | ogbg-ppa (Accuracy‚Üë‚Üë\\\\uparrow) |\n| Model | RevGNN | GAT+BoT | PAS | DeeperGCN |\n| w/o MoG | 88.14¬±plus-or-minus\\\\pm 0.24 | 88.09 ¬±plus-or-minus\\\\pm 0.16 | 78.28 ¬±plus-or-minus\\\\pm 0.24 | 77.09 ¬±plus-or-minus\\\\pm 0.04 |\n| w/ MoG | 89.04¬±plus-or-minus\\\\pm 0.72 | 88.72¬±plus-or-minus\\\\pm 0.50 | 78.66¬±plus-or-minus\\\\pm 0.47 | 78.43¬±plus-or-minus\\\\pm 0.19 |\n| (Sparsity: 9.2%) | (Sparsity: 12.7%) | (Sparsity: 6.6%) | (Sparsity: 10.8%) |\n\n### 4.4 Sensitivity Analysis\n\n#### Obs. ‚ù∫ Sparse expert selection helps customized sparsification.\n\nWe conduct a parameter sensitivity analysis on the number of sparsifier experts kùëòk selected for each node, as shown in [Section4.4]Obs. ‚ùª Sparsifier load balancing is essential. ‚Ä£ 4.4 Sensitivity Analysis ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"). It can be observed that the optimal kùëòk varies with the level of graph sparsity. At lower sparsity (10%), k=1ùëò1k=1 yields relatively good performance. However, as sparsity increases to 50%, model performance peaks at k=4ùëò4k=4, suggesting that in high sparsity environments, more expert opinions contribute to better sparsification. Notably, when kùëòk increases to 6, MoG‚Äôs performance declines, indicating that a more selective approach in sparse expert selection aids in better model generalization. For a balanced consideration of performance and computational efficiency, we set k=2ùëò2k=2 in all experiments.\n\n#### Obs. ‚ùª Sparsifier load balancing is essential.\n\nWe conduct a sensitivity analysis of the expert importance loss coefficient ŒªùúÜ\\\\lambda. A larger ŒªùúÜ\\\\lambda indicates greater variation in the selected experts. As shown in [Section4.4]Obs. ‚ùª Sparsifier load balancing is essential. ‚Ä£ 4.4 Sensitivity Analysis ‚Ä£ 4 Experiments ‚Ä£ Graph Sparsification via Mixture of Graphs\"), Œª=0ùúÜ0\\\\lambda=0 consistently resulted in the lowest performance, as failing to explicitly enforce variation among experts leads to the model converging to a trivial solution with the same set of experts \\[ [65], [51]\\]. Conversely, Œª=1‚Äãe‚àí1ùúÜ1ùëí1\\\\lambda=1e-1 performed slightly better than Œª=1‚Äãe‚àí2ùúÜ1ùëí2\\\\lambda=1e-2 at higher sparsity levels, supporting the findings in Obs. 5 that higher sparsity requires more diverse sparsifier experts.\n\n![Refer to caption]Figure 4: Sensitivity study on parameter kùëòk, i.e., how many experts are chosen per node. The results are reported based on ogbn-arxiv+GraphSAGE.\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n| ŒªùúÜ\\\\lambda | 0 | 1e-2 | 1e-1 |\n| 10%percent1010\\\\% | 81.19¬±0.08subscript81.19plus-or-minus0.0881.19\\_{\\\\pm 0.08} | 83.32¬±0.19subscript83.32plus-or-minus0.19\\\\mathbf{83.32}\\_{\\\\pm 0.19} | 83.04¬±0.23subscript83.04plus-or-minus0.2383.04\\_{\\\\pm 0.23} |\n| 30%percent3030\\\\% | 79.77¬±0.08subscript79.77plus-or-minus0.0879.77\\_{\\\\pm 0.08} | 82.14¬±0.23subscript82.14plus-or-minus0.23\\\\mathbf{82.14}\\_{\\\\pm 0.23} | 82.08¬±0.25subscript82.08plus-or-minus0.2582.08\\_{\\\\pm 0.25} |\n| 50%percent5050\\\\% | 79.40¬±0.06subscript79.40plus-or-minus0.0679.40\\_{\\\\pm 0.06} | 81.79¬±0.21subscript81.79plus-or-minus0.2181.79\\_{\\\\pm 0.21} | 82.04¬±0.20subscript82.04plus-or-minus0.20\\\\mathbf{82.04}\\_{\\\\pm 0.20} |\n| 70%percent7070\\\\% | 78.22¬±0.13subscript78.22plus-or-minus0.1378.22\\_{\\\\pm 0.13} | 80.90¬±0.24subscript80.90plus-or-minus0.24{80.90}\\_{\\\\pm 0.24} | 80.97¬±0.28subscript80.97plus-or-minus0.28\\\\mathbf{80.97}\\_{\\\\pm 0.28} |\n\nTable 4: Sensitivity study on scaling factor ŒªùúÜ\\\\lambda. The results are reported on ogbn-proteins+DeeperGCN.",
      "citations": [
        {
          "start_pos": 417,
          "end_pos": 421,
          "text": "[80]",
          "paper_id": "bib.bib80",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 578,
          "end_pos": 582,
          "text": "[80]",
          "paper_id": "bib.bib80",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 657,
          "end_pos": 661,
          "text": "[81]",
          "paper_id": "bib.bib81",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 688,
          "end_pos": 692,
          "text": "[35]",
          "paper_id": "bib.bib35",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 709,
          "end_pos": 713,
          "text": "[82]",
          "paper_id": "bib.bib82",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 728,
          "end_pos": 732,
          "text": "[40]",
          "paper_id": "bib.bib40",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4281,
          "end_pos": 4285,
          "text": "[83]",
          "paper_id": "bib.bib83",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4412,
          "end_pos": 4416,
          "text": "[84]",
          "paper_id": "bib.bib84",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4542,
          "end_pos": 4546,
          "text": "[85]",
          "paper_id": "bib.bib85",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4667,
          "end_pos": 4671,
          "text": "[86]",
          "paper_id": "bib.bib86",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4790,
          "end_pos": 4794,
          "text": "[87]",
          "paper_id": "bib.bib87",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 4913,
          "end_pos": 4917,
          "text": "[88]",
          "paper_id": "bib.bib88",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 5034,
          "end_pos": 5038,
          "text": "[29]",
          "paper_id": "bib.bib29",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 5112,
          "end_pos": 5116,
          "text": "[13]",
          "paper_id": "bib.bib13",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 5252,
          "end_pos": 5256,
          "text": "[20]",
          "paper_id": "bib.bib20",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 5375,
          "end_pos": 5379,
          "text": "[45]",
          "paper_id": "bib.bib45",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 5500,
          "end_pos": 5504,
          "text": "[71]",
          "paper_id": "bib.bib71",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 5580,
          "end_pos": 5584,
          "text": "[89]",
          "paper_id": "bib.bib89",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 5705,
          "end_pos": 5709,
          "text": "[90]",
          "paper_id": "bib.bib90",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 5784,
          "end_pos": 5788,
          "text": "[17]",
          "paper_id": "bib.bib17",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 11571,
          "end_pos": 11575,
          "text": "[83]",
          "paper_id": "bib.bib83",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 11702,
          "end_pos": 11706,
          "text": "[84]",
          "paper_id": "bib.bib84",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 11832,
          "end_pos": 11836,
          "text": "[85]",
          "paper_id": "bib.bib85",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 11957,
          "end_pos": 11961,
          "text": "[86]",
          "paper_id": "bib.bib86",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12080,
          "end_pos": 12084,
          "text": "[87]",
          "paper_id": "bib.bib87",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12203,
          "end_pos": 12207,
          "text": "[88]",
          "paper_id": "bib.bib88",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12324,
          "end_pos": 12328,
          "text": "[29]",
          "paper_id": "bib.bib29",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12448,
          "end_pos": 12452,
          "text": "[13]",
          "paper_id": "bib.bib13",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12582,
          "end_pos": 12586,
          "text": "[91]",
          "paper_id": "bib.bib91",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12707,
          "end_pos": 12711,
          "text": "[17]",
          "paper_id": "bib.bib17",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 15470,
          "end_pos": 15474,
          "text": "[92]",
          "paper_id": "bib.bib92",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 15492,
          "end_pos": 15496,
          "text": "[93]",
          "paper_id": "bib.bib93",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 15607,
          "end_pos": 15611,
          "text": "[94]",
          "paper_id": "bib.bib94",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 15631,
          "end_pos": 15635,
          "text": "[82]",
          "paper_id": "bib.bib82",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 18729,
          "end_pos": 18733,
          "text": "[65]",
          "paper_id": "bib.bib65",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 18735,
          "end_pos": 18739,
          "text": "[51]",
          "paper_id": "bib.bib51",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        }
      ]
    },
    "5 Conclusion & Limitation": {
      "content": "In this paper, we introduce a new graph sparsification paradigm termed MoG, which leverages multiple graph sparsifiers, each equipped with distinct sparsity levels and pruning criteria. MoG selects the most suitable sparsifier expert based on each node‚Äôs local context, providing a customized graph sparsification solution, followed by an effective mixture mechanism on the Grassmann manifold to ensemble the sparse graphs produced by various experts. Extensive experiments on four large-scale OGB datasets and two superpixel datasets have rigorously demonstrated the effectiveness of MoG. A potential limitation of MoG is its current reliance on 1-hop decomposition to represent each node‚Äôs local context. The performance of extending this approach to kùëòk-hop contexts remains unexplored, suggesting a possible direction for future research.",
      "citations": []
    }
  },
  "references": {
    "data": {},
    "key_map": {}
  }
}