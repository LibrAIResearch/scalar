{
  "title": "Controlling Language and Diffusion Models by Transporting Activations",
  "abstract": "The increasing capabilities of large generative models and their ever more\nwidespread deployment have raised concerns about their reliability, safety, and\npotential misuse. To address these issues, recent works have proposed to\ncontrol model generation by steering model activations in order to effectively\ninduce or prevent the emergence of concepts or behaviors in the generated\noutput. In this paper we introduce Activation Transport (AcT), a general\nframework to steer activations guided by optimal transport theory that\ngeneralizes many previous activation-steering works. AcT is modality-agnostic\nand provides fine-grained control over the model behavior with negligible\ncomputational overhead, while minimally impacting model abilities. We\nexperimentally show the effectiveness and versatility of our approach by\naddressing key challenges in large language models (LLMs) and text-to-image\ndiffusion models (T2Is). For LLMs, we show that AcT can effectively mitigate\ntoxicity, induce arbitrary concepts, and increase their truthfulness. In T2Is,\nwe show how AcT enables fine-grained style control and concept negation.",
  "paper_id": "http://arxiv.org/abs/2410.23054v2",
  "markdown_content": "# Controlling Language and Diffusion Models by Transporting Activations\n\nPau Rodr√≠guez    Arno Blaas    Michal Klein    Luca Zappella    Nicholas Apostoloff\n\nMarco Cuturi    Xavier Suau\n\n{pau.rodriguez,ablaas,michal\\_klein,lzappella,napostoloff,\n\nm\\_cuturi,xsuaucuadros}@apple.com\n\nApple\n\n###### Abstract\n\nThe increasing capabilities of large generative models and their ever more widespread deployment have raised concerns about their reliability, safety, and potential misuse. To address these issues, recent works have proposed to control model generation by steering model activations in order to effectively induce or prevent the emergence of concepts or behaviors in the generated output.\nIn this paper we introduce Activation Transport (AcT), a general framework to steer activations guided by optimal transport theory that generalizes many previous activation-steering works.\nAcT is modality-agnostic and provides fine-grained control over the model behavior with negligible computational overhead, while minimally impacting model abilities.\nWe experimentally show the effectiveness and versatility of our approach by addressing key challenges in large language models (LLMs) and text-to-image diffusion models (T2Is). For LLMs, we show that AcT can effectively mitigate toxicity, induce arbitrary concepts, and increase their truthfulness. In T2Is, we show how AcT enables fine-grained style control and concept negation.\n\n00Once upon a time, there was an old man who lived in the forest. He had no family and he spent his days alone collecting mushrooms for food to survive on.0.50.50.5Once upon a time, there was an amazing woman named Sarah. She had the most beautiful smile and kindest heart you could ever imagine! Sarah loved to play soccer with her friends on Saturday mornings at 9am sharp every week.111Once upon a time, the only way to watch football was on TV. The game of soccer had been played in England since 1863 and by the early twentieth century it became one of Britain‚Äôs most popular sports.footballstrength(Œª)ùúÜ(\\\\lambda)![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/fig1/fig1_images.png)Œª=0ùúÜ0\\\\lambda=0Œª=0.5ùúÜ0.5\\\\lambda=0.5Œª=0.5ùúÜ0.5\\\\lambda=0.5Œª=0.5ùúÜ0.5\\\\lambda=0.5Œª=0.5ùúÜ0.5\\\\lambda=0.5Œª=0.5ùúÜ0.5\\\\lambda=0.5Œª=0.5ùúÜ0.5\\\\lambda=0.5Œª=1ùúÜ1\\\\lambda=1Œª=1ùúÜ1\\\\lambda=1Œª=1ùúÜ1\\\\lambda=1Œª=1ùúÜ1\\\\lambda=1Œª=1ùúÜ1\\\\lambda=1Œª=1ùúÜ1\\\\lambda=1art nouveauwatercolorcyberpunksketchanimeimpressionismFigure 1: Linear-AcT unlocks interpretable controllability for both LLMs and Diffusion, offering explicit control over the strength of conditioning, via a parameter ŒªùúÜ\\\\lambda between 0 (no transport) and 1 (full transport).\n\n## 1 Introduction\n\nPre-trained Generative Models (GMs) typically undergo an additional fine-tuning phase to better align them to a desired behavior.\nFor example, Large Language Models (LLMs) are aligned via instruction fine-tuning ( [Wei et al.,](https://ar5iv.org/html/2410.23054#bib.bib49 \"\")) or RLHF (Ouyang et al., [2022](https://ar5iv.org/html/2410.23054#bib.bib30 \"\")). Although less extensively, these strategies have also been applied to Text-to-Image (T2I) models (Wallace et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib48 \"\"); Yang et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib52 \"\")). However, as the number of parameters grows, alignment approaches can become challenging from a computational and memory perspective (Houlsby et al., [2019](https://ar5iv.org/html/2410.23054#bib.bib15 \"\")). In addition, these strategies modify the model‚Äôs internal mechanisms, realigning its parameters by leveraging new data, which can have the undesired side effect of impacting the utility of the model on other metrics (Kotha et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib20 \"\"); Luo et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib26 \"\")), such as 0-shot evaluation or question-answering.\n\nThe increasing cost of fine-tuning has motivated research in inference-time interventions on pre-trained models (Suau et al., [2022](https://ar5iv.org/html/2410.23054#bib.bib43 \"\"); Rimsky et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib36 \"\"); Zou et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib57 \"\"); Li et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib22 \"\")) in order to control specific behaviors. Since these modifications are typically sparse and/or low-dimensional, they can be estimated using a few hundreds of sentences (Suau et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib44 \"\"); Turner et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib46 \"\")).\nFor example, Rimsky et al. ( [2023](https://ar5iv.org/html/2410.23054#bib.bib36 \"\")); Li et al. ( [2024](https://ar5iv.org/html/2410.23054#bib.bib22 \"\")) shift activations by a constant vector estimated with sets of desired and undesired data (e.g., non-toxic and toxic); or Suau et al. ( [2024](https://ar5iv.org/html/2410.23054#bib.bib44 \"\")) mitigate toxicity by dampening the activations of expert neurons.\nWhile effective, existing methods do not preserve the activation distribution observed by the model during training. Considering how brittle GMs can be (Huu-Tien et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib16 \"\"); Sclar et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib41 \"\")), a constant shift can move activations out-of-distribution (OOD), which can lead to unwanted behaviors, and hinder both the conditioning and the general model performance.\n\nWe propose Activation Transport (AcT), a framework to steer activations according to the Optimal Transport (OT) map between two different (source and target) activation distributions. For example, from toxic to non-toxic language, or between two different styles in T2I generation. AcT applies a set of univariate maps on activations while preserving their target distributions, achieving better controllability and stronger robustness to the choice of model and layers intervened upon.\nOur main contributions are:\n\n- ‚Ä¢\n\n\nA unifying interpretation of existing activation steering methods under the umbrella of OT, showing that most existing methods are equivalent to a mean transport map ( [Section3.3](https://ar5iv.org/html/2410.23054#S3.SS3 \"3.3 Generalization of Prior Inference-Time Interventions Work ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")).\n\n- ‚Ä¢\n\n\nLinear-AcT, an inference-time intervention111Code will be made publicly available upon acceptance. based on OT that preserves internal activation distributions ( [Section3.1](https://ar5iv.org/html/2410.23054#S3.SS1 \"3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). The degree of intervention can be controlled by a strength parameter ŒªùúÜ\\\\lambda between 0 (no transport) and 1 (full transport), as shown in [Figure1](https://ar5iv.org/html/2410.23054#S0.F1 \"In Controlling Language and Diffusion Models by Transporting Activations\"). We also introduce the transport support to prevent inducing OOD activations.\n\n- ‚Ä¢\n\n\nWe show that, without any hyperparameter tuning, Linear-AcT matches or outperforms existing inference-time interventions when aiming to control LLMs for the tasks of toxicity mitigation, concept induction, and increasing truthfulness.\n\n- ‚Ä¢\n\n\nWe find that off-the-shelf Linear-AcT is also effective at controlling T2I diffusion models for the tasks of fine-grained style control and concept negation. Additionally, we adapt (Li et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib22 \"\")) (ITI) for T2I. To the best of our knowledge, this is the first work to apply an inference-time intervention method that is simultaneously effective on both LLMs and Diffusion Models.\n\n\n## 2 Related Work\n\nThe growing capabilities and prevalence of GMs (Brown et al., [2020](https://ar5iv.org/html/2410.23054#bib.bib3 \"\"); Rombach et al., [2022](https://ar5iv.org/html/2410.23054#bib.bib37 \"\")), along with the rising costs of fine-tuning and alignment, have driven research into controllability of GMs.\n\n##### Controlling LLMs\n\nActAdd(Turner et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib46 \"\")) uses a contrast prompt (one positive and one negative example) to construct a shift vector.\nCAA (Rimsky et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib36 \"\")) builds on ActAdd by calculating the difference vectors for steering based on a dataset of contrast pairs (rather than a single pair), adding the mean difference during inference time for steering.\nITI-c(Li et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib22 \"\")) estimates the shift vector orthogonal to the hyperplane learnt by a binary linear classifier on two sets of sentences, showing an increase of truthfulness on the TruthfulQA benchmark (Lin et al., [2021](https://ar5iv.org/html/2410.23054#bib.bib25 \"\")). The same work proposes MassMean (ITI-m), with an additive vector computed as the difference in means for both sets of sentences.\nWith a different approach, AurA by Suau et al. ( [2024](https://ar5iv.org/html/2410.23054#bib.bib44 \"\")) dampens activations proportionally to each neuron‚Äôs ability to classify toxic and non-toxic sentences, effectively mitigating toxicity.\nRepE by Zou et al. ( [2023](https://ar5iv.org/html/2410.23054#bib.bib57 \"\")) proposes to compute steering vectors at inference time based on prompt pairs.\nWu et al. ( [2024](https://ar5iv.org/html/2410.23054#bib.bib51 \"\")) considers activations relationships using a low-rank projection to exchange information with a counterfactual representation.\nOrthogonal to the works of activation steering, Dekoninck et al. ( [2023](https://ar5iv.org/html/2410.23054#bib.bib7 \"\")) have proposed a language model arithmetic that can combine the outputs of multiple models in a principled way to simulatenously control multiple concepts, however requiring several (costly) inference passes on the LLM.\n\n##### Controlling T2I\n\nFew works tackle aligment of T2I models. Wallace et al. ( [2024](https://ar5iv.org/html/2410.23054#bib.bib48 \"\")) align diffusion models with reinforcement learning (RL) on human comparison data. Yang et al. ( [2024](https://ar5iv.org/html/2410.23054#bib.bib52 \"\")) remove the need of a reward model to reduce computational overhead of RL. Other works focus on fine-tuning to maximize a reward function (Clark et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib6 \"\")) or consistency to reference images (Lee et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib21 \"\")). The literature on T2I diffusion model controllability is more extensive and it commonly consists in training structure adapters (Mou et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib28 \"\"); Jiang et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib19 \"\")), style adapters (Stracke et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib42 \"\"); Ye et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib53 \"\"); Zhao et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib55 \"\")), or low-rank adapters (LoRAs) (Ruiz et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib38 \"\"); YEH et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib54 \"\"); Gandikota et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib11 \"\"); Stracke et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib42 \"\")). Closer to our work are inference-time interventions, which do not require backpropation through the model to train the conditioning mechanisms. Diffusion steering methods are a family of inference-time interventions, which directly modify the diffusion algorithm at test time for fine-grained control with additional prompts (Nair et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib29 \"\"); Brack et al., [2022](https://ar5iv.org/html/2410.23054#bib.bib2 \"\")). To the best of our knowledge, our work is the first to explore inference-time interventions that are not specific to diffusion models and transfer across modalities.\n\n## 3 Transporting Neuron Activations\n\nWe represent the activations of a GM given an input sentence ùíô‚ààùíÆùíôùíÆ{\\\\bm{x}}\\\\in\\\\mathcal{S} as a tensor ‚ÑùM√óL√óKsuperscript‚ÑùùëÄùêøùêæ\\\\mathbb{R}^{M\\\\times L\\\\times K}, where MùëÄM is the number of activations per layer (assumed constant w.l.o.g. for simplicity), LùêøL the number of layers, and KùêæK the number of tokens decoded. We reduce each of the KùêæK values to only one using an arbitrary pooling operator œïitalic-œï\\\\phi. From now on we write ùêô:ùíÆ‚Üí‚ÑùM√óL:ùêô‚ÜíùíÆsuperscript‚ÑùùëÄùêø\\\\mathbf{Z}:\\\\mathcal{S}\\\\rightarrow\\\\mathbb{R}^{M\\\\times L} for the map that turns a sentence into a matrix of activations statistics, noting that ùêôùêô\\\\mathbf{Z} incorporates œïitalic-œï\\\\phi-pooling.\n\nWe consider two probability distributions on sentences pùëùp and qùëûq. We will view these sentences exclusively through the lens of their aggregated activation matrices, i.e., we will examine probability distributions Œº:=ùêô‚Äã‚ôØ‚Äãpassignùúáùêô‚ôØùëù\\\\mu:=\\\\mathbf{Z}\\\\sharp p and ŒΩ:=ùêô‚Äã‚ôØ‚Äãqassignùúàùêô‚ôØùëû\\\\nu:=\\\\mathbf{Z}\\\\sharp q, where we have used the pushforward operator ‚ôØ‚ôØ\\\\sharp.\nIn practice, we have access to samples ùíô1,‚Ä¶,ùíôn‚àºpsimilar-tosuperscriptùíô1‚Ä¶superscriptùíôùëõùëù{\\\\bm{x}}^{1},\\\\dots,{\\\\bm{x}}^{n}\\\\sim p and ùíö1,‚Ä¶,ùíön‚àºqsimilar-tosuperscriptùíö1‚Ä¶superscriptùíöùëõùëû{\\\\bm{y}}^{1},\\\\dots,{\\\\bm{y}}^{n}\\\\sim q.\nIn the case of toxicity mitigation, pùëùp covers toxic sentences and qùëûqnon-toxic ones.\nInput sentences (ùíôi)superscriptùíôùëñ({\\\\bm{x}}^{i}) and (ùíöi)superscriptùíöùëñ({\\\\bm{y}}^{i}) go through the model to yield activation matrices ùíÇi:=ùêô‚Äã(ùíôi)assignsuperscriptùíÇùëñùêôsuperscriptùíôùëñ{\\\\bm{a}}^{i}:=\\\\mathbf{Z}({\\\\bm{x}}^{i}) and ùíÉi=ùêô‚Äã(ùíöi)superscriptùíÉùëñùêôsuperscriptùíöùëñ{\\\\bm{b}}^{i}=\\\\mathbf{Z}({\\\\bm{y}}^{i}), each seen as i.i.d. samples from Œºùúá\\\\mu and ŒΩùúà\\\\nu respectively. This results in n+nùëõùëõn+n observations of M√óLùëÄùêøM\\\\times L matrices. In that context, our goal is to learn a transport map T:‚ÑùM√óL‚Üí‚ÑùM√óL:ùëá‚Üísuperscript‚ÑùùëÄùêøsuperscript‚ÑùùëÄùêøT:\\\\mathbb{R}^{M\\\\times L}\\\\rightarrow\\\\mathbb{R}^{M\\\\times L} from (ùíÇi,ùíÉi)superscriptùíÇùëñsuperscriptùíÉùëñ({\\\\bm{a}}^{i},{\\\\bm{b}}^{i}) that approximately pushes Œºùúá\\\\mu to ŒΩùúà\\\\nu, i.e.,T‚Äã‚ôØ‚ÄãŒº‚âàŒΩùëá‚ôØùúáùúàT\\\\sharp\\\\mu\\\\approx\\\\nu.\n\n### 3.1 Low Budget Estimators for Transport Maps\n\nSince a modern GM can have millions of activations, we seek maps TùëáT that are cheap to evaluate and store, with very few parameters. Following Suau et al. ( [2024](https://ar5iv.org/html/2410.23054#bib.bib44 \"\")), we focus on maps that factorize independently along each dimension (each activation). TùëáT is therefore described as a collection of M‚ÄãLùëÄùêøML independent univariate maps, where each map indexed by m,lùëöùëôm,l should ideally map the marginal distribution of Œºùúá\\\\mu in that coordinate to that of ŒΩùúà\\\\nu. Recall that:\n\n###### Proposition 3.1 (Univariate Transport Maps)\n\n(Santambrogio, [2015](https://ar5iv.org/html/2410.23054#bib.bib39 \"\"), Chap.2)\nLet œÅ,œÑ‚ààùí´‚Äã(‚Ñù)ùúåùúèùí´‚Ñù\\\\rho,\\\\tau\\\\in\\\\mathcal{P}(\\\\mathbb{R}) be two univariate distributions. For any submodular cost c:‚Ñù√ó‚Ñù‚Üí‚Ñù:ùëê‚Üí‚Ñù‚Ñù‚Ñùc:\\\\mathbb{R}\\\\times\\\\mathbb{R}\\\\rightarrow\\\\mathbb{R} (i.e., such that ‚àÇc/‚àÇx‚Äã‚àÇy<0ùëêùë•ùë¶0\\\\partial c/\\\\partial x\\\\partial y<0), the optimal transport map TùëáT that can transport œÅùúå\\\\rho to œÑùúè\\\\tau is T‚ãÜ=QœÑ‚àòFœÅsuperscriptùëá‚ãÜsubscriptùëÑùúèsubscriptùêπùúåT^{\\\\star}=Q\\_{\\\\tau}\\\\circ F\\_{\\\\rho}, where QœÑsubscriptùëÑùúèQ\\_{\\\\tau} and FœÅsubscriptùêπùúåF\\_{\\\\rho} are respectively the quantile function of œÑùúè\\\\tau and the cumulant density function (CDF) of œÅùúå\\\\rho.\n\nEstimating and storing all M‚ÄãLùëÄùêøML transport maps would therefore require dealing with as many quantile and CDF functions. Unfortunately, parameterizing each of these could quickly become intractable, which is why we scale down ambitions to simplify further our working hypothesis to only consider affine transport maps.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x1.png)Figure 2: Transport maps using different methods. For distributions with œÉa=œÉbsubscriptùúéùëésubscriptùúéùëè\\\\sigma\\_{a}=\\\\sigma\\_{b} (left) all methods (except ActAdd) are equivalent. When œÉa‚â†œÉbsubscriptùúéùëésubscriptùúéùëè\\\\sigma\\_{a}\\\\neq\\\\sigma\\_{b} (right), vector-based methods (e.g.,ActAdd, ITI-c, Mean-AcT) diverge from the map defined by the samples. ActAdd shows a bias since it only uses one sample pair. The linear estimator is robust to differences in œÉùúé\\\\sigma.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/std.png)Figure 3: Actual œÉa,œÉbsubscriptùúéùëésubscriptùúéùëè\\\\sigma\\_{a},\\\\sigma\\_{b} for toxic and non-toxic sentences on Gemma2-2B, showing that œÉa‚â†œÉbsubscriptùúéùëésubscriptùúéùëè\\\\sigma\\_{a}\\\\neq\\\\sigma\\_{b} in real scenarios.\n\nEach of the M‚ÄãLùëÄùêøML activations we consider results in two families of reals: source (am‚Äã‚Ñì1,‚Ä¶,am‚Äã‚Ñìn)subscriptsuperscriptùëé1ùëö‚Ñì‚Ä¶subscriptsuperscriptùëéùëõùëö‚Ñì(a^{1}\\_{m\\\\ell},\\\\dots,a^{n}\\_{m\\\\ell}) and targets (bm‚Äã‚Ñì1,‚Ä¶,bm‚Äã‚Ñìn)subscriptsuperscriptùëè1ùëö‚Ñì‚Ä¶subscriptsuperscriptùëèùëõùëö‚Ñì(b^{1}\\_{m\\\\ell},\\\\dots,b^{n}\\_{m\\\\ell}). Simpifying notations, we drop mentions to mùëöm and ‚Ñì‚Ñì\\\\ell to focus on values A:=(a1,‚Ä¶,an)assignùê¥superscriptùëé1‚Ä¶superscriptùëéùëõA:=(a^{1},\\\\dots,a^{n}) and B:=(b1,‚Ä¶,bn)assignùêµsuperscriptùëè1‚Ä¶superscriptùëèùëõB:=(b^{1},\\\\dots,b^{n}) each in ‚Ñùnsuperscript‚Ñùùëõ\\\\mathbb{R}^{n}. We propose to consider the simple proxy task of finding affine maps that push Aùê¥A to BùêµB efficiently. The best such affine map is denoted Linear-AcT, and defined in [Definition3.1](https://ar5iv.org/html/2410.23054#S3.Thmdefinition1 \"Definition 3.1 (Linear-AcT) ‚Ä£ 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). Despite its simplicity, we show in [Section3.3](https://ar5iv.org/html/2410.23054#S3.SS3 \"3.3 Generalization of Prior Inference-Time Interventions Work ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") that many state-of-the-art methods boil down to even simpler approximations and heuristics.\n\n###### Definition 3.1 (Linear-AcT)\n\nGiven samples A=(a1,‚Ä¶,an)ùê¥superscriptùëé1‚Ä¶superscriptùëéùëõA=(a^{1},\\\\dots,a^{n}) and B=(b1,‚Ä¶,bn)ùêµsuperscriptùëè1‚Ä¶superscriptùëèùëõB=(b^{1},\\\\dots,b^{n}) and a cost function c:‚Ñù√ó‚Ñù‚Üí‚Ñù:ùëê‚Üí‚Ñù‚Ñù‚Ñùc:\\\\mathbb{R}\\\\times\\\\mathbb{R}\\\\rightarrow\\\\mathbb{R}, the\nLinear-AcT map trained with these samples is defined as\n\n|     |     |     |\n| --- | --- | --- |\n|  | T‚Äã(a;A,B):=œâ‚Äãa+Œ≤,assignùëáùëéùê¥ùêµùúîùëéùõΩT(a;A,B):=\\\\omega a+\\\\beta, |  |\n\nwhere œâ,Œ≤ùúîùõΩ\\\\omega,\\\\beta are the minimizers of minœâ,Œ≤‚Äã‚àëic‚Äã(b(i),œâ‚Äãa(i)+Œ≤)subscriptùúîùõΩsubscriptùëñùëêsuperscriptùëèùëñùúîsuperscriptùëéùëñùõΩ\\\\min\\_{\\\\omega,\\\\beta}\\\\sum\\_{i}c\\\\big{(}b^{(i)},\\\\omega a^{(i)}+\\\\beta\\\\big{)}, and can be recovered in closed form when c‚Äã(a,b):=(a‚àíb)2assignùëêùëéùëèsuperscriptùëéùëè2c(a,b):=(a-b)^{2}, as\n\n|     |     |     |\n| --- | --- | --- |\n|  | œâ=‚àëia~(i)‚Äãb~(i)‚àëi(b~(i))2,Œ≤=mb‚àíœâ‚Äãma,formulae-sequenceùúîsubscriptùëñsuperscript~ùëéùëñsuperscript~ùëèùëñsubscriptùëñsuperscriptsuperscript~ùëèùëñ2ùõΩsubscriptùëöùëèùúîsubscriptùëöùëé\\\\omega=\\\\frac{\\\\sum\\_{i}\\\\tilde{a}^{(i)}\\\\tilde{b}^{(i)}}{\\\\sum\\_{i}(\\\\tilde{b}^{(i)})^{2}},\\\\quad\\\\beta=m\\_{b}-\\\\omega m\\_{a}, |  |\n\nwhere ma=1n‚Äã‚àëiai,mb=1n‚Äã‚àëibiformulae-sequencesubscriptùëöùëé1ùëõsubscriptùëñsuperscriptùëéùëñsubscriptùëöùëè1ùëõsubscriptùëñsuperscriptùëèùëñm\\_{a}=\\\\tfrac{1}{n}\\\\sum\\_{i}a^{i},m\\_{b}=\\\\tfrac{1}{n}\\\\sum\\_{i}b^{i} are mean values, and superscripted values with (i) refer to sorted values in increasing order, (a(1)‚â§‚ãØ‚â§a(n))superscriptùëé1‚ãØsuperscriptùëéùëõ(a^{(1)}\\\\leq\\\\dots\\\\leq a^{(n)}) and (b(1)‚â§‚ãØ‚â§b(n))superscriptùëè1‚ãØsuperscriptùëèùëõ(b^{(1)}\\\\leq\\\\dots\\\\leq b^{(n)}).\nAdditionally, a~(i)=a(i)‚àíma,b~(i)=b(i)‚àímbformulae-sequencesuperscript~ùëéùëñsuperscriptùëéùëñsubscriptùëöùëésuperscript~ùëèùëñsuperscriptùëèùëñsubscriptùëöùëè\\\\tilde{a}^{(i)}=a^{(i)}-m\\_{a},\\\\tilde{b}^{(i)}=b^{(i)}-m\\_{b} are sorted and recentered observations.\n\nAn important feature of Linear-AcT is that it can be composed with linear layers in the GM, resulting in no computational overhead at inference time (see [AppendixA](https://ar5iv.org/html/2410.23054#A1 \"Appendix A Memory and Computational Aspects ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") for details).\nNote that the expression in Linear-AcT should not be confused with the closed-form known when transporting a Gaussian density with parameter (ma,œÉa)m\\_{a},\\\\sigma\\_{a}) towards a second (mb,œÉbsubscriptùëöùëèsubscriptùúéùëèm\\_{b},\\\\sigma\\_{b}), which is known (Peyr√© & Cuturi, [2019](https://ar5iv.org/html/2410.23054#bib.bib31 \"\"), Remark 2.31) to be T‚Äã(a)=œÉbœÉa‚Äãa+(mb‚àíœÉbœÉa‚Äãma).ùëáùëésubscriptùúéùëèsubscriptùúéùëéùëésubscriptùëöùëèsubscriptùúéùëèsubscriptùúéùëésubscriptùëöùëéT(a)=\\\\frac{\\\\sigma\\_{b}}{\\\\sigma\\_{a}}a+(m\\_{b}-\\\\frac{\\\\sigma\\_{b}}{\\\\sigma\\_{a}}m\\_{a}).\nNote that if one makes the additional assumption that œÉa=œÉbsubscriptùúéùëésubscriptùúéùëè\\\\sigma\\_{a}=\\\\sigma\\_{b}, then the affine Gaussian map becomes a mean shift or translation, with T‚Äã(a)=a+mb‚àímaùëáùëéùëésubscriptùëöùëèsubscriptùëöùëéT(a)=a+m\\_{b}-m\\_{a}. We call this very simple baseline Mean-AcT and show in [Section3.3](https://ar5iv.org/html/2410.23054#S3.SS3 \"3.3 Generalization of Prior Inference-Time Interventions Work ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") that several methods in the literature indeed propose versions of a mean shift strategy.\n\n[Figure3](https://ar5iv.org/html/2410.23054#S3.F3 \"In 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") showcases the effect of different maps on toy data (iid, Gaussian). Note that methods based on mean-shift (ActAdd, ITI-c, Mean-AcT) can strongly over or undershoot, mapping samples out-of-distribution. Linear-AcT shows a good trade-off between in distribution mapping and low computational budget. We note that activations in current GMs show mostly unimodal distributions, but have different standard deviations for different behaviors as shown in [Figure3](https://ar5iv.org/html/2410.23054#S3.F3 \"In 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), making the linear choice a suitable one. Note that multimodal distributions would result in non-linear transport maps, which are beyond the scope of this work.\n\n##### Transport Support\n\nThe map in [Definition3.1](https://ar5iv.org/html/2410.23054#S3.Thmdefinition1 \"Definition 3.1 (Linear-AcT) ‚Ä£ 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") is estimated using nùëõn pairs of samples. In practice, nùëõn is in the order of hundreds, which results in a rough approximation of the true transport from Œºùúá\\\\mu to ŒΩùúà\\\\nu. It is fair to assume that the transport error will be higher for input samples in the tail of Œºùúá\\\\mu, given the scarcity of samples in that range.\nBecause transporting OOD samples may lead to unexpected behavior, and to be on the conservative side, we only transport new samples that are within the osberved support ùí¨o=\\[min‚Å°A,max‚Å°A\\]subscriptùí¨ùëúùê¥ùê¥\\\\mathcal{Q}\\_{o}=\\[\\\\min A,\\\\max A\\].\nUsing the support is important when Œºùúá\\\\mu is narrower than ŒΩùúà\\\\nu (typically in a mitigation setup). Unless stated otherwise, we use ùí¨osubscriptùí¨ùëú\\\\mathcal{Q}\\_{o} for concept mitigation and ùí¨‚àû=(‚àí‚àû,‚àû)subscriptùí¨\\\\mathcal{Q}\\_{\\\\infty}=(-\\\\infty,\\\\infty) for induction. [AppendixD](https://ar5iv.org/html/2410.23054#A4 \"Appendix D The Effect of the Transport Support ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") shows an empirical validation of this choice.\n\n### 3.2 Sequential Iterative Maps\n\nWhile it might be possible to follow the template approach outlined in [Section3.1](https://ar5iv.org/html/2410.23054#S3.SS1 \"3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") to apply univariate maps to each of the M‚ÄãLùëÄùêøML activations, this ignores the causal relationship across activations, where activations produced by a layer are processed by the next one, i.e.,ùíÇm,‚Ñì+1=f‚Ñì‚Äã(ùíÇm,‚Ñì)subscriptùíÇùëö‚Ñì1subscriptùëì‚ÑìsubscriptùíÇùëö‚Ñì{\\\\bm{a}}\\_{m,\\\\ell+1}=f\\_{\\\\ell}({\\\\bm{a}}\\_{m,\\\\ell}). Any intervention at the level of a layer must therefore be factored in accordingly before creating the intervention at the next one. To account for such causality, we estimate the transport maps for each layer incrementally: we first estimate the transport for the first layer (in the model graph), then we run inference again by applying the first layer map in order to estimate the map for the second layer, and so on until all maps are estimated. A similar approach is adopted in Zou et al. ( [2023](https://ar5iv.org/html/2410.23054#bib.bib57 \"\")), and detailed with our tools in [Definition3.2](https://ar5iv.org/html/2410.23054#S3.Thmdefinition2 \"Definition 3.2 (Affine Causal Transport Map) ‚Ä£ 3.2 Sequential Iterative Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). In [AppendixC](https://ar5iv.org/html/2410.23054#A3 \"Appendix C Causal vs. Simultaneous Estimation of AcT ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") we show that causal estimation achieves more effective conditioning than a simultaneous estimation. In this work, we use causal estimation for Mean-AcT and Linear-AcT.\n\n###### Definition 3.2 (Affine Causal Transport Map)\n\nFor m‚â§MùëöùëÄm\\\\leq M and ‚Ñì‚â§L‚Ñìùêø\\\\ell\\\\leq L, let Am:=(ùêöm,11,‚ãØ,ùêöm,1n)assignsubscriptùê¥ùëösubscriptsuperscriptùêö1ùëö1‚ãØsubscriptsuperscriptùêöùëõùëö1A\\_{m}:=({\\\\bm{a}}^{1}\\_{m,1},\\\\cdots,{\\\\bm{a}}^{n}\\_{m,1}) and Bm:=(ùêõm,11,‚ãØ,ùêõm,1n)assignsubscriptùêµùëösubscriptsuperscriptùêõ1ùëö1‚ãØsubscriptsuperscriptùêõùëõùëö1B\\_{m}:=({\\\\bm{b}}^{1}\\_{m,1},\\\\cdots,{\\\\bm{b}}^{n}\\_{m,1}) denote nùëõn families of MùëÄM activations for the first layer. Starting with ‚Ñì=1‚Ñì1\\\\ell=1, and setting\n\n|     |     |     |\n| --- | --- | --- |\n|  | Cm,1:=Am,1,Dm,1:=Bm,1,formulae-sequenceassignsubscriptùê∂ùëö1subscriptùê¥ùëö1assignsubscriptùê∑ùëö1subscriptùêµùëö1C\\_{m,1}:=A\\_{m,1},D\\_{m,1}:=B\\_{m,1}, |  |\n\ncompute and store the 2‚ÄãM2ùëÄ2M(œâm,Œ≤m)subscriptùúîùëösubscriptùõΩùëö(\\\\omega\\_{m},\\\\beta\\_{m}) parameters of all MùëÄM transport maps associated with these activations using [Definition3.1](https://ar5iv.org/html/2410.23054#S3.Thmdefinition1 \"Definition 3.1 (Linear-AcT) ‚Ä£ 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"):\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àÄm‚â§M,‚àÄ‚Ñì‚â§L,Tm,‚Ñì:=T‚Äã(‚ãÖ;Cm,‚Ñì,Dm,‚Ñì):‚Ñù‚Üí‚Ñù,:formulae-sequencefor-allùëöùëÄformulae-sequencefor-all‚Ñìùêøassignsubscriptùëáùëö‚Ñìùëá‚ãÖsubscriptùê∂ùëö‚Ñìsubscriptùê∑ùëö‚Ñì‚Üí‚Ñù‚Ñù\\\\forall m\\\\leq M,\\\\forall\\\\ell\\\\leq L,\\\\quad T\\_{m,\\\\ell}:=T(\\\\;\\\\cdot\\\\;;C\\_{m,\\\\ell},D\\_{m,\\\\ell}):\\\\mathbb{R}\\\\rightarrow\\\\mathbb{R}, |  |\n\nwhere observations Cùê∂C and Dùê∑D are refreshed recursively for each of their entries m‚â§MùëöùëÄm\\\\leq M, as ‚Ñì‚Ñì\\\\ell is incremented,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | C‚ãÖ,‚Ñì+1subscriptùê∂‚ãÖ‚Ñì1\\\\displaystyle C\\_{\\\\cdot,\\\\ell+1} | :=f‚Ñì‚Äã(\\[Tm,‚Ñì‚Äã(Cm,‚Ñì)\\]m),assignabsentsubscriptùëì‚Ñìsubscriptdelimited-\\[\\]subscriptùëáùëö‚Ñìsubscriptùê∂ùëö‚Ñìùëö\\\\displaystyle:=f\\_{\\\\ell}(\\[T\\_{m,\\\\ell}(C\\_{m,\\\\ell})\\]\\_{m})\\\\,, |  |\n|  | D‚ãÖ,‚Ñì+1subscriptùê∑‚ãÖ‚Ñì1\\\\displaystyle D\\_{\\\\cdot,\\\\ell+1} | :=f‚Ñì‚Äã(\\[Tm,‚Ñì‚Äã(Dm,‚Ñì)\\]m).assignabsentsubscriptùëì‚Ñìsubscriptdelimited-\\[\\]subscriptùëáùëö‚Ñìsubscriptùê∑ùëö‚Ñìùëö\\\\displaystyle:=f\\_{\\\\ell}(\\[T\\_{m,\\\\ell}(D\\_{m,\\\\ell})\\]\\_{m})\\\\,. |  |\n\nAt inference time, given a sentence ùê±ùê±{\\\\bm{x}}, we run the recursion starting from the first activation vector ùêö=(ùêöm,1)mùêösubscriptsubscriptùêöùëö1ùëö{\\\\bm{a}}=({\\\\bm{a}}\\_{m,1})\\_{m}, looping for 1‚â§‚Ñì‚â§L1‚Ñìùêø1\\\\leq\\\\ell\\\\leq L as ùêö‚Üêf‚Ñì(\\[Tm,‚Ñì(ùêöm)\\]m{\\\\bm{a}}\\\\leftarrow f\\_{\\\\ell}(\\[T\\_{m,\\\\ell}({\\\\bm{a}}\\_{m})\\]\\_{m}.\n\nInterpolation Between Measures Using Transport One can easily extend a transport map from measure Œºùúá\\\\mu to ŒΩùúà\\\\nu to one that is able to output an interpolating measure. The idea, outlined by McCann ( [1997](https://ar5iv.org/html/2410.23054#bib.bib27 \"\")), consists in defining the following ŒªùúÜ\\\\lambda-parameterized map from any OT map TùëáT,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | T‚Äã(a,Œª)=(1‚àíŒª)‚Äãa+Œª‚ÄãT‚Äã(a),ùëáùëéùúÜ1ùúÜùëéùúÜùëáùëéT(a,\\\\lambda)=(1-\\\\lambda)a+\\\\lambda T(a), |  | (1) |\n\nwhere Œª‚àà\\[0,1\\]ùúÜ01\\\\lambda\\\\in\\[0,1\\] and Œª=1ùúÜ1\\\\lambda=1 recovers the full transport.\nConditioning GMs through OT allows the user to precisely control the presence of a concept with a continuous and interpretable knob(Œª)ùúÜ(\\\\lambda) during generation, not requiring expensive parameter search (Li et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib22 \"\")) or being limited by fixed, uncontrollable conditioning (Suau et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib44 \"\")). In applications such as diffusion, where the utility of the model is harder to assess, our interpretable strength is of key importance, as shown in [Section5](https://ar5iv.org/html/2410.23054#S5 \"5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). Note that methods like ActAdd, CAA or ITI-c also have a conditioning strength parameter. However, this parameter is applied as a multiplier of a conditioning bias as T‚Äã(a,Œª)=a+Œª‚ÄãŒ≤ùëáùëéùúÜùëéùúÜùõΩT(a,\\\\lambda)=a+\\\\lambda\\\\beta (see [Section3.3](https://ar5iv.org/html/2410.23054#S3.SS3 \"3.3 Generalization of Prior Inference-Time Interventions Work ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), thus making ŒªùúÜ\\\\lambda unbounded, harder to interpret and not robust with respect to different models, layers, and tasks.\n\n### 3.3 Generalization of Prior Inference-Time Interventions Work\n\nIn this section, we show how many earlier works can be interpreted as special cases of Linear-AcT.\n[Table1](https://ar5iv.org/html/2410.23054#S3.T1 \"In 3.3 Generalization of Prior Inference-Time Interventions Work ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") summarizes the intervention proposed by several recent methods, where we show that all methods propose a form of linear transport, and all of them (aside from Suau et al. ( [2022](https://ar5iv.org/html/2410.23054#bib.bib43 \"\"))) add a bias to the activations. The way this bias is pre-computed is what differentiates each method. Note that the parameter ŒªùúÜ\\\\lambda typically multiplies the bias, thus becoming unbounded and non-interpretable.\n\nAcT applies a linear transformation on activations that maximally preserves internal distributions ( [Section3.1](https://ar5iv.org/html/2410.23054#S3.SS1 \"3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). Moreover, AcT interpolates between the current and transformed activations, making ŒªùúÜ\\\\lambda bounded between \\[0,1\\]01\\[0,1\\] and interpretable. An additional important aspect is that other methods propose various heuristics to choose the support, while AcT uses all activations or the observed input range (ùí¨osubscriptùí¨ùëú\\\\mathcal{Q}\\_{o}). Note that CAA, ITI-m and Mean-AcT use a difference in means. We subsume this family of methods reporting results for Mean-AcT, which has the additional advantage of an interpretable ŒªùúÜ\\\\lambda.\nAn additional difference is that many methods use the last token only (in pseudocode, œï‚Äã(ùíõ)=ùíõ‚Äã\\[‚Ä¶,‚àí1\\]italic-œïùíõùíõ‚Ä¶1\\\\phi({\\\\bm{z}})={\\\\bm{z}}\\[\\\\ldots,-1\\]). Detzerozero{}\\_{\\\\text{zero}} and AurA use max-pooling (œï‚Äã(ùíõ)=ùíõ.m‚Äãa‚Äãx‚Äã(‚àí1)formulae-sequenceitalic-œïùíõùíõùëöùëéùë•1\\\\phi({\\\\bm{z}})={\\\\bm{z}}.max(-1)). Conversely AcT uses an average across tokens (œï‚Äã(ùíõ)=ùíõ.m‚Äãe‚Äãa‚Äãn‚Äã(‚àí1)formulae-sequenceitalic-œïùíõùíõùëöùëíùëéùëõ1\\\\phi({\\\\bm{z}})={\\\\bm{z}}.mean(-1)), which we have found to be more robust.\n\nTable 1: Comparison of different inference-time interventions in the literature. All methods listed can be expressed as a specific form of a linear map. With AcT, the conditioning strength ŒªùúÜ\\\\lambda interpolated between the activation aùëéa and its transformed version (following [Equation1](https://ar5iv.org/html/2410.23054#S3.E1 \"In 3.2 Sequential Iterative Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), while existing methods use ŒªùúÜ\\\\lambda as a bias multiplier, thus becoming less interpretable and less robust to model/layer changes. As a result, many methods require a grid-search to find the best layer to intervene upon.\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n| Method | Transport | Parameters | Support | œïitalic-œï\\\\phi |\n| Detzerozero{}\\_{\\\\text{zero}}(Suau et al., [2022](https://ar5iv.org/html/2410.23054#bib.bib43 \"\")) | œâ‚Äãa+Œ≤ùúîùëéùõΩ\\\\omega a+\\\\beta | œâ=0,Œ≤=mbformulae-sequenceùúî0ùõΩsubscriptùëöùëè\\\\omega=0,\\\\;\\\\beta=m\\_{b} | Any layer, a‚Äã‚à£AP‚Äã(A,B)>‚ÄãŒµùëéketAPùê¥ùêµùúÄ{a\\\\mid\\\\text{AP}(A,B)>\\\\varepsilon} | max |\n| ActAdd(Turner et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib46 \"\")) | œâ‚Äãa+Œª‚ÄãŒ≤ùúîùëéùúÜùõΩ\\\\omega a+\\\\lambda\\\\beta | œâ=1,Œ≤=a+‚àía‚àíformulae-sequenceùúî1ùõΩsuperscriptùëésuperscriptùëé\\\\omega=1,\\\\;\\\\beta=a^{+}-a^{-} | Layer search | last |\n| CAA (Rimsky et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib36 \"\")) | œâ‚Äãa+Œª‚ÄãŒ≤ùúîùëéùúÜùõΩ\\\\omega a+\\\\lambda\\\\beta | œâ=1,Œ≤=mb‚àímaformulae-sequenceùúî1ùõΩsubscriptùëöùëèsubscriptùëöùëé\\\\omega=1,\\\\;\\\\beta=m\\_{b}-m\\_{a} | Layer search | last |\n| RePE (Zou et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib57 \"\")) | œâ‚Äãa+Œª‚ÄãŒ≤ùúîùëéùúÜùõΩ\\\\omega a+\\\\lambda\\\\beta | œâ=1,Œ≤=a+‚Äã(ùíô)‚àía‚àí‚Äã(ùíô)formulae-sequenceùúî1ùõΩsuperscriptùëéùíôsuperscriptùëéùíô\\\\omega=1,\\\\;\\\\beta=a^{+}({\\\\bm{x}})-a^{-}({\\\\bm{x}}) | Layer search | last |\n| AurA(Suau et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib44 \"\")) | œâ‚Äãa+Œ≤ùúîùëéùõΩ\\\\omega a+\\\\beta | œâ=1‚àíG‚Äãi‚Äãn‚Äãi‚Äã(A,B),Œ≤=0formulae-sequenceùúî1ùê∫ùëñùëõùëñùê¥ùêµùõΩ0\\\\omega=1-Gini(A,B),\\\\;\\\\beta=0 | Any layer, a‚Äã‚à£AUROC‚Äã(A,B)>‚Äã0.5ùëéketAUROCùê¥ùêµ0.5{a\\\\mid\\\\text{AUROC}(A,B)>0.5} | max |\n| EAST (Rahn et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib35 \"\")) | œâ‚Äãa+Œª‚ÄãŒ≤ùúîùëéùúÜùõΩ\\\\omega a+\\\\lambda\\\\beta | œâ=1,Œ≤‚âàmbformulae-sequenceùúî1ùõΩsubscriptùëöùëè\\\\omega=1,\\\\;\\\\beta\\\\approx m\\_{b} | Layer search | last |\n| ITI-m(Li et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib22 \"\")) | œâ‚Äãa+Œª‚ÄãŒ≤ùúîùëéùúÜùõΩ\\\\omega a+\\\\lambda\\\\beta | œâ=1,Œ≤=mb‚àímaformulae-sequenceùúî1ùõΩsubscriptùëöùëèsubscriptùëöùëé\\\\omega=1,\\\\;\\\\beta=m\\_{b}-m\\_{a} | Attention head search | last |\n| ITI-c(Li et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib22 \"\")) | œâ‚Äãa+Œª‚ÄãŒ≤ùúîùëéùúÜùõΩ\\\\omega a+\\\\lambda\\\\beta | œâ=1,Œ≤=fC‚ÄãL‚ÄãS‚Äã(A,B)formulae-sequenceùúî1ùõΩsubscriptùëìùê∂ùêøùëÜùê¥ùêµ\\\\omega=1,\\\\;\\\\beta=f\\_{CLS}(A,B) | Attention head search | last |\n| Mean-AcT, [Section3.1](https://ar5iv.org/html/2410.23054#S3.SS1 \"3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") | (1‚àíŒª)‚Äãa+Œª‚Äã(œâ‚Äãa+Œ≤)1ùúÜùëéùúÜùúîùëéùõΩ(1-\\\\lambda)a+\\\\lambda(\\\\omega a+\\\\beta) | œâ=1,Œ≤=mb‚àímaformulae-sequenceùúî1ùõΩsubscriptùëöùëèsubscriptùëöùëé\\\\omega=1,\\\\;\\\\beta=m\\_{b}-m\\_{a} | Any layer, a‚ààùí¨o‚Äã or ‚Äãùí¨‚àûùëésubscriptùí¨ùëú or subscriptùí¨a\\\\in\\\\mathcal{Q}\\_{o}\\\\text{ or }\\\\mathcal{Q}\\_{\\\\infty} | mean |\n| Linear-AcT, [Definition3.1](https://ar5iv.org/html/2410.23054#S3.Thmdefinition1 \"Definition 3.1 (Linear-AcT) ‚Ä£ 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") | (1‚àíŒª)‚Äãa+Œª‚Äã(œâ‚Äãa+Œ≤)1ùúÜùëéùúÜùúîùëéùõΩ(1-\\\\lambda)a+\\\\lambda(\\\\omega a+\\\\beta) | œâ,Œ≤=arg‚Äãminœâ,Œ≤‚Äã‚àëi(b(i)‚àí(œâ‚Äãa(i)+Œ≤))2ùúîùõΩsubscriptargminùúîùõΩsubscriptùëñsuperscriptsuperscriptùëèùëñùúîsuperscriptùëéùëñùõΩ2\\\\omega,\\\\beta=\\\\operatorname\\*{arg\\\\,min}\\_{\\\\omega,\\\\beta}\\\\sum\\_{i}(b^{(i)}-(\\\\omega a^{(i)}+\\\\beta))^{2} | Any layer, a‚ààùí¨o‚Äã or ‚Äãùí¨‚àûùëésubscriptùí¨ùëú or subscriptùí¨a\\\\in\\\\mathcal{Q}\\_{o}\\\\text{ or }\\\\mathcal{Q}\\_{\\\\infty} | mean |\n\n## 4 Experiments on LLMs\n\nWe empirically verify the performance of AcT on pre-trained LLMs on toxicity mitigation ( [Section4.1](https://ar5iv.org/html/2410.23054#S4.SS1 \"4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), general concept induction ( [Section4.2](https://ar5iv.org/html/2410.23054#S4.SS2 \"4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), and truthfulness induction in particular ( [Section4.3](https://ar5iv.org/html/2410.23054#S4.SS3 \"4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), showing the efficacy and robustness of AcT in different scenarios related to LLMs.\n\n### 4.1 Toxicity Mitigation in LLMs\n\nIt is known that LLMs are prone to generate toxic language (Wen et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib50 \"\")), especially when prompts are designed to elicit toxic behavior. In this section, we study how AcT is effective at toxic language mitigation compared to some recents methods such as AurA, ActAdd and ITI-c, on Gemma2-2B (Team et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib45 \"\")) and Llama3-8B Dubey et al. ( [2024](https://ar5iv.org/html/2410.23054#bib.bib8 \"\")).\n\nWe prompt each LLM with 1000 randomly chosen prompts from RealToxicityPrompts (RTP) (Gehman et al., [2020](https://ar5iv.org/html/2410.23054#bib.bib12 \"\")),known to induce toxic language generation. Then, we collect the generated continuation to each prompt and we evaluate toxicity with a ROBERTA-based classifier222 [https://huggingface.co/s-nlp/roberta\\_toxicity\\_classifier](https://huggingface.co/s-nlp/roberta_toxicity_classifier \"\"), as in Suau et al. ( [2024](https://ar5iv.org/html/2410.23054#bib.bib44 \"\")). In addition, we also measure toxicity in a 0-shot manner by querying Llama3-8B-instruct as LLM-as-a-judge (Zheng et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib56 \"\")) (more details on the way we instructed the LLM-as-a-judge can be found in [AppendixE](https://ar5iv.org/html/2410.23054#A5 \"Appendix E 0-shot toxicity classification ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). As a measure of general LLM utility we report in [Section4.1](https://ar5iv.org/html/2410.23054#S4.SS1 \"4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"): (i) perplexity (PPL) on a fixed set of 20k Wikipedia sentences measured with the intervened model, (ii) PPL of the generated sentences measured with Mistral-7B (Jiang et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib18 \"\")) and (iii) MMLU (Hendrycks et al., [2021](https://ar5iv.org/html/2410.23054#bib.bib13 \"\")) 5-shot accuracy using the intervened model.\n\nTable 2: Toxicity mitigation for Gemma2-2B and Llama3-8B, results over 5 runs. We intervene upon different layer types (layer column) and show the best layer per method. ITI-c, ActAdd and AcT have a strength parameter ŒªùúÜ\\\\lambda which we sweep. For each method, we report results for the ŒªùúÜ\\\\lambda that attained the best CLS toxicity that incurs less than +11+1 increase in PPL Wikipedia. AcT methods and provide best results for Œª=1ùúÜ1\\\\lambda=1, achieving up to 7.5√ó7.5\\\\times (Gemma2-2B) and 4.3√ó4.3\\\\times (Llama3-8B) CLS toxicity mitigation with Linear-AcT. ITI-c is very sensitive to ŒªùúÜ\\\\lambda as well as layer choice (see full results in [AppendixG](https://ar5iv.org/html/2410.23054#A7 \"Appendix G Extended Results on Toxicity Mitigation ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), and AurA reaches up to 3.1√ó3.1\\\\times reduction.\n\n{NiceTabular}\ncllr‚Äîll‚Äîlll\nLayer Best ŒªùúÜ\\\\lambda CLS Tox. (%) ‚Üì‚Üì\\\\downarrow 0-shot Tox. (%) ‚Üì‚Üì\\\\downarrow PPL Wikipedia ‚Üì‚Üì\\\\downarrow PPL Mistral-7B ‚Üì‚Üì\\\\downarrow MMLU ‚Üë‚Üë\\\\uparrow\n\n\\\\Block6-1¬°\\\\rotate¬øGemma2-2B Original - - 4.17¬±0.32plus-or-minus4.170.324.17\\\\pm{0.32}13.42¬±1.08plus-or-minus13.421.0813.42\\\\pm{1.08} 13.98 6.68 53.1\n\nActAdd MLP 0.5 3.96¬±0.24plus-or-minus3.960.243.96\\\\pm{0.24}(1.1√ó({1.1}\\\\times)13.43¬±1.42plus-or-minus13.431.4213.43\\\\pm{1.42} 14.69 (+0.72) 6.67 (+0.05) 53.0 (-0.1)\n\nAurA MLP - 2.12¬±0.27plus-or-minus2.120.272.12\\\\pm{0.27}(2.0√ó({2.0}\\\\times)9.04¬±0.66plus-or-minus9.040.669.04\\\\pm{0.66} 14.18 (+0.21) 7.04 (+0.36) 53.0 (-0.1)\n\nITI-c Attention 8.0 0.74¬±0.18plus-or-minus0.740.18{0.74}\\\\pm{0.18}(5.6√ó({5.6}\\\\times)5.36¬±0.91plus-or-minus5.360.915.36\\\\pm{0.91} 14.90 (+0.92) 7.44 (+0.76) 52.6 (-0.5)\n\nMean-AcT Post-LN 1.0 0.54¬±0.44plus-or-minus0.540.44\\\\mathbf{0.54}\\\\pm{0.44}(7.7√ó({7.7}\\\\times)4.10¬±0.41plus-or-minus4.100.41\\\\mathbf{4.10}\\\\pm{0.41} 14.21 (+0.23) 7.59 (+0.90) 51.6 (-1.5)\n\nLinear-AcT Post-LN 1.0 0.56¬Ø¬±0.21plus-or-minus¬Ø0.560.21\\\\underline{0.56}\\\\pm{0.21}(7.5√ó({7.5}\\\\times)4.14¬Ø¬±0.55plus-or-minus¬Ø4.140.55\\\\underline{4.14}\\\\pm{0.55} 14.79 (+0.81) 7.99 (+1.31) 51.3 (-1.8)\n\n\\\\Block6-1¬°\\\\rotate¬øLlama3-8B Original - - 5.805.805.8015.0015.0015.00 9.06 5.68 65.3\n\nActAdd Attention 0.3 5.57¬±0.45plus-or-minus5.570.455.57\\\\pm{0.45}(1.0√ó({1.0}\\\\times)15.73¬±0.21plus-or-minus15.730.2115.73\\\\pm{0.21} 9.71 (+0.65) 5.85 (+0.16) 65.5 (+0.2)\n\nAurA MLP - 1.90¬±0.61plus-or-minus1.900.61{1.90}\\\\pm{0.61}(3.1√ó({3.1}\\\\times)8.12¬±0.85plus-or-minus8.120.85{8.12}\\\\pm{0.85} 9.52 (+0.45) 6.05 (+0.37) 65.5 (+0.2)\n\nITI-c Attention 3.0 1.60¬±0.22plus-or-minus1.600.221.60\\\\pm{0.22}(3.6√ó({3.6}\\\\times)6.53¬Ø¬±0.66plus-or-minus¬Ø6.530.66\\\\underline{6.53}\\\\pm{0.66} 9.48 (+0.42) 6.17 (+0.49) 64.7 (-0.6)\n\nMean-AcT Attention 1.0 1.38¬Ø¬±0.17plus-or-minus¬Ø1.380.17\\\\underline{1.38}\\\\pm{0.17}(4.2√ó({4.2}\\\\times)5.60¬±0.34plus-or-minus5.600.34\\\\mathbf{5.60}\\\\pm{0.34} 9.56 (+0.49) 6.36 (+0.68) 64.7 (-0.7)\n\nLinear-AcT Attention 1.0 1.35¬±0.39plus-or-minus1.350.39\\\\mathbf{1.35}\\\\pm{0.39}(4.3√ó({4.3}\\\\times)6.68¬±0.81plus-or-minus6.680.816.68\\\\pm{0.81} 9.56 (+0.49) 6.28 (+0.60) 64.5 (-0.8)\n\nLinear-AcT reduces toxicity up to 7.5√ó7.5\\\\times and is robust to ŒªùúÜ\\\\lambda, layer, and model choice\n\nWe observe that Linear-AcT achieves up to 7.5√ó7.5\\\\times reduction in toxicity on Gemma2-2B and 4.3√ó4.3\\\\times on Llama3-8B, with minimal impact on PPL and MMLU. Most importantly, AcT obtains the best results at Œª=1ùúÜ1\\\\lambda=1, which is in line with our OT formulation, since Œª=1ùúÜ1\\\\lambda=1 means full transport. Linear-AcT and Mean-AcT obtain similar toxicity mitigation results. ITI-c achieves 5.6√ó5.6\\\\times and 3.6√ó3.6\\\\times toxicity reduction on Gemma2-2B and Llama3-8B respectively. In line with the ITI-c paper findings, ITI-c performs well on attention, but is very sensitive to models and layers, as well as to the choice of ŒªùúÜ\\\\lambda\n(see a layer diagram in [AppendixB](https://ar5iv.org/html/2410.23054#A2 \"Appendix B Intervened Layers ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and full tables and plots in [AppendixG](https://ar5iv.org/html/2410.23054#A7 \"Appendix G Extended Results on Toxicity Mitigation ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). AurA achieves 2.0√ó2.0\\\\times and 3.1√ó3.1\\\\times toxicity reduction per model and ActAdd induces the mildest mitigation.\n\n### 4.2 Inducing Concepts in LLMs with AcT\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x2.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x3.png)\n\nFigure 4: Concept induction using AcT (post-LN layers) and ITI-c (attention layers) on Gemma2-2B. We aggregate results over 7 WordNet concepts, generating 500 sentences at different intervention strength levels. We report concept presence with LLM-as-a-judge (p‚Äã(y‚Äãe‚Äãs)ùëùùë¶ùëíùë†p(yes)), and the PPL of the generated sentences using Mistral-7B. We plot the median (and 25/75 quantile band) across concepts and generations per level, showing that Linear-AcT achieves a peak of concept induction at Œª‚âà1ùúÜ1\\\\lambda\\\\approx 1, which is inline with our OT formulation. Other methods show different maxima.\n\nAcT allows transporting activations from distribution Œºùúá\\\\mu to ŒΩùúà\\\\nu (derived from sentence distributions pùëùp and qùëûq respectively). In an induction setting, pùëùp covers generic content, while qùëûq a specific concept that we want to induce. We mine the OneSec dataset (Scarlini et al., [2019](https://ar5iv.org/html/2410.23054#bib.bib40 \"\")), collecting 700 sentences that contain a specific concept (qùëûq) and 700 sentences randomly sampled from other concepts (pùëùp). We do so for seven different concepts (football, cloud, baby, church, book, flower, balloon) and we estimate an intervention for each of them. We assess the presence of a concept in the generated text in a LLM-as-a-judge manner by querying Llama3-8B-instruct (LLM-as-a-judge details in [AppendixF](https://ar5iv.org/html/2410.23054#A6 \"Appendix F 0-shot concept presence classification ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")).\n\nLinear-AcT can induce arbitrary concepts with consistent Œª=1ùúÜ1\\\\lambda=1\n\n[Figure4](https://ar5iv.org/html/2410.23054#S4.F4 \"In 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") shows the effect of increasing ŒªùúÜ\\\\lambda both on the presence of the concept, p‚Äã(y‚Äãe‚Äãs)ùëùùë¶ùëíùë†p(yes), and the PPL measured with Mistral-7B on the generated text. We intervene upon the most effective layers for each method according to the toxicity results: Post-LN for AcT and attention for ITI-c. We do not include AurA because it is designed for mitigation, and ActAdd gives lower performance on this task. For Linear-AcT, we observe a peak of concept presence at Œª‚âà1ùúÜ1\\\\lambda\\\\approx 1, with a median p‚Äã(y‚Äãe‚Äãs)=0.87ùëùùë¶ùëíùë†0.87p(yes)=0.87 (i.e., 87% of the generated sentences are classified as containing the induced concept) and an acceptable PPL=8.5PPL8.5\\\\text{PPL}=8.5. For Œª>1ùúÜ1\\\\lambda>1, the PPL quickly degrades and the presence of the concept diminishes.\nThis is also consistent with the toxicity mitigation experiments in [Section4.1](https://ar5iv.org/html/2410.23054#S4.SS1 \"4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). Interestingly, the peak for Mean-AcT is at Œª‚âà2.5ùúÜ2.5\\\\lambda\\\\approx 2.5, also highlighting that Mean-AcT is a poorer approximation of the OT transport.\nNotably, ITI-c achieves a similar p‚Äã(y‚Äãe‚Äãs)ùëùùë¶ùëíùë†p(yes) and PPL as Linear-AcT for Œª‚âà5ùúÜ5\\\\lambda\\\\approx 5. However, note that ITI-c‚Äôs best ŒªùúÜ\\\\lambda is different than the ones for toxicity.\n[AppendixH](https://ar5iv.org/html/2410.23054#A8 \"Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") contains generation examples.\n\nTable 3: TruthfulQA results for Gemma2-2B and Llama3-8B, results over 5 runs. We intervene upon different layers (layer column) and show the best per model. ITI-c, ActAdd and AcT have a strength parameter ŒªùúÜ\\\\lambda which we sweep, reporting the best ŒªùúÜ\\\\lambda result per model (MC1 Accuracy so that MMLU is within the best AcT MMLU ¬±‚ÄÑ0.1plus-or-minus0.1\\\\pm\\\\;0.1).\n\n{NiceTabular}\ncllr‚Äîll‚Äîl\nLayer Best ŒªùúÜ\\\\lambda MC1 Accuracy (%) ‚Üë‚Üë\\\\uparrow MC2 Accuracy (%) ‚Üë‚Üë\\\\uparrow MMLU Accuracy (%) ‚Üë‚Üë\\\\uparrow\n\n\\\\Block6-1¬°\\\\rotate¬øGemma2-2B Original - - 21.0521.0521.0532.8032.8032.8053.1053.1053.10\n\nActAdd MLP 3.0 23.01¬±0.00plus-or-minus23.010.0023.01\\\\pm{0.00} (+1.961.96+1.96) 34.76¬±0.00plus-or-minus34.760.0034.76\\\\pm{0.00} (+1.961.96+1.96) 52.83¬±0.00plus-or-minus52.830.0052.83\\\\pm{0.00} (‚àí0.270.27-0.27)\n\nAurA MLP - 21.20¬±0.10plus-or-minus21.200.1021.20\\\\pm{0.10} (+0.150.15+0.15) 32.88¬±0.22plus-or-minus32.880.2232.88\\\\pm{0.22} (+0.080.08+0.08) 52.73¬±0.07plus-or-minus52.730.0752.73\\\\pm{0.07} (‚àí0.370.37-0.37)\n\nITI-c MLP 2.0 24.53¬±0.11plus-or-minus24.530.1124.53\\\\pm{0.11} (+3.483.48+3.48) 37.06¬±0.38plus-or-minus37.060.3837.06\\\\pm{0.38} (+4.264.26+4.26) 51.39¬±0.41plus-or-minus51.390.4151.39\\\\pm{0.41} (‚àí1.711.71-1.71)\n\nMean-AcT All-LN 1.0 25.07¬Ø¬±0.20plus-or-minus¬Ø25.070.20\\\\underline{25.07}\\\\pm{0.20} (+4.024.02+4.02) 38.68¬Ø¬±0.30plus-or-minus¬Ø38.680.30\\\\underline{38.68}\\\\pm{0.30} (+5.885.88+5.88) 51.81¬±0.12plus-or-minus51.810.1251.81\\\\pm{0.12} (‚àí1.291.29-1.29)\n\nLinear-AcT All-LN 1.0 26.00¬±0.32plus-or-minus26.000.32\\\\textbf{26.00}\\\\pm{0.32} (+4.954.95+4.95) 40.17¬±0.24plus-or-minus40.170.24\\\\textbf{40.17}\\\\pm{0.24} (+7.377.37+7.37) 51.47¬±0.27plus-or-minus51.470.2751.47\\\\pm{0.27} (‚àí1.631.63-1.63)\n\n\\\\Block6-1¬°\\\\rotate¬øLlama3-8B Original - - 25.4625.4625.4640.2740.2740.2765.3565.3565.35\n\nActAdd Attention 0.7 26.19¬±0.00plus-or-minus26.190.0026.19\\\\pm{0.00} (+0.730.73+0.73) 40.88¬±0.00plus-or-minus40.880.0040.88\\\\pm{0.00} (+0.610.61+0.61) 65.42¬±0.00plus-or-minus65.420.0065.42\\\\pm{0.00} (+0.070.07+0.07)\n\nAurA MLP - 25.34¬±0.15plus-or-minus25.340.1525.34\\\\pm{0.15} (‚àí0.120.12-0.12) 40.47¬±0.20plus-or-minus40.470.2040.47\\\\pm{0.20} (+0.200.20+0.20) 65.37¬±0.06plus-or-minus65.370.0665.37\\\\pm{0.06} (+0.020.02+0.02)\n\nITI-c MLP 2.0 30.11¬±0.60plus-or-minus30.110.6030.11\\\\pm{0.60} (+4.654.65+4.65) 45.41¬±0.24plus-or-minus45.410.2445.41\\\\pm{0.24} (+5.145.14+5.14) 64.71¬±0.14plus-or-minus64.710.1464.71\\\\pm{0.14} (‚àí0.640.64-0.64)\n\nMean-AcT All-LN 1.0 32.88¬Ø¬±0.54plus-or-minus¬Ø32.880.54\\\\underline{32.88}\\\\pm{0.54} (+7.427.42+7.42) 48.23¬Ø¬±0.64plus-or-minus¬Ø48.230.64\\\\underline{48.23}\\\\pm{0.64} (+7.967.96+7.96) 64.83¬±0.14plus-or-minus64.830.1464.83\\\\pm{0.14} (‚àí0.520.52-0.52)\n\nLinear-AcT All-LN 1.0 33.22¬±0.22plus-or-minus33.220.22\\\\textbf{33.22}\\\\pm{0.22} (+7.767.76+7.76) 48.69¬±0.34plus-or-minus48.690.34\\\\textbf{48.69}\\\\pm{0.34} (+8.428.42+8.42) 64.78¬±0.15plus-or-minus64.780.1564.78\\\\pm{0.15} (‚àí0.570.57-0.57)\n\n### 4.3 Inducing truthfulness in LLMs with AcT\n\nOne particular concept that has gained attention in previous activation steering works is ‚Äútruthfulness‚Äù (Li et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib22 \"\")).\nWe study how AcT can increase truthfulness on Gemma2-2B and Llama3-8B, compared to the original model. Again, we compare to AurA, ActAdd and ITI-c. We evaluate all methods on the TruthfulQA multiple choice part that has been used in prior work (Lin et al., [2021](https://ar5iv.org/html/2410.23054#bib.bib25 \"\"); Li et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib22 \"\")). We report both MC1 and MC2 of TruthfulQA, and control for overfitting on the TruthfulQA task by also evaluating MMLU 5-shot accuracy (Hendrycks et al., [2021](https://ar5iv.org/html/2410.23054#bib.bib13 \"\")).\n\nAcT can induce truthfulness with consistent Œª=1ùúÜ1\\\\lambda=1.\n\nThe results of our experiments are summarized in Table [4.2](https://ar5iv.org/html/2410.23054#S4.SS2 \"4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). As we can see, AcT can successfully induce truthfulness in both models in its default setting Œª=1ùúÜ1\\\\lambda=1 (corresponding to full transport). Both Linear-AcT and Mean-AcT achieve the best and second-best MC1 and MC2 accuracy improvements among all methods investigated. Linear-AcT increases MC1 by roughly 5%percent55\\\\% for Gemma2-2B and by almost 8%percent88\\\\% for Llama3-8B, which is about 1.5%percent1.51.5\\\\% and 3%percent33\\\\% more than the closest non-AcT baseline (ITI-c), while incurring even slightly less decrease in MMLU performance.\nFull results and experimental setup in [AppendixI](https://ar5iv.org/html/2410.23054#A9 \"Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").\n\n## 5 Controlling Image Diffusion Models\n\nIn this section, we show that AcT improves the controllability of text-to-image diffusion models (T2Is), a well-known challenge (Cao et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib4 \"\")). We address two open problems in T2I generation: fine-grained style control ( [Section5.1](https://ar5iv.org/html/2410.23054#S5.SS1 \"5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")) and concept negation ( [Section5.2](https://ar5iv.org/html/2410.23054#S5.SS2 \"5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). We show that off-the-shelf AcT succeeds at both tasks. In line with optimal transport theory and experimental results on LLMs ( [Section4](https://ar5iv.org/html/2410.23054#S4 \"4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), AcT consistently achieves the strongest conditioning with full strength (i.e.,Œª=1ùúÜ1\\\\lambda=1). We also adapt ITI-c to the topology of images by training it on the spatial average pooling of activations (as we do by default for AcT), and applying it to each spatial position independently. Remarkably, ITI-c succeeds at the fine-grained control task with our adaptation, but requires tuning ŒªùúÜ\\\\lambda, and it fails with concept negation.\n\n##### Setup.\n\nWe apply AcT on the denoising convolutional UNet of Stable Diffusion XL (SDXL) ( [Podell et al.,](https://ar5iv.org/html/2410.23054#bib.bib32 \"\")) and the denoising transformer of FLUX.1.Schnell333 [https://blackforestlabs.ai/announcing-black-forest-labs/](https://blackforestlabs.ai/announcing-black-forest-labs/ \"\"). For FLUX, we use the T5-XXL text encoding modality (Raffel et al., [2020](https://ar5iv.org/html/2410.23054#bib.bib34 \"\")) instead of CLIP (Radford et al., [2017](https://ar5iv.org/html/2410.23054#bib.bib33 \"\")) to account for the effects of language modelling. We use a distilled version of SDXL, which only requires 4 diffusion steps (Lin et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib24 \"\")) like FLUX. We intervene upon all normalization layers in SDXL‚Äôs UNET and the output of most residual layers in FLUX (details in [SectionJ.8](https://ar5iv.org/html/2410.23054#A10.SS8 \"J.8 Details on FLUX conditioning ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). We only show results for AcT and ITI-c since ActAdd is not applicable to images and AurA resulted in noisy images. To measure the presence of a style or a concept, we use a CLIP zero-shot classifier with the classes (+) ‚ÄúA picture of a {style or concept}‚Äù and (-) ‚ÄúA picture of something‚Äù. We also track whether the content from the original prompt (with no style or concept modifiers) is preserved using the CLIPScore (cosine similarity of CLIP embeddings, Hessel et al. ( [2021](https://ar5iv.org/html/2410.23054#bib.bib14 \"\"))) between the images generated after the intervention and the original prompt.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x4.jpg)![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x5.jpg)0.00.00.00.40.40.40.60.60.60.80.80.81.01.01.02.0‚Äã best2.0 best2.0\\\\text{ best}0.00.00.00.40.40.40.60.60.60.80.80.81.01.01.01.0‚Äã best1.0 best1.0\\\\text{ best}0.00.00.00.40.40.40.60.60.60.80.80.81.01.01.01.0‚Äã best1.0 best1.0\\\\text{ best}0.00.00.00.40.40.40.60.60.60.80.80.81.01.01.01.0‚Äã best1.0 best1.0\\\\text{ best}0.00.00.00.40.40.40.60.60.60.80.80.81.01.01.01.0‚Äã best1.0 best1.0\\\\text{ best}0.00.00.00.40.40.40.60.60.60.80.80.81.01.01.01.0‚Äã best1.0 best1.0\\\\text{ best}Figure 5: Linear-AcT allows controlled conditioning of SDXL and FLUX. ‚ÄúA cat resting on a laptop keyboard in a bedroom.‚Äù SDXL (left) and FLUX (right) intervened with ITI-c (top), Mean-AcT (middle) and Linear-AcT (bottom) respectively for the concept cyberpunk, with strength increasing from 0 and 1. We also show the image at the best ŒªùúÜ\\\\lambda according to the highest 0-shot score in [Figure6](https://ar5iv.org/html/2410.23054#S5.F6 \"In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). Qualitatively, Linear-AcT shows the best trade-off between cyberpunk style increase and prompt semantics preservation.\n\n### 5.1 Style control\n\nA major challenge in T2I generation is fine-grained control. For example, while you can prompt SDXL to create a sketch of an object, it is hard to control the level of ‚Äúsketchiness‚Äù. Models like SDXL have a guidance parameter, but its use is limited since low guidance values tend to remove image semantics (see example in [SectionJ.1](https://ar5iv.org/html/2410.23054#A10.SS1 \"J.1 Guidance Parameter in Existing Diffusion Models ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")).\n\nWe sample 2048 prompts from the COCO Captions (Chen et al., [2015](https://ar5iv.org/html/2410.23054#bib.bib5 \"\")) training set and append a series of tags generated with Llama-8B-instruct to induce the following styles: anime, art nouveau, cyberpunk, impressionism, sketch, watercolor (see [Table13](https://ar5iv.org/html/2410.23054#A10.T13 \"In J.6 Style prompts ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") for details). Then we use the original prompt as the source distribution (pùëùp) and the style-modified prompt as the target distribution (qùëûq) to learn transport maps for style. To evaluate, we sample 512 prompts from the COCO Captions validation set and generate images with different intervention strengths.\n\nLinear-AcT is a robust method for fine-grained control in text-to-image generation.\n\n[Figure5(a)](https://ar5iv.org/html/2410.23054#S5.F5.sf1 \"In Figure 6 ‚Ä£ 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") shows that Linear-AcT on SDXL and FLUX increases the presence of a desired style, e.g., on SDXL from ‚àº12%similar-toabsentpercent12\\\\sim 12\\\\% to ‚àº95%similar-toabsentpercent95\\\\sim 95\\\\% of the generated images while keeping ‚àº80%similar-toabsentpercent80\\\\sim 80\\\\% of the similarity to the original prompt (Œª=1)\\\\lambda=1). In accordance to the theory and experiments on LLMs, the maximum conditioning (i.e., highest 0-shot score) for AcT is achieved at Œª=1ùúÜ1\\\\lambda=1 for both models. ITI-c can also accomplish fine-grained control, but its best performance is achieved at different ŒªùúÜ\\\\lambdas, equal to 2 and 1 for SDXL and FLUX respectively, which is in turn not consistent with the best ŒªùúÜ\\\\lambda found in LLM experiments. A closer look at images generated with ITI-c for best ŒªùúÜ\\\\lambda in [Figures5](https://ar5iv.org/html/2410.23054#S5.F5 \"In Setup. ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and [J.3](https://ar5iv.org/html/2410.23054#A10.SS3 \"J.3 Style Control ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") reveals that ITI tends to exaggerate style traits while distorting the semantics. This further highlights the reliability of AcT across different modalities, tasks, and models. While quantitatively AcT and ITI-c perform well, we invite the reader to compare the quality of the generated images and styles in [Figures1](https://ar5iv.org/html/2410.23054#S0.F1 \"In Controlling Language and Diffusion Models by Transporting Activations\") and [5](https://ar5iv.org/html/2410.23054#S5.F5 \"Figure 5 ‚Ä£ Setup. ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), and in more examples in [SectionJ.3](https://ar5iv.org/html/2410.23054#A10.SS3 \"J.3 Style Control ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x6.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x7.png)\n\n(a) Style control\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x8.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x9.png)\n\n(b) Concept Negation\n\nFigure 6: Style control (a) and concept negation (b) on SDXL and FLUX. Top row shows the fraction of generated images classified (CLIP 0-shot) as containing a given concept or style. Bottom row shows how much the intervened model deviates from the unmodified one in terms of ClipScore between the image and the original unconditional prompt. Points inside the gray area represent images that have lost their semantic content.![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/linear_ot-incr_pink_elephant_none_464397_59_5d794fa58053e6bf4354.png)Figure 7: Concept Negation for ‚ÄúA plate of food with rice and beans, broccoli and meat. And a pink elephant is missing.‚Äù. (a) Linear-AcT on SDXL with transport strength ŒªùúÜ\\\\lambda linearly increasing from 0 to 1. Note how the presence of the pink elephant is prominent for the original model (leftmost image) and gradually disappears as ŒªùúÜ\\\\lambda increases.\n\n### 5.2 Concept Negation\n\nT2I diffusion models are known for struggling with concept negation ( [Li et al.,](https://ar5iv.org/html/2410.23054#bib.bib23 \"\"); Hwang et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib17 \"\")). For example, Hwang et al. ( [2024](https://ar5iv.org/html/2410.23054#bib.bib17 \"\")) showed that recent models such as Stable Diffusion (Rombach et al., [2022](https://ar5iv.org/html/2410.23054#bib.bib37 \"\")) and DALL-E 3 (Betker et al., [2023](https://ar5iv.org/html/2410.23054#bib.bib1 \"\")) are prone to generate a pink elephant when instructed not to generate one. To improve controllability, some T2I generators like SDXL include a negative prompt mechanism to remove concepts from the generated images.\nHowever, we found that both SDXL (CLIP encoder + negative prompt) and FLUX (T5-XXL encoder) still tend to generate unwanted concepts (see some examples in [SectionJ.2](https://ar5iv.org/html/2410.23054#A10.SS2 \"J.2 Negative prompting ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")).\n\nWe use the COCO Captions (Chen et al., [2015](https://ar5iv.org/html/2410.23054#bib.bib5 \"\")) training set to sample 2048 prompts used to generate the images. To create a source and target activation distribution to estimate AcT, we ask Llama3-8B-instruct to generate a diverse set of prompt modifiers requiring the model to include the following concepts: pink elephant, white bear, and gorilla. The exact phrasing of the modifiers is provided in [Table14](https://ar5iv.org/html/2410.23054#A10.T14 \"In J.7 Concept prompts ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").\nWe estimate our transport maps from the modified prompts (pùëùp, with concept) to the unmodified prompts (qùëûq).\nTo evaluate the model, we sample 512 captions the COCO Captions validation set and ask Llama-3B-instruct to negate each of the modifiers used before (e.g., ‚Äúwithout a pink elephant‚Äù, ‚Äúa gorilla cannot be seen anywhere‚Äù) to generate images with unintended concept spillage such as the leftmost image in [Figure7](https://ar5iv.org/html/2410.23054#S5.F7 \"In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") or the examples in [Figures17](https://ar5iv.org/html/2410.23054#A10.F17 \"In J.2 Negative prompting ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and [18](https://ar5iv.org/html/2410.23054#A10.F18 \"Figure 18 ‚Ä£ J.2 Negative prompting ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").\n\nLinear-AcT is a robust method for concept negation in text-to-image generation.\n\nIn [Figure5(b)](https://ar5iv.org/html/2410.23054#S5.F5.sf2 \"In Figure 6 ‚Ä£ 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), we observe that AcT is more effective at concept negation than ITI-c while better preserving the original semantics of the image, as indicated by the drop in 0-shot concept score for higher CLIPScore than ITI-c. ITI requires a stronger intervention to reduce the presence of the undesired concept, at the cost of losing the whole semantic content, hence the drop in the Relative ClipScore. Additional examples and images for each concept can be found in [SectionJ.4](https://ar5iv.org/html/2410.23054#A10.SS4 \"J.4 Concept negation ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").\n\n## 6 Limitations and Discussion\n\nIn this work, we introduce Activation Transport (AcT), a general framework to achieve intuitive and fine-grained control of GMs. Our approach is based on optimal transport theory, effectively mapping activations from a source to a target distribution by preserving the latter, and unifies many previous activation steering works.\nWe show experimentally that our Linear-AcT approach generalizes well across models and tasks, for both LLMs and T2I architectures. Moreover, AcT provides a robust parameter to control the amount of conditioning, bounded between 0 and 1, which makes it user-friendly and interpretable.\n\nWhile effective, Linear-AcT assumes a linear transport between i.i.d. activations, which are simplifications adopted for compute and memory reasons. Additionally, the map estimation purely depends on the samples used, thus being limited by their expressiveness. In future work, we plan on exploring non-linear maps and joint activations distributions.\n\n## Ethics Statement\n\nOur method could theoretically be used to mitigate or induce the presence of any concept. Therefore, it could eventually lead to the development of censorship or misinformation tools.\n\nWhile our work can be used to align in pre-trained GMs, it should not be taken as a reason not to pursue the adoption of clean data and additional alignment strategies during the pre-training phase.\n\n## Reproducibility Statement\n\nWe will make our code and data publicly available on github. To aid reproducibility, all tables contain the best ŒªùúÜ\\\\lambda found through grid-search and results are averaged over 5 runs. We include additional details on the intervened layers in [AppendixB](https://ar5iv.org/html/2410.23054#A2 \"Appendix B Intervened Layers ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), ablations on the effect of transport support in [AppendixD](https://ar5iv.org/html/2410.23054#A4 \"Appendix D The Effect of the Transport Support ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), the exact prompt templates of LLM as a judge in [AppendicesE](https://ar5iv.org/html/2410.23054#A5 \"Appendix E 0-shot toxicity classification ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and [F](https://ar5iv.org/html/2410.23054#A6 \"Appendix F 0-shot concept presence classification ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), experimental details on TruthfulQA in [AppendixI](https://ar5iv.org/html/2410.23054#A9 \"Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), as well as experimental details for T2I models in [AppendixJ](https://ar5iv.org/html/2410.23054#A10 \"Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").\n\n## Acknowledgements\n\nWe thank Miguel A. Bautista, Federico Danieli, Gerard G√°llego, Yu-Guan Hsieh, Miguel Sarabia, Federico Scozzafava, and Barry Theobald (in alphabetical order) for their helpful feedback and critical discussions throughout the process of writing this paper. We would also like to thank Aswathy Balagopalan for contributing to the codebase, and Jerremy Holland for supporting this work.\n\n## References\n\n- Betker et al. (2023)\nJames Betker, Gabriel Goh, Li Jing, Tim Brooks, Jianfeng Wang, Linjie Li, Long Ouyang, Juntang Zhuang, Joyce Lee, Yufei Guo, et al.\n\nImproving image generation with better captions.\n\n_Computer Science._, 2(3):8, 2023.\n\n- Brack et al. (2022)\nManuel Brack, Patrick Schramowski, Felix Friedrich, Dominik Hintersdorf, and Kristian Kersting.\n\nThe stable artist: Steering semantics in diffusion latent space.\n\n_arXiv preprint arXiv:2212.06013_, 2022.\n\n- Brown et al. (2020)\nTom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, et al.\n\nLanguage models are few-shot learners.\n\n_Advances in neural information processing systems_, 33:1877‚Äì1901, 2020.\n\n- Cao et al. (2024)\nPu Cao, Feng Zhou, Qing Song, and Lu Yang.\n\nControllable generation with text-to-image diffusion models: A survey.\n\n_arXiv preprint arXiv:2403.04279_, 2024.\n\n- Chen et al. (2015)\nXinlei Chen, Hao Fang, Tsung-Yi Lin, Ramakrishna Vedantam, Saurabh Gupta, Piotr Doll√°r, and C Lawrence Zitnick.\n\nMicrosoft coco captions: Data collection and evaluation server.\n\n_arXiv preprint arXiv:1504.00325_, 2015.\n\n- Clark et al. (2023)\nKevin Clark, Paul Vicol, Kevin Swersky, and David J Fleet.\n\nDirectly fine-tuning diffusion models on differentiable rewards.\n\n_arXiv preprint arXiv:2309.17400_, 2023.\n\n- Dekoninck et al. (2023)\nJasper Dekoninck, Marc Fischer, Luca Beurer-Kellner, and Martin Vechev.\n\nControlled text generation via language model arithmetic.\n\n_arXiv preprint arXiv:2311.14479_, 2023.\n\n- Dubey et al. (2024)\nAbhimanyu Dubey, Abhinav Jauhri, Abhinav Pandey, Abhishek Kadian, Ahmad Al-Dahle, Aiesha Letman, Akhil Mathur, Alan Schelten, Amy Yang, Angela Fan, et al.\n\nThe llama 3 herd of models.\n\n_arXiv preprint arXiv:2407.21783_, 2024.\n\n- Esser et al. (2024)\nPatrick Esser, Sumith Kulal, Andreas Blattmann, Rahim Entezari, Jonas M√ºller, Harry Saini, Yam Levi, Dominik Lorenz, Axel Sauer, Frederic Boesel, et al.\n\nScaling rectified flow transformers for high-resolution image synthesis.\n\nIn _Forty-first International Conference on Machine Learning_, 2024.\n\n- Fellbaum (1998)\nC. Fellbaum.\n\n_WordNet: An Electronic Lexical Database_.\n\nLanguage, Speech and Communication. Mit Press, 1998.\n\n- Gandikota et al. (2023)\nRohit Gandikota, Joanna Materzynska, Tingrui Zhou, Antonio Torralba, and David Bau.\n\nConcept sliders: Lora adaptors for precise control in diffusion models.\n\n_arXiv preprint arXiv:2311.12092_, 2023.\n\n- Gehman et al. (2020)\nSamuel Gehman, Suchin Gururangan, Maarten Sap, Yejin Choi, and Noah A Smith.\n\nRealtoxicityprompts: Evaluating neural toxic degeneration in language models.\n\n_arXiv preprint arXiv:2009.11462_, 2020.\n\n- Hendrycks et al. (2021)\nDan Hendrycks, Collin Burns, Steven Basart, Andy Zou, Mantas Mazeika, Dawn Song, and Jacob Steinhardt.\n\nMeasuring massive multitask language understanding.\n\n_Proceedings of the International Conference on Learning Representations (ICLR)_, 2021.\n\n- Hessel et al. (2021)\nJack Hessel, Ari Holtzman, Maxwell Forbes, Ronan Le Bras, and Yejin Choi.\n\nClipscore: A reference-free evaluation metric for image captioning.\n\nIn _Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing_, pp.  7514‚Äì7528, 2021.\n\n- Houlsby et al. (2019)\nNeil Houlsby, Andrei Giurgiu, Stanislaw Jastrzebski, Bruna Morrone, Quentin De Laroussilhe, Andrea Gesmundo, Mona Attariyan, and Sylvain Gelly.\n\nParameter-efficient transfer learning for nlp.\n\nIn _International conference on machine learning_, pp.  2790‚Äì2799. PMLR, 2019.\n\n- Huu-Tien et al. (2024)\nDang Huu-Tien, Trung-Tin Pham, Hoang Thanh-Tung, and Naoya Inoue.\n\nOn effects of steering latent representation for large language model unlearning.\n\n_arXiv preprint arXiv:2408.06223_, 2024.\n\n- Hwang et al. (2024)\nKyomin Hwang, Suyoung Kim, JunHoo Lee, and Nojun Kwak.\n\nDo not think pink elephant!\n\n_arXiv preprint arXiv:2404.15154_, 2024.\n\n- Jiang et al. (2023)\nAlbert Q Jiang, Alexandre Sablayrolles, Arthur Mensch, Chris Bamford, Devendra Singh Chaplot, Diego de las Casas, Florian Bressand, Gianna Lengyel, Guillaume Lample, Lucile Saulnier, et al.\n\nMistral 7b.\n\n_arXiv preprint arXiv:2310.06825_, 2023.\n\n- Jiang et al. (2024)\nZeyinzi Jiang, Chaojie Mao, Yulin Pan, Zhen Han, and Jingfeng Zhang.\n\nScedit: Efficient and controllable image diffusion generation via skip connection editing.\n\nIn _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pp.  8995‚Äì9004, 2024.\n\n- Kotha et al. (2024)\nSuhas Kotha, Jacob Mitchell Springer, and Aditi Raghunathan.\n\nUnderstanding catastrophic forgetting in language models via implicit inference.\n\n2024.\n\n- Lee et al. (2024)\nKyungmin Lee, Sangkyung Kwak, Kihyuk Sohn, and Jinwoo Shin.\n\nDirect consistency optimization for compositional text-to-image personalization.\n\n_arXiv preprint arXiv:2402.12004_, 2024.\n\n- Li et al. (2024)\nKenneth Li, Oam Patel, Fernanda Vi√©gas, Hanspeter Pfister, and Martin Wattenberg.\n\nInference-time intervention: Eliciting truthful answers from a language model.\n\n_Advances in Neural Information Processing Systems_, 36, 2024.\n\n- (23)\nSenmao Li, Joost van de Weijer, Fahad Khan, Qibin Hou, Yaxing Wang, et al.\n\nGet what you want, not what you don‚Äôt: Image content suppression for text-to-image diffusion models.\n\nIn _The Twelfth International Conference on Learning Representations_.\n\n- Lin et al. (2024)\nShanchuan Lin, Anran Wang, and Xiao Yang.\n\nSdxl-lightning: Progressive adversarial diffusion distillation.\n\n_arXiv e-prints_, pp.  arXiv‚Äì2402, 2024.\n\n- Lin et al. (2021)\nStephanie Lin, Jacob Hilton, and Owain Evans.\n\nTruthfulqa: Measuring how models mimic human falsehoods.\n\n_arXiv preprint arXiv:2109.07958_, 2021.\n\n- Luo et al. (2023)\nYun Luo, Zhen Yang, Fandong Meng, Yafu Li, Jie Zhou, and Yue Zhang.\n\nAn empirical study of catastrophic forgetting in large language models during continual fine-tuning, 2023.\n\n- McCann (1997)\nRobert J McCann.\n\nA convexity principle for interacting gases.\n\n_Advances in mathematics_, 128(1):153‚Äì179, 1997.\n\n- Mou et al. (2024)\nChong Mou, Xintao Wang, Liangbin Xie, Yanze Wu, Jian Zhang, Zhongang Qi, and Ying Shan.\n\nT2i-adapter: Learning adapters to dig out more controllable ability for text-to-image diffusion models.\n\nIn _Proceedings of the AAAI Conference on Artificial Intelligence_, volume 38, pp.  4296‚Äì4304, 2024.\n\n- Nair et al. (2023)\nNithin Gopalakrishnan Nair, Anoop Cherian, Suhas Lohit, Ye Wang, Toshiaki Koike-Akino, Vishal M Patel, and Tim K Marks.\n\nSteered diffusion: A generalized framework for plug-and-play conditional image synthesis.\n\nIn _Proceedings of the IEEE/CVF International Conference on Computer Vision_, pp.  20850‚Äì20860, 2023.\n\n- Ouyang et al. (2022)\nLong Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida, Carroll Wainwright, Pamela Mishkin, Chong Zhang, Sandhini Agarwal, Katarina Slama, Alex Ray, et al.\n\nTraining language models to follow instructions with human feedback.\n\n_Advances in Neural Information Processing Systems_, 35:27730‚Äì27744, 2022.\n\n- Peyr√© & Cuturi (2019)\nGabriel Peyr√© and Marco Cuturi.\n\nComputational Optimal Transport.\n\n_Foundations and Trends in Machine Learning_, 11(5-6), 2019.\n\nISSN 1935-8245.\n\n- (32)\nDustin Podell, Zion English, Kyle Lacey, Andreas Blattmann, Tim Dockhorn, Jonas M√ºller, Joe Penna, and Robin Rombach.\n\nSdxl: Improving latent diffusion models for high-resolution image synthesis.\n\nIn _The Twelfth International Conference on Learning Representations_.\n\n- Radford et al. (2017)\nAlec Radford, Rafal Jozefowicz, and Ilya Sutskever.\n\nLearning to generate reviews and discovering sentiment.\n\n_arXiv preprint arXiv:1704.01444_, 2017.\n\n- Raffel et al. (2020)\nColin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, and Peter J Liu.\n\nExploring the limits of transfer learning with a unified text-to-text transformer.\n\n_The Journal of Machine Learning Research_, 21(1):5485‚Äì5551, 2020.\n\n- Rahn et al. (2024)\nNate Rahn, Pierluca D‚ÄôOro, and Marc G Bellemare.\n\nControlling large language model agents with entropic activation steering.\n\n_arXiv preprint arXiv:2406.00244_, 2024.\n\n- Rimsky et al. (2023)\nNina Rimsky, Nick Gabrieli, Julian Schulz, Meg Tong, Evan Hubinger, and Alexander Matt Turner.\n\nSteering llama 2 via contrastive activation addition.\n\n_arXiv preprint arXiv:2312.06681_, 2023.\n\n- Rombach et al. (2022)\nRobin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj√∂rn Ommer.\n\nHigh-resolution image synthesis with latent diffusion models.\n\nIn _Proceedings of the IEEE/CVF conference on computer vision and pattern recognition_, pp.  10684‚Äì10695, 2022.\n\n- Ruiz et al. (2023)\nNataniel Ruiz, Yuanzhen Li, Varun Jampani, Yael Pritch, Michael Rubinstein, and Kfir Aberman.\n\nDreambooth: Fine tuning text-to-image diffusion models for subject-driven generation.\n\nIn _Proceedings of the IEEE/CVF conference on computer vision and pattern recognition_, pp.  22500‚Äì22510, 2023.\n\n- Santambrogio (2015)\nFilippo Santambrogio.\n\nOptimal transport for applied mathematicians.\n\n_Birk√§user, NY_, 55(58-63):94, 2015.\n\n- Scarlini et al. (2019)\nBianca Scarlini, Tommaso Pasini, and Roberto Navigli.\n\nJust ‚Äúonesec‚Äù for producing multilingual sense-annotated data.\n\npp.  699‚Äì709, 01 2019.\n\ndoi: 10.18653/v1/P19-1069.\n\n- Sclar et al. (2024)\nMelanie Sclar, Yejin Choi, Yulia Tsvetkov, and Alane Suhr.\n\nQuantifying language models‚Äô sensitivity to spurious features in prompt design or: How i learned to start worrying about prompt formatting.\n\n_ICLR_, 2024.\n\n- Stracke et al. (2024)\nNick Stracke, Stefan Andreas Baumann, Joshua M Susskind, Miguel Angel Bautista, and Bj√∂rn Ommer.\n\nCtrloralter: Conditional loradapter for efficient 0-shot control & altering of t2i models.\n\n_arXiv preprint arXiv:2405.07913_, 2024.\n\n- Suau et al. (2022)\nXavier Suau, Luca Zappella, and Nicholas Apostoloff.\n\nSelf-conditioning pre-trained language models.\n\nIn _International Conference on Machine Learning_, pp.  4455‚Äì4473. PMLR, 2022.\n\n- Suau et al. (2024)\nXavier Suau, Pieter Delobelle, Katherine Metcalf, Armand Joulin, Nicholas Apostoloff, Luca Zappella, and Pau Rodriguez.\n\nWhispering experts: Neural interventions for toxicity mitigation in language models.\n\nIn _Forty-first International Conference on Machine Learning_, 2024.\n\nURL [https://openreview.net/forum?id=2P6GVfSrfZ](https://openreview.net/forum?id=2P6GVfSrfZ \"\").\n\n- Team et al. (2024)\nGemma Team, Morgane Riviere, Shreya Pathak, Pier Giuseppe Sessa, Cassidy Hardin, Surya Bhupatiraju, L√©onard Hussenot, Thomas Mesnard, Bobak Shahriari, Alexandre Ram√©, et al.\n\nGemma 2: Improving open language models at a practical size.\n\n_arXiv preprint arXiv:2408.00118_, 2024.\n\n- Turner et al. (2023)\nAlex Turner, Lisa Thiergart, David Udell, Gavin Leech, Ulisse Mini, and Monte MacDiarmid.\n\nActivation addition: Steering language models without optimization.\n\n_arXiv preprint arXiv:2308.10248_, 2023.\n\n- Vaswani et al. (2017)\nAshish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, ≈Åukasz Kaiser, and Illia Polosukhin.\n\nAttention is all you need.\n\n_Advances in neural information processing systems_, 30, 2017.\n\n- Wallace et al. (2024)\nBram Wallace, Meihua Dang, Rafael Rafailov, Linqi Zhou, Aaron Lou, Senthil Purushwalkam, Stefano Ermon, Caiming Xiong, Shafiq Joty, and Nikhil Naik.\n\nDiffusion model alignment using direct preference optimization.\n\nIn _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pp.  8228‚Äì8238, 2024.\n\n- (49)\nJason Wei, Maarten Bosma, Vincent Zhao, Kelvin Guu, Adams Wei Yu, Brian Lester, Nan Du, Andrew M Dai, and Quoc V Le.\n\nFinetuned language models are zero-shot learners.\n\nIn _International Conference on Learning Representations_.\n\n- Wen et al. (2023)\nJiaxin Wen, Pei Ke, Hao Sun, Zhexin Zhang, Chengfei Li, Jinfeng Bai, and Minlie Huang.\n\nUnveiling the implicit toxicity in large language models.\n\npp.  1322‚Äì1338. Association for Computational Linguistics, December 2023.\n\n- Wu et al. (2024)\nZhengxuan Wu, Aryaman Arora, Zheng Wang, Atticus Geiger, Dan Jurafsky, Christopher D. Manning, and Christopher Potts.\n\nReFT: Representation finetuning for language models.\n\n2024.\n\nURL [arxiv.org/abs/2404.03592](https://ar5iv.org/html/arxiv.org/abs/2404.03592 \"\").\n\n- Yang et al. (2024)\nKai Yang, Jian Tao, Jiafei Lyu, Chunjiang Ge, Jiaxin Chen, Weihan Shen, Xiaolong Zhu, and Xiu Li.\n\nUsing human feedback to fine-tune diffusion models without any reward model.\n\nIn _Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition_, pp.  8941‚Äì8951, 2024.\n\n- Ye et al. (2023)\nHu Ye, Jun Zhang, Sibo Liu, Xiao Han, and Wei Yang.\n\nIp-adapter: Text compatible image prompt adapter for text-to-image diffusion models.\n\n_arXiv preprint arXiv:2308.06721_, 2023.\n\n- YEH et al. (2024)\nSHIH-YING YEH, Yu-Guan Hsieh, Zhidong Gao, Bernard B W Yang, Giyeong Oh, and Yanmin Gong.\n\nNavigating text-to-image customization: From lyCORIS fine-tuning to model evaluation.\n\nIn _The Twelfth International Conference on Learning Representations_, 2024.\n\nURL [https://openreview.net/forum?id=wfzXa8e783](https://openreview.net/forum?id=wfzXa8e783 \"\").\n\n- Zhao et al. (2024)\nShihao Zhao, Dongdong Chen, Yen-Chun Chen, Jianmin Bao, Shaozhe Hao, Lu Yuan, and Kwan-Yee K Wong.\n\nUni-controlnet: All-in-one control to text-to-image diffusion models.\n\n_Advances in Neural Information Processing Systems_, 36, 2024.\n\n- Zheng et al. (2023)\nLianmin Zheng, Wei-Lin Chiang, Ying Sheng, Siyuan Zhuang, Zhanghao Wu, Yonghao Zhuang, Zi Lin, Zhuohan Li, Dacheng Li, Eric Xing, et al.\n\nJudging llm-as-a-judge with mt-bench and chatbot arena.\n\n_Advances in Neural Information Processing Systems_, 36:46595‚Äì46623, 2023.\n\n- Zou et al. (2023)\nAndy Zou, Long Phan, Sarah Chen, James Campbell, Phillip Guo, Richard Ren, Alexander Pan, Xuwang Yin, Mantas Mazeika, Ann-Kathrin Dombrowski, et al.\n\nRepresentation engineering: A top-down approach to ai transparency.\n\n_arXiv preprint arXiv:2310.01405_, 2023.\n\n\n## Appendix A Memory and Computational Aspects\n\nLinear-AcT requires storing 2 floats (œâ,Œ≤ùúîùõΩ\\\\omega,\\\\beta) per activation intervened. For example, Linear-AcT on post-LN layers of Gemma2-2B requires (2√ó52‚Äã layers√ó2304‚Äã activations√ó4‚Äã bytes)=0.91‚Äã Mb252 layers2304 activations4 bytes0.91 Mb(2\\\\times 52\\\\text{ layers}\\\\times 2304\\\\text{ activations}\\\\times 4\\\\text{ bytes})=0.91\\\\text{ Mb}. If we choose to use the support transport, 2 more floats per activation are stored ùí¨o=\\[min‚Å°A,max‚Å°A\\]subscriptùí¨ùëúùê¥ùê¥\\\\mathcal{Q}\\_{o}=\\[\\\\min A,\\\\max A\\], which means an extra 0.91‚Äã Mb0.91 Mb0.91\\\\text{ Mb} for the Gemma2-2B example. In terms of compute, Linear-AcT requires an extra element-wise product and sum per intervened layer. However, the inference cost of such operations is of second order compared to the overall LLM inference cost.\n\nOne has the option to fix ŒªùúÜ\\\\lambda. If so, our Linear-AcT formulation in [Definition3.1](https://ar5iv.org/html/2410.23054#S3.Thmdefinition1 \"Definition 3.1 (Linear-AcT) ‚Ä£ 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") becomes Tl‚Äãi‚Äãn‚Äã(a)=(Œª‚Äã(œâ‚àí1)+1)‚Äãa+Œª‚ÄãŒ≤=œâ~‚Äãa+Œª‚ÄãŒ≤superscriptùëáùëôùëñùëõùëéùúÜùúî11ùëéùúÜùõΩ~ùúîùëéùúÜùõΩT^{lin}(a)=\\\\big{(}\\\\lambda(\\\\omega-1)+1\\\\big{)}a+\\\\lambda\\\\beta=\\\\tilde{\\\\omega}a+\\\\lambda\\\\beta. Assuming we intervene after a linear layer Œ≥‚Äãa+Œ¥ùõæùëéùõø\\\\gamma a+\\\\delta, we compose both functions as (Tl‚Äãi‚Äãn‚àòf)‚Äã(a)=œâ~‚ÄãŒ≥‚Äãa+(œâ~‚ÄãŒ¥+Œª‚ÄãŒ≤)superscriptùëáùëôùëñùëõùëìùëé~ùúîùõæùëé~ùúîùõøùúÜùõΩ(T^{lin}\\\\circ f)(a)=\\\\tilde{\\\\omega}\\\\gamma a+(\\\\tilde{\\\\omega}\\\\delta+\\\\lambda\\\\beta), which is also a linear map whose parameters can replace those of fùëìf in the computational graph, without any extra cost at inference time. The memory cost is 00 if we fix ŒªùúÜ\\\\lambda and compose Linear-AcT with the model linear layers.\n\n## Appendix B Intervened Layers\n\ninputPre-LNAttentionPost-LN+Pre-LNMLPPost-LN+outputGemma2-2BFigure 8: Schema of a Transformer block of Gemma2-2B with the layer names as referenced in this work. Note that Llama3-8B has a similar structure without the Post-LN layers.\n\n## Appendix C Causal vs. Simultaneous Estimation of AcT\n\nIn [Table4](https://ar5iv.org/html/2410.23054#A3.T4 \"In Appendix C Causal vs. Simultaneous Estimation of AcT ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and [Table5](https://ar5iv.org/html/2410.23054#A3.T5 \"In Appendix C Causal vs. Simultaneous Estimation of AcT ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") we compare the estimation of AcT interventions in a causal and simultaneous way (see [Section3.1](https://ar5iv.org/html/2410.23054#S3.SS1 \"3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). We observe that causal estimations show better toxicity mitigation than its simultaneous counterparts.\n\nTable 4: Causal (gray background) vs. simultaneous estimation of AcT on Gemma2-2B in a toxicity mitigation setting (explained in [Section4.1](https://ar5iv.org/html/2410.23054#S4.SS1 \"4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). Causal estimation provides better conditioning (lower toxicity).\n\n|  | Causal | Layer | Best ŒªùúÜ\\\\lambda | PPL Wikipedia ‚Üì‚Üì\\\\downarrow | PPL Mistral-7B ‚Üì‚Üì\\\\downarrow | CLS Toxicity (%) ‚Üì‚Üì\\\\downarrow | 0-shot Toxicity (%) ‚Üì‚Üì\\\\downarrow |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| Original | - | - | - | 13.98 | 6.62 | 4.08¬±0.36plus-or-minus4.080.364.08\\\\pm{0.36} | 13.25¬±0.88plus-or-minus13.250.8813.25\\\\pm{0.88} |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| Mean-AcT |  | Attention | 1.0 | 13.90 | 7.23 (+0.61) | 1.12¬±0.35plus-or-minus1.120.351.12\\\\pm{0.35} | 5.60¬±1.01plus-or-minus5.601.015.60\\\\pm{1.01} |\n| Mean-AcT | ‚úì | Attention | 1.0 | 14.08 (+0.11) | 7.23 (+0.61) | 1.06¬±0.17plus-or-minus1.060.171.06\\\\pm{0.17} | 5.14¬±0.50plus-or-minus5.140.505.14\\\\pm{0.50} |\n| Linear-AcT |  | Attention | 1.0 | 14.04 (+0.06) | 7.26 (+0.64) | 0.97¬±0.39plus-or-minus0.970.390.97\\\\pm{0.39} | 5.75¬±0.90plus-or-minus5.750.905.75\\\\pm{0.90} |\n| Linear-AcT | ‚úì | Attention | 1.0 | 14.21 (+0.23) | 7.24 (+0.62) | 0.90¬±0.33plus-or-minus0.900.330.90\\\\pm{0.33} | 5.06¬±0.63plus-or-minus5.060.635.06\\\\pm{0.63} |\n| Mean-AcT |  | Post-LN | 1.0 | 14.11 (+0.13) | 7.71 (+1.09) | 0.62¬±0.05plus-or-minus0.620.050.62\\\\pm{0.05} | 4.47¬±0.65plus-or-minus4.470.654.47\\\\pm{0.65} |\n| Mean-AcT | ‚úì | Post-LN | 1.0 | 14.21 (+0.23) | 7.59 (+0.97) | 0.54¬±0.44plus-or-minus0.540.440.54\\\\pm{0.44} | 4.10¬±0.41plus-or-minus4.100.414.10\\\\pm{0.41} |\n| Linear-AcT |  | Post-LN | 0.9 | 14.54 (+0.57) | 7.87 (+1.25) | 0.65¬±0.17plus-or-minus0.650.170.65\\\\pm{0.17} | 4.40¬±0.39plus-or-minus4.400.394.40\\\\pm{0.39} |\n| Linear-AcT | ‚úì | Post-LN | 1.0 | 14.79 (+0.81) | 7.99 (+1.37) | 0.56¬±0.21plus-or-minus0.560.210.56\\\\pm{0.21} | 4.14¬±0.55plus-or-minus4.140.554.14\\\\pm{0.55} |\n\nTable 5: Causal (gray background) vs. simultaneous estimation of AcT on Llama3-8B in a toxicity mitigation setting (see [Section4.1](https://ar5iv.org/html/2410.23054#S4.SS1 \"4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). Causal estimation provides better conditioning (lower toxicity).\n\n|  | Causal | Layer | Best ŒªùúÜ\\\\lambda | PPL Wikipedia ‚Üì‚Üì\\\\downarrow | PPL Mistral-7B ‚Üì‚Üì\\\\downarrow | CLS Toxicity (%) ‚Üì‚Üì\\\\downarrow | 0-shot Toxicity (%) ‚Üì‚Üì\\\\downarrow |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| Original | - | - | - | 9.06 | 5.68 | 5.805.805.80 | 15.0015.0015.00 |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| Mean-AcT |  | Attention | 1.0 | 9.35 (+0.28) | 6.33 (+0.65) | 1.40¬±0.29plus-or-minus1.400.291.40\\\\pm{0.29} | 6.73¬±1.13plus-or-minus6.731.136.73\\\\pm{1.13} |\n| Mean-AcT | ‚úì | Attention | 1.0 | 9.56 (+0.49) | 6.36 (+0.68) | 1.38¬±0.17plus-or-minus1.380.171.38\\\\pm{0.17} | 5.60¬±0.34plus-or-minus5.600.345.60\\\\pm{0.34} |\n| Linear-AcT |  | Attention | 1.0 | 9.38 (+0.32) | 6.27 (+0.58) | 1.38¬±0.24plus-or-minus1.380.241.38\\\\pm{0.24} | 6.55¬±0.75plus-or-minus6.550.756.55\\\\pm{0.75} |\n| Linear-AcT | ‚úì | Attention | 1.0 | 9.56 (+0.49) | 6.28 (+0.60) | 1.35¬±0.39plus-or-minus1.350.391.35\\\\pm{0.39} | 6.68¬±0.81plus-or-minus6.680.816.68\\\\pm{0.81} |\n\n## Appendix D The Effect of the Transport Support\n\nIn this section we validate the choice of transport support, as a way to make the proposed intervention more robust. In this experiment, we sweep different supports by narrowing the quantiles (qt) of the input data set Aùê¥A, in the setting of toxicity mitigation (as in [Section4.1](https://ar5iv.org/html/2410.23054#S4.SS1 \"4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), both for Mean-AcT and Linear-AcT. The supports tested are:\n\\[qt40,qt60\\],\\[qt30,qt70\\],\\[qt20,qt80\\],\\[qt10,qt90\\],\\[qt5,qt95\\],\\[qt3,qt97\\],\\[qt1,qt99\\],\\[qt0,qt100\\]subscriptqt40subscriptqt60subscriptqt30subscriptqt70subscriptqt20subscriptqt80subscriptqt10subscriptqt90subscriptqt5subscriptqt95subscriptqt3subscriptqt97subscriptqt1subscriptqt99subscriptqt0subscriptqt100\\[\\\\text{qt}\\_{40},\\\\text{qt}\\_{60}\\],\\[\\\\text{qt}\\_{30},\\\\text{qt}\\_{70}\\],\\[\\\\text{qt}\\_{20},\\\\text{qt}\\_{80}\\],\\[\\\\text{qt}\\_{10},\\\\text{qt}\\_{90}\\],\\[\\\\text{qt}\\_{5},\\\\text{qt}\\_{95}\\],\\[\\\\text{qt}\\_{3},\\\\text{qt}\\_{97}\\],\\[\\\\text{qt}\\_{1},\\\\text{qt}\\_{99}\\],\\[\\\\text{qt}\\_{0},\\\\text{qt}\\_{100}\\] and (‚àí‚àû,‚àû)({-\\\\infty},{\\\\infty}).\n\nNote that \\[qt0,qt100\\]=ùí¨osubscriptqt0subscriptqt100subscriptùí¨ùëú\\[\\\\text{qt}\\_{0},\\\\text{qt}\\_{100}\\]=\\\\mathcal{Q}\\_{o}, as defined in [Section3.1](https://ar5iv.org/html/2410.23054#S3.SS1.SSS0.Px1 \"Transport Support ‚Ä£ 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). We show the results of this sweep in [Figure9](https://ar5iv.org/html/2410.23054#A4.F9 \"In Appendix D The Effect of the Transport Support ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), where we observe that \\[qt0,qt100\\]subscriptqt0subscriptqt100\\[\\\\text{qt}\\_{0},\\\\text{qt}\\_{100}\\] offers a good trade-off between conditioning strength and acceptable increase in PPL (below +1 points with respect to the original model).\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x10.png)Figure 9: We measure toxicity mitigation on Gemma2-2B by increasingly expanding the transport support from \\[qt40,qt60\\]subscriptqt40subscriptqt60\\[\\\\text{qt}\\_{40},\\\\text{qt}\\_{60}\\] on the farther right of the plots to \\[qt0,qt100\\]=\\[min‚Å°A,max‚Å°A\\]subscriptqt0subscriptqt100ùê¥ùê¥\\[\\\\text{qt}\\_{0},\\\\text{qt}\\_{100}\\]=\\[\\\\min A,\\\\max A\\], which means the support spanned by all the samples in Aùê¥A. For completeness, we add the full real support (‚àí‚àû,‚àû)({-\\\\infty},{\\\\infty}). For Linear-AcT, using \\[qt0,qt100\\]subscriptqt0subscriptqt100\\[\\\\text{qt}\\_{0},\\\\text{qt}\\_{100}\\] achieve the best toxicity mitigation by incurring less than +11+1 increase in PPL. Note that (‚àí‚àû,‚àû)({-\\\\infty},{\\\\infty}) results in higher PPL.\n\n## Appendix E 0-shot toxicity classification\n\nWe query Llama3-8B-instruct with the system prompt below, where \\[SENTENCE\\] contains the sentence to be assessed in 0-shot manner.\n\n> \"You are a highly accurate toxicity classification model. Your task is to determine if a given sentence contains toxic content. You will output ‚Äôyes‚Äô only if the sentence is toxic and ‚Äôno‚Äô if the sentence is neutral or non toxic.\\\\n \\[SENTENCE\\]\"\n\nThen, we measure the toxicity probability as c‚Äão‚Äãu‚Äãn‚Äãt‚Äã(y‚Äãe‚Äãs)c‚Äão‚Äãu‚Äãn‚Äãt‚Äã(y‚Äãe‚Äãs)+c‚Äão‚Äãu‚Äãn‚Äãt‚Äã(n‚Äão)ùëêùëúùë¢ùëõùë°ùë¶ùëíùë†ùëêùëúùë¢ùëõùë°ùë¶ùëíùë†ùëêùëúùë¢ùëõùë°ùëõùëú\\\\frac{count(yes)}{count(yes)+count(no)}, reported as 0-shot toxicity in [Sections4.1](https://ar5iv.org/html/2410.23054#S4.SS1 \"4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), [7](https://ar5iv.org/html/2410.23054#A7.T7 \"Table 7 ‚Ä£ Appendix G Extended Results on Toxicity Mitigation ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and [6](https://ar5iv.org/html/2410.23054#A7.T6 \"Table 6 ‚Ä£ Appendix G Extended Results on Toxicity Mitigation ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). Note that we use the logits for tokens y‚Äãe‚Äãsùë¶ùëíùë†yes and n‚Äãoùëõùëúno, so we consider the answer to be positive when l‚Äão‚Äãg‚Äãi‚Äãt‚Äã(y‚Äãe‚Äãs)>l‚Äão‚Äãg‚Äãi‚Äãt‚Äã(n‚Äão)ùëôùëúùëîùëñùë°ùë¶ùëíùë†ùëôùëúùëîùëñùë°ùëõùëúlogit(yes)>logit(no).\n\n## Appendix F 0-shot concept presence classification\n\nWe query Llama3-8B-instruct with the system prompt template below.\n\n> \"You are a chatbot who answers whether the provided sentence is referring to \\[CONCEPT\\] defined as \\[WORDNET\\_DEF\\]. Note that the sentence might not contain the word \\[CONCEPT\\], but may just be referencing concept as defined.\\\\n \\[SENTENCE\\]\".\n\nWhere:\n\n- ‚Ä¢\n\n\n\\[CONCEPT\\] can be {football, cloud, baby, church, book, flower, balloon}.\n\n- ‚Ä¢\n\n\n\\[WORDNET\\_DEF\\] are taken from WordNet Fellbaum ( [1998](https://ar5iv.org/html/2410.23054#bib.bib10 \"\")):\n\n\n\n- ‚Äì\n\n\nfootball: Any of various games played with a ball (round or oval) in which two teams try to kick or carry the ball into each other‚Äôs goal.\n\n- ‚Äì\n\n\ncloud: A visible mass of water or ice particles suspended at a considerable altitude.\n\n- ‚Äì\n\n\nbaby: A very young child (birth to 1 year) who has not yet begun to walk or talk.\n\n- ‚Äì\n\n\nchurch: A place for public (especially Christian) worship.\n\n- ‚Äì\n\n\nbook: A written work or composition that has been published (printed on pages bound together).\n\n- ‚Äì\n\n\nflower: A plant cultivated for its blooms or blossoms.\n\n- ‚Äì\n\n\nballoon: Large tough nonrigid bag filled with gas or heated air.\n\n\n- ‚Ä¢\n\n\n\\[SENTENCE\\] Contains the sentence to be assessed in 0-shot manner.\n\n\nWe measure the probability of a concept being present as we do with toxicity, explained in [AppendixE](https://ar5iv.org/html/2410.23054#A5 \"Appendix E 0-shot toxicity classification ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").\n\n## Appendix G Extended Results on Toxicity Mitigation\n\nWe report here the full experimental results for toxicity mitigation, which have been summarized in [Section4.1](https://ar5iv.org/html/2410.23054#S4.SS1 \"4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").\nNote the variability in the optimal strength ŒªùúÜ\\\\lambda for ITI-c and ActAdd, which complicates the applicability of these methods on different models and layers.\n\nTable 6: Toxicity mitigation for Gemma2-2B, results over 5 runs. We show results intervening different layers in the model (layer column). ITI-c, ActAdd and AcT have a strength parameter ŒªùúÜ\\\\lambda which we sweep, reporting for each method the best result (best ŒªùúÜ\\\\lambda) in CLS toxicity that incurs less than +11+1 increase in PPL Wikipedia. AcT methods are robust to the choice of layer and provide best results for Œª=1ùúÜ1\\\\lambda=1, achieving up to 7.5√ó7.5\\\\times toxicity mitigation with Linear-AcT. ITI-c is very sensitive to ŒªùúÜ\\\\lambda as well as layer choice, and AurA does not provide a strength control.\n\n|     |     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n|  | Layer | Best ŒªùúÜ\\\\lambda | PPL Wikipedia ‚Üì‚Üì\\\\downarrow | PPL Mistral-7B ‚Üì‚Üì\\\\downarrow | MMLU ‚Üë‚Üë\\\\uparrow | CLS Toxicity (%) ‚Üì‚Üì\\\\downarrow | 0-shot Toxicity (%) ‚Üì‚Üì\\\\downarrow |\n| Original | - | - | 13.98 | 6.68 | 53.1 | 4.17¬±0.32plus-or-minus4.170.324.17\\\\pm{0.32} | 13.42¬±1.08plus-or-minus13.421.0813.42\\\\pm{1.08} |\n| ActAdd | Atention | 0.5 | 13.99 (+0.02) | 6.58 | 53.2 (+0.2) | 4.17¬±0.15plus-or-minus4.170.154.17\\\\pm{0.15} | 13.25¬±1.63plus-or-minus13.251.6313.25\\\\pm{1.63} |\n| ITI-c | Atention | 8.0 | 14.90 (+0.92) | 7.44 (+0.76) | 52.6 (-0.5) | 0.74¬±0.18plus-or-minus0.740.18\\\\mathbf{0.74}\\\\pm{0.18} | 5.36¬±0.91plus-or-minus5.360.915.36\\\\pm{0.91} |\n| Mean-AcT | Atention | 1.0 | 14.08 (+0.11) | 7.23 (+0.55) | 52.5 (-0.6) | 1.06¬±0.17plus-or-minus1.060.171.06\\\\pm{0.17} | 5.14¬Ø¬±0.50plus-or-minus¬Ø5.140.50\\\\underline{5.14}\\\\pm{0.50} |\n| Linear-AcT | Atention | 1.0 | 14.21 (+0.23) | 7.24 (+0.56) | 52.2 (-0.9) | 0.90¬Ø¬±0.33plus-or-minus¬Ø0.900.33\\\\underline{0.90}\\\\pm{0.33} | 5.06¬±0.63plus-or-minus5.060.63\\\\mathbf{5.06}\\\\pm{0.63} |\n| ActAdd | Post-LN | 0.1 | 14.04 (+0.06) | 6.61 | 53.2 (+0.2) | 4.08¬±0.43plus-or-minus4.080.434.08\\\\pm{0.43} | 13.5013.5013.50 |\n| ITI-c | Post-LN | 13.0 | 14.89 (+0.92) | 7.34 (+0.66) | 52.8 (-0.3) | 3.08¬±0.61plus-or-minus3.080.613.08\\\\pm{0.61} | 12.24¬±0.69plus-or-minus12.240.6912.24\\\\pm{0.69} |\n| Mean-AcT | Post-LN | 1.0 | 14.21 (+0.23) | 7.59 (+0.90) | 51.6 (-1.5) | 0.54¬±0.44plus-or-minus0.540.44\\\\mathbf{0.54}\\\\pm{0.44} | 4.10¬±0.41plus-or-minus4.100.41\\\\mathbf{4.10}\\\\pm{0.41} |\n| Linear-AcT | Post-LN | 1.0 | 14.79 (+0.81) | 7.99 (+1.31) | 51.3 (-1.8) | 0.56¬Ø¬±0.21plus-or-minus¬Ø0.560.21\\\\underline{0.56}\\\\pm{0.21} | 4.14¬Ø¬±0.55plus-or-minus¬Ø4.140.55\\\\underline{4.14}\\\\pm{0.55} |\n| AurA | MLP | - | 14.18 (+0.21) | 7.04 (+0.36) | 53.0 (-0.1) | 2.12¬±0.27plus-or-minus2.120.272.12\\\\pm{0.27} | 9.04¬±0.66plus-or-minus9.040.669.04\\\\pm{0.66} |\n| ActAdd | MLP | 0.5 | 14.69 (+0.72) | 6.67 (+0.05) | 53.0 (-0.1) | 3.96¬±0.24plus-or-minus3.960.243.96\\\\pm{0.24} | 13.43¬±1.42plus-or-minus13.431.4213.43\\\\pm{1.42} |\n| ITI-c | MLP | 1.0 | 13.99 (+0.01) | 6.77 (+0.08) | 52.8 (-0.3) | 4.50¬±0.32plus-or-minus4.500.324.50\\\\pm{0.32} | 15.06¬±0.76plus-or-minus15.060.7615.06\\\\pm{0.76} |\n| Mean-AcT | MLP | 1.0 | 14.33 (+0.35) | 7.02 (+0.34) | 52.4 (-0.7) | 1.30¬±0.37plus-or-minus1.300.37\\\\mathbf{1.30}\\\\pm{0.37} | 7.28¬Ø¬±0.88plus-or-minus¬Ø7.280.88\\\\underline{7.28}\\\\pm{0.88} |\n| Linear-AcT | MLP | 1.0 | 14.89 (+0.92) | 7.53 (+0.85) | 51.9 (-1.2) | 1.30¬±0.39plus-or-minus1.300.39\\\\mathbf{1.30}\\\\pm{0.39} | 7.15¬±0.98plus-or-minus7.150.98\\\\mathbf{7.15}\\\\pm{0.98} |\n\nTable 7: Toxicity mitigation for Llama3-8B, results over 5 runs. Similar conclusions as in [Table6](https://ar5iv.org/html/2410.23054#A7.T6 \"In Appendix G Extended Results on Toxicity Mitigation ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") are extracted.\n\n|     |     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n|  | Layer | Best ŒªùúÜ\\\\lambda | PPL Wikipedia ‚Üì‚Üì\\\\downarrow | PPL Mistral-7B ‚Üì‚Üì\\\\downarrow | MMLU ‚Üë‚Üë\\\\uparrow | CLS Toxicity (%) ‚Üì‚Üì\\\\downarrow | 0-shot Toxicity (%) ‚Üì‚Üì\\\\downarrow |\n| Original | - | - | 9.06 | 5.68 | 65.3 | 5.805.805.80 | 15.0015.0015.00 |\n| ActAdd | Atention | 0.3 | 9.71 (+0.65) | 5.85 (+0.16) | 65.5 (+0.2) | 5.57¬±0.45plus-or-minus5.570.455.57\\\\pm{0.45} | 15.73¬±0.21plus-or-minus15.730.2115.73\\\\pm{0.21} |\n| ITI-c | Atention | 3.0 | 9.48 (+0.42) | 6.17 (+0.49) | 64.7 (-0.6) | 1.60¬±0.22plus-or-minus1.600.221.60\\\\pm{0.22} | 6.53¬±0.66plus-or-minus6.530.666.53\\\\pm{0.66} |\n| Mean-AcT | Atention | 1.0 | 9.56 (+0.49) | 6.36 (+0.68) | 64.7 (-0.7) | 1.38¬Ø¬±0.17plus-or-minus¬Ø1.380.17\\\\underline{1.38}\\\\pm{0.17} | 5.60¬±0.34plus-or-minus5.600.345.60\\\\pm{0.34} |\n| Linear-AcT | Atention | 1.0 | 9.56 (+0.49) | 6.28 (+0.60) | 64.5 (-0.8) | 1.35¬±0.39plus-or-minus1.350.39\\\\mathbf{1.35}\\\\pm{0.39} | 6.68¬±0.81plus-or-minus6.680.816.68\\\\pm{0.81} |\n| AurA | MLP | - | 9.52 (+0.45) | 6.05 (+0.37) | 65.5 (+0.2) | 1.90¬±0.61plus-or-minus1.900.61\\\\mathbf{1.90}\\\\pm{0.61} | 8.12¬±0.85plus-or-minus8.120.85\\\\mathbf{8.12}\\\\pm{0.85} |\n| ActAdd | MLP | - | - | - | - | - | - |\n| ITI-c | MLP | 1.0 | 9.09 (+0.03) | 5.79 (+0.11) | 63.5 (-1.9) | 5.62¬±0.96plus-or-minus5.620.965.62\\\\pm{0.96} | 15.48¬±1.16plus-or-minus15.481.1615.48\\\\pm{1.16} |\n| Mean-AcT | MLP | 0.9 | 9.90 (+0.84) | 6.24 (+0.55) | 60.7 (-4.6) | 2.10¬Ø¬±0.48plus-or-minus¬Ø2.100.48\\\\underline{2.10}\\\\pm{0.48} | 10.65¬±1.02plus-or-minus10.651.0210.65\\\\pm{1.02} |\n| Linear-AcT | MLP | 0.8 | 10.06 (+0.99) | 5.98 (+0.29) | 61.9 (-3.4) | 2.23¬±0.53plus-or-minus2.230.53{2.23}\\\\pm{0.53} | 10.27¬Ø¬±0.97plus-or-minus¬Ø10.270.97\\\\underline{10.27}\\\\pm{0.97} |\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x11.png)(a) Gemma2-2B\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x12.png)(b) Gemma2-2B\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x13.png)(c) Llama3-8B\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x14.png)(d) Llama3-8B\n\nFigure 10: AcT achieves the best conditioning at Œª=1ùúÜ1\\\\lambda=1 on Gemma2-2B and Llama3-8B. We show the ŒªùúÜ\\\\lambda sweeps for toxicity mitigation on Gemma2-2B. In gray we show the PPL+1 interval considered to be the maximum loss in PPL we can assume. The bold markers are the results reported in [Section4.1](https://ar5iv.org/html/2410.23054#S4.SS1 \"4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). For clarity, we only show the experiments that yielded best results reported in [Section4.1](https://ar5iv.org/html/2410.23054#S4.SS1 \"4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). The full results are shown in [Table6](https://ar5iv.org/html/2410.23054#A7.T6 \"In Appendix G Extended Results on Toxicity Mitigation ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").\n\n## Appendix H Extended results on concept induction on LLMs\n\n[AppendicesH](https://ar5iv.org/html/2410.23054#A8 \"Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), [H](https://ar5iv.org/html/2410.23054#A8 \"Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and [H](https://ar5iv.org/html/2410.23054#A8 \"Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") contain examples of generated sentences by Gemma2-2B intervened for concept induction with Linear-AcT and ITI-c. These results complement those presented in [Section4.2](https://ar5iv.org/html/2410.23054#S4.SS2 \"4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). Note the more gradual increase of concept with Linear-AcT, reaching strong and consistent conditioning at Œª=1ùúÜ1\\\\lambda=1 with great quality. ITI-c also performs well on concept induction, however the choice of ŒªùúÜ\\\\lambda is less clear. For example, for Œª=10ùúÜ10\\\\lambda=10 it fails for concept Cloud while it works well for Football.\n\nTable 8:\nGenerations at different ŒªùúÜ\\\\lambda inducing concept Football.\n\n{NiceTabular}\nlllp0.8\nConcept Method ŒªùúÜ\\\\lambda Generation\n\nFootball ITI-c0.00.00.0Once upon a time, there was an old man who lived in the forest. He had no family and he spent his days alone collecting mushrooms for food to survive on until one day when someone came along with some money! This person gave him all of their savings so that they could live together forever\n\nFootball ITI-c5.05.05.0Once upon a time, the only way to watch football was on TV.\n\nIt wasn‚Äôt just about watching your team play either ‚Äì it was also about getting together with mates and having an afternoon of footy in front of the telly at home or down at the local club for some beer\n\nFootball ITI-c10.010.010.0Once upon a time, the only way to watch football in Australia was on Saturday afternoon.\n\nAnd it wasn‚Äôs even just for kids and mates at local clubs or schoolboys matches ‚Äì no-one would have ever heard of Aussie Rules Football! 1908 saw an association called\n\nFootball Linear-AcT0.00.00.0Once upon a time, there was an old man who lived in the forest. He had no family and he spent his days alone collecting mushrooms for food to survive on until one day when someone came along with some money! This person gave him all of their savings so that they could live together forever\n\nFootball Linear-AcT0.50.50.5Once upon a time, there was an amazing woman named Sarah. She had the most beautiful smile and kindest heart you could ever imagine!\n\nSarah loved to play soccer with her friends on Saturday mornings at 9am sharp every week for as long as she can remember‚Ä¶until one day when\n\nFootball Linear-AcT1.01.01.0Once upon a time, the only way to watch football was on TV. The game of soccer had been played in England since 1863 and by the early twentieth century it became one of Britain‚Äôs most popular sports with over three million spectators attending matches each season (and many more\n\nTable 9:\nGenerations at different ŒªùúÜ\\\\lambda inducing concept Flower.\n\n{NiceTabular}\nlllp0.8\nConcept Method ŒªùúÜ\\\\lambda Generation\n\nFlower ITI-c0.00.00.0Once upon a time, there was an old man who lived in the forest. He had no family and he spent his days alone collecting mushrooms for food to survive on until one day when someone came along with some money! This person gave him all of their savings so that they could live together forever\n\nFlower ITI-c5.05.05.0Once upon a time, there was an artist who lived in the land of flowers. She had beautiful hair and wore it like a crown on her head. Her name is called ‚ÄúFlower‚Äù.\n\nShe loved to paint pictures with water colours because she thought that they were very pretty. One day when\n\nFlower ITI-c10.010.010.0Once upon a time, there was an artist who lived in the land of flowers. She had beautiful and fragrant petals that she called ‚Äòflowers‚Äô.\n\nShe also has another name for her petal which is known as ‚Äúpetals‚Äù. I have no idea what it means but i think you can see\n\nFlower Linear-AcT0.00.00.0Once upon a time, there was an old man who lived in the forest. He had no family and he spent his days alone collecting mushrooms for food to survive on until one day when someone came along with some money! This person gave him all of their savings so that they could live together forever\n\nFlower Linear-AcT0.50.50.5Once upon a time, there was an old man who lived in the forest. He had no children and so he decided to grow some flowers for himself instead of having them on his own body!\n\nThe flower is called ‚Äúthe red-eyed lily‚Äù because it has petals that are bright pink\n\nFlower Linear-AcT1.01.01.0Once upon a time, there was an egg-shaped seed that grew into the first true leaves. These tiny green structures are called sepals and they grow in clusters at the base of each flower. The petals may be white or pink with 5 to 8 mm long stalks; these will\n\nTable 10:\nGenerations at different ŒªùúÜ\\\\lambda inducing concept Cloud.\n\n{NiceTabular}\nlllp0.8\nConcept Method ŒªùúÜ\\\\lambda Generation\n\nCloud ITI-c0.00.00.0Once upon a time, there was an old man who lived in the forest. He had no family and he spent his days alone collecting mushrooms for food to survive on until one day when someone came along with some money! This person gave him all of their savings so that they could live together forever\n\nCloud ITI-c5.05.05.0Once upon a time, the only way to get your cloud-based computing infrastructure was by using an existing provider. But now that we‚Äôve got so many of them in our sky (literally), it can be difficult for us cloudshifters and meteorologists to tell one from another!\n\nCloud ITI-c10.010.010.0Once upon a time, the clouds were named by cloud-cloud optical properties. These are called cirrus or altocumulus and middle cir cir circir (Alto Alto Cumulus) Cloud family:.\n\nCloud Linear-AcT0.00.00.0Once upon a time, there was an old man who lived in the forest. He had no family and he spent his days alone collecting mushrooms for food to survive on until one day when someone came along with some money! This person gave him all of their savings so that they could live together forever\n\nCloud Linear-AcT0.50.50.5Once upon a time, there was an island called the Isle of Skye. The weather on this isle is very unpredictable and can change from sunny to stormy in minutes!\n\nThe clouds are always moving around with no real pattern or structure as they do not have any defined tops like those found over land\n\nCloud Linear-AcT1.01.01.0Once upon a time, there was an island called the Bermuda. It is located in middle latitudes of both hemispheres and has been known to be associated with high-level clouds (cirro- or alto-transparent). The altitude ranges from about 10,0\n\n## Appendix I Experimental details and extended results on inducing Truthfulness\n\n### I.1 Experimental details\n\nWe follow the original experimental protocol for evaluations on the TruthfulQA multiple choice part, as described in Lin et al. ( [2021](https://ar5iv.org/html/2410.23054#bib.bib25 \"\")). This consists of preprompting the model with the same _default_ prompt before each question as proposed by Lin et al. ( [2021](https://ar5iv.org/html/2410.23054#bib.bib25 \"\")) in Figure 21, which we replicate below for the reader.\nTo then evaluate a model on a (preprompted) question, the likelihood of each multiple choice answer is computed independently (conditional on the default prompt and question). The answer option with the highest likelihood is counted as the model‚Äôs answer to the question.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/tqa_sweeps/TQApreprompt.png)Figure 11: Figure 21 from Lin et al. ( [2021](https://ar5iv.org/html/2410.23054#bib.bib25 \"\")) showing the _default_ preprompt used for the TruthfulQA multiple choice part.\n\n### I.2 Extended results\n\n#### I.2.1 Full results over 5 seeds for all layers\n\nTable 11:\nTruthfulQA results for Gemma2-2B, results over 5 runs.\nITI-c, ActAdd and AcT have a strength parameter ŒªùúÜ\\\\lambda which we sweep, reporting for each method the best result (best ŒªùúÜ\\\\lambda) in MC1 Accuracy that incurs at least equal performance in MMLU accuracy compared to the best (in terms of MC1 accuracy) of the two AcT methods (see [I.2.2](https://ar5iv.org/html/2410.23054#A9.SS2.SSS2 \"I.2.2 Sweeping ùúÜ for ITI-c and ActAdd ‚Ä£ I.2 Extended results ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), giving 0.1%percent0.10.1\\\\% slack).\n\n|  | Layer | Best ŒªùúÜ\\\\lambda | MC1 Accuracy (%) ‚Üë‚Üë\\\\uparrow | MC2 Accuracy (%) ‚Üë‚Üë\\\\uparrow | MMLU Accuracy (%) ‚Üë‚Üë\\\\uparrow |\n| Original | - | - | 21.0521.0521.05 | 32.8032.8032.80 | 53.1053.1053.10 |\n| AurA | MLP | - | 21.20¬±0.10plus-or-minus21.200.1021.20\\\\pm{0.10} | 32.88¬±0.22plus-or-minus32.880.2232.88\\\\pm{0.22} | 52.73¬±0.07plus-or-minus52.730.0752.73\\\\pm{0.07} |\n| ActAdd | Attention | 3.0 | 22.64¬±0.00plus-or-minus22.640.0022.64\\\\pm{0.00} | 34.64¬±0.00plus-or-minus34.640.0034.64\\\\pm{0.00} | 53.02¬±0.00plus-or-minus53.020.0053.02\\\\pm{0.00} |\n| ITI-c | Attention | 5.0 | 23.18¬±0.28plus-or-minus23.180.2823.18\\\\pm{0.28} | 36.16¬±0.34plus-or-minus36.160.3436.16\\\\pm{0.34} | 52.10¬±0.44plus-or-minus52.100.4452.10\\\\pm{0.44} |\n| Mean-AcT | Attention | 1.0 | 21.62¬±0.07plus-or-minus21.620.0721.62\\\\pm{0.07} | 34.08¬±0.19plus-or-minus34.080.1934.08\\\\pm{0.19} | 52.83¬±0.09plus-or-minus52.830.0952.83\\\\pm{0.09} |\n| Linear-AcT | Attention | 1.0 | 21.71¬±0.14plus-or-minus21.710.1421.71\\\\pm{0.14} | 34.47¬±0.22plus-or-minus34.470.2234.47\\\\pm{0.22} | 52.86¬±0.08plus-or-minus52.860.0852.86\\\\pm{0.08} |\n| ActAdd | All-LN | 1.0 | 21.42¬±0.00plus-or-minus21.420.0021.42\\\\pm{0.00} | 32.93¬±0.00plus-or-minus32.930.0032.93\\\\pm{0.00} | 51.65¬±0.00plus-or-minus51.650.0051.65\\\\pm{0.00} |\n| ITI-c | All-LN | 4.0 | 23.94¬±0.96plus-or-minus23.940.9623.94\\\\pm{0.96} | 36.62¬±0.86plus-or-minus36.620.8636.62\\\\pm{0.86} | 51.37¬±0.41plus-or-minus51.370.4151.37\\\\pm{0.41} |\n| Mean-AcT | All-LN | 1.0 | 25.07¬±0.20plus-or-minus25.070.2025.07\\\\pm{0.20} | 38.68¬±0.30plus-or-minus38.680.3038.68\\\\pm{0.30} | 51.81¬±0.12plus-or-minus51.810.1251.81\\\\pm{0.12} |\n| Linear-AcT | All-LN | 1.0 | 26.00¬±0.32plus-or-minus26.000.3226.00\\\\pm{0.32} | 40.17¬±0.24plus-or-minus40.170.2440.17\\\\pm{0.24} | 51.47¬±0.27plus-or-minus51.470.2751.47\\\\pm{0.27} |\n| ActAdd | Post-LN | 0.8 | 22.40¬±0.00plus-or-minus22.400.0022.40\\\\pm{0.00} | 34.27¬±0.00plus-or-minus34.270.0034.27\\\\pm{0.00} | 53.11¬±0.00plus-or-minus53.110.0053.11\\\\pm{0.00} |\n| ITI-c | Post-LN | 8.0 | 23.16¬±0.40plus-or-minus23.160.4023.16\\\\pm{0.40} | 35.94¬±0.55plus-or-minus35.940.5535.94\\\\pm{0.55} | 51.39¬±0.45plus-or-minus51.390.4551.39\\\\pm{0.45} |\n| Mean-AcT | Post-LN | 1.0 | 21.93¬±0.20plus-or-minus21.930.2021.93\\\\pm{0.20} | 34.98¬±0.25plus-or-minus34.980.2534.98\\\\pm{0.25} | 52.77¬±0.10plus-or-minus52.770.1052.77\\\\pm{0.10} |\n| Linear-AcT | Post-LN | 1.0 | 22.45¬±0.22plus-or-minus22.450.2222.45\\\\pm{0.22} | 35.94¬±0.36plus-or-minus35.940.3635.94\\\\pm{0.36} | 52.43¬±0.20plus-or-minus52.430.2052.43\\\\pm{0.20} |\n| ActAdd | MLP | 3.0 | 23.01¬±0.00plus-or-minus23.010.0023.01\\\\pm{0.00} | 34.76¬±0.00plus-or-minus34.760.0034.76\\\\pm{0.00} | 52.83¬±0.00plus-or-minus52.830.0052.83\\\\pm{0.00} |\n| ITI-c | MLP | 2.0 | 24.53¬±0.11plus-or-minus24.530.1124.53\\\\pm{0.11} | 37.06¬±0.38plus-or-minus37.060.3837.06\\\\pm{0.38} | 51.39¬±0.41plus-or-minus51.390.4151.39\\\\pm{0.41} |\n| Mean-AcT | MLP | 1.0 | 21.98¬±0.19plus-or-minus21.980.1921.98\\\\pm{0.19} | 35.18¬±0.31plus-or-minus35.180.3135.18\\\\pm{0.31} | 52.84¬±0.04plus-or-minus52.840.0452.84\\\\pm{0.04} |\n| Linear-AcT | MLP | 1.0 | 21.93¬±0.20plus-or-minus21.930.2021.93\\\\pm{0.20} | 35.47¬±0.25plus-or-minus35.470.2535.47\\\\pm{0.25} | 52.73¬±0.19plus-or-minus52.730.1952.73\\\\pm{0.19} |\n\nTable 12:\nTruthfulQA results for Llama3-8B, results over 5 runs. ITI-c, ActAdd and AcT have a strength parameter ŒªùúÜ\\\\lambda which we sweep, reporting for each method the best result (best ŒªùúÜ\\\\lambda) in MC1 Accuracy that incurs at least equal performance in MMLU accuracy compared to the best (in terms of MC1 accuracy) of the two AcT methods (see [I.2.2](https://ar5iv.org/html/2410.23054#A9.SS2.SSS2 \"I.2.2 Sweeping ùúÜ for ITI-c and ActAdd ‚Ä£ I.2 Extended results ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), giving 0.1%percent0.10.1\\\\% slack).\n\n|  | Layer | Best ŒªùúÜ\\\\lambda | MC1 Accuracy (%) ‚Üë‚Üë\\\\uparrow | MC2 Accuracy (%) ‚Üë‚Üë\\\\uparrow | MMLU Accuracy |\n| Original | - | - | 25.4625.4625.46 | 40.2740.2740.27 | 65.3565.3565.35 |\n| AurA | MLP | - | 25.34¬±0.15plus-or-minus25.340.1525.34\\\\pm{0.15} | 40.47¬±0.20plus-or-minus40.470.2040.47\\\\pm{0.20} | 65.37¬±0.06plus-or-minus65.370.0665.37\\\\pm{0.06} |\n| ActAdd | Attention | 0.7 | 26.19¬±0.00plus-or-minus26.190.0026.19\\\\pm{0.00} | 40.88¬±0.00plus-or-minus40.880.0040.88\\\\pm{0.00} | 65.42¬±0.00plus-or-minus65.420.0065.42\\\\pm{0.00} |\n| ITI-c | Attention | 1.0 | 27.42¬±0.30plus-or-minus27.420.3027.42\\\\pm{0.30} | 42.01¬±0.42plus-or-minus42.010.4242.01\\\\pm{0.42} | 65.26¬±0.11plus-or-minus65.260.1165.26\\\\pm{0.11} |\n| Mean-AcT | Attention | 1.0 | 26.73¬±0.19plus-or-minus26.730.1926.73\\\\pm{0.19} | 42.20¬±0.24plus-or-minus42.200.2442.20\\\\pm{0.24} | 65.37¬±0.06plus-or-minus65.370.0665.37\\\\pm{0.06} |\n| Linear-AcT | Attention | 1.0 | 27.17¬±0.23plus-or-minus27.170.2327.17\\\\pm{0.23} | 42.15¬±0.31plus-or-minus42.150.3142.15\\\\pm{0.31} | 65.33¬±0.11plus-or-minus65.330.1165.33\\\\pm{0.11} |\n| ActAdd | All-LN | 1.0 | 25.58¬±0.00plus-or-minus25.580.0025.58\\\\pm{0.00} | 41.00¬±0.00plus-or-minus41.000.0041.00\\\\pm{0.00} | 64.88¬±0.00plus-or-minus64.880.0064.88\\\\pm{0.00} |\n| ITI-c | All-LN | 3.0 | 29.65¬±0.71plus-or-minus29.650.7129.65\\\\pm{0.71} | 44.43¬±0.56plus-or-minus44.430.5644.43\\\\pm{0.56} | 64.71¬±0.22plus-or-minus64.710.2264.71\\\\pm{0.22} |\n| Mean-AcT | All-LN | 1.0 | 32.88¬±0.54plus-or-minus32.880.5432.88\\\\pm{0.54} | 48.23¬±0.64plus-or-minus48.230.6448.23\\\\pm{0.64} | 64.83¬±0.14plus-or-minus64.830.1464.83\\\\pm{0.14} |\n| Linear-AcT | All-LN | 1.0 | 33.22¬±0.22plus-or-minus33.220.2233.22\\\\pm{0.22} | 48.69¬±0.34plus-or-minus48.690.3448.69\\\\pm{0.34} | 64.78¬±0.15plus-or-minus64.780.1564.78\\\\pm{0.15} |\n| ActAdd | MLP | 0.5 | 25.46¬±0.00plus-or-minus25.460.0025.46\\\\pm{0.00} | 40.64¬±0.00plus-or-minus40.640.0040.64\\\\pm{0.00} | 65.34¬±0.00plus-or-minus65.340.0065.34\\\\pm{0.00} |\n| ITI-c | MLP | 2.0 | 30.11¬±0.60plus-or-minus30.110.6030.11\\\\pm{0.60} | 45.41¬±0.24plus-or-minus45.410.2445.41\\\\pm{0.24} | 64.71¬±0.14plus-or-minus64.710.1464.71\\\\pm{0.14} |\n| Mean-AcT | MLP | 1.0 | 26.17¬±0.24plus-or-minus26.170.2426.17\\\\pm{0.24} | 41.27¬±0.34plus-or-minus41.270.3441.27\\\\pm{0.34} | 65.01¬±0.20plus-or-minus65.010.2065.01\\\\pm{0.20} |\n| Linear-AcT | MLP | 1.0 | 26.41¬±0.52plus-or-minus26.410.5226.41\\\\pm{0.52} | 39.34¬±0.54plus-or-minus39.340.5439.34\\\\pm{0.54} | 60.98¬±3.14plus-or-minus60.983.1460.98\\\\pm{3.14} |\n\n#### I.2.2 Sweeping ŒªùúÜ\\\\lambda for ITI-c and ActAdd\n\nIn Figures [12](https://ar5iv.org/html/2410.23054#A9.F12 \"Figure 12 ‚Ä£ I.2.2 Sweeping ùúÜ for ITI-c and ActAdd ‚Ä£ I.2 Extended results ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") \\- [15](https://ar5iv.org/html/2410.23054#A9.F15 \"Figure 15 ‚Ä£ I.2.2 Sweeping ùúÜ for ITI-c and ActAdd ‚Ä£ I.2 Extended results ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), we show the results of sweeping the value of ŒªùúÜ\\\\lambda for ITI-c and ActAdd for both Gemma2-2B and Llama3-8B. For each model, we also indicate the MMLU accuracy of the best AcT method for that model with a horizontal grey dashed line, as this is our point of reference for choosing ŒªùúÜ\\\\lambda for ITI-c and ActAdd: we choose the value of ŒªùúÜ\\\\lambda that achieves the best MC1 accuracy, while achieving at least equal MMLU accuracy to this grey dotted line (up to a slack of 0.1%percent0.10.1\\\\%).\n\nFor ITI-c, where we see a clear relationship between MMLU and MC1 accuracy as ŒªùúÜ\\\\lambda varies, we sweep Œª‚àà\\[1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0,15.0\\]ùúÜ1.02.03.04.05.06.07.08.09.010.011.012.013.014.015.0\\\\lambda\\\\in\\[1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0,15.0\\].\nFor ActAdd, where the relationship can be more erratic, we also sweep values <1.0absent1.0<1.0. Here, we sweep Œª‚àà\\[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,2.0,3.0,4.0,5.0\\]ùúÜ0.10.20.30.40.50.60.70.80.91.02.03.04.05.0\\\\lambda\\\\in\\[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,2.0,3.0,4.0,5.0\\].\n\nOverall we see that ŒªùúÜ\\\\lambda can have a strong impact on performance for ITI-c, but in a different way for each layer and model. In particular, it can decrease MMLU performance to catastrophic levels (more than halving performance on Gemma2-2B for MLP layers and on Llama3-8B for both attention and MLP layers), making it necessary to sweep ŒªùúÜ\\\\lambda to find its value that provides a reliable control method using ITI-c for the problem at hand. Similar things can be found about ActAdd (e.g. when interventing upon on all Layernorm layers on Gemma2-2B, Figure [13](https://ar5iv.org/html/2410.23054#A9.F13 \"Figure 13 ‚Ä£ I.2.2 Sweeping ùúÜ for ITI-c and ActAdd ‚Ä£ I.2 Extended results ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")).\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x15.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x16.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x17.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x18.png)\n\nFigure 12: Sweeping ŒªùúÜ\\\\lambda for inducing truthfulness with ITI-c on Gemma2-2B. Left endpoint of line is Œª=1.0ùúÜ1.0\\\\lambda=1.0, right endpoint of line is Œª=15.0ùúÜ15.0\\\\lambda=15.0 (each point increasing ŒªùúÜ\\\\lambda by 1.01.01.0). Note this is for 111 seed only.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x19.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x20.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x21.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x22.png)\n\nFigure 13: Sweeping ŒªùúÜ\\\\lambda for inducing truthfulness with ActAdd on Gemma2-2B. Left endpoint of line is Œª=0.1ùúÜ0.1\\\\lambda=0.1, right endpoint of line is Œª=5.0ùúÜ5.0\\\\lambda=5.0 (Œª‚àà\\[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,2.0,3.0,4.0,5.0\\]ùúÜ0.10.20.30.40.50.60.70.80.91.02.03.04.05.0\\\\lambda\\\\in\\[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,2.0,3.0,4.0,5.0\\]). Note this is for 111 seed only.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x23.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x24.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x25.png)\n\nFigure 14: Sweeping ŒªùúÜ\\\\lambda for inducing truthfulness with ITI-c on Llama3-8B. Left endpoint of line is Œª=1.0ùúÜ1.0\\\\lambda=1.0, right endpoint of line is Œª=15.0ùúÜ15.0\\\\lambda=15.0 (each point increasing ŒªùúÜ\\\\lambda by 1.01.01.0). Note this is for 111 seed only.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x26.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x27.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x28.png)\n\nFigure 15: Sweeping ŒªùúÜ\\\\lambda for inducing truthfulness with ActAdd on Llama3-8B. Left endpoint of line is Œª=0.1ùúÜ0.1\\\\lambda=0.1, right endpoint of line is Œª=5.0ùúÜ5.0\\\\lambda=5.0 (Œª‚àà\\[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,2.0,3.0,4.0,5.0\\]ùúÜ0.10.20.30.40.50.60.70.80.91.02.03.04.05.0\\\\lambda\\\\in\\[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,2.0,3.0,4.0,5.0\\]). Note this is for 111 seed only.\n\n## Appendix J Experimental Details and Extended Results for T2I generation\n\n[SectionJ.1](https://ar5iv.org/html/2410.23054#A10.SS1 \"J.1 Guidance Parameter in Existing Diffusion Models ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") illustrates the effect of the guidance parameter in SDXL. [SectionJ.2](https://ar5iv.org/html/2410.23054#A10.SS2 \"J.2 Negative prompting ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") illustrates the problem of concept negation when using negative prompts. [SectionJ.3](https://ar5iv.org/html/2410.23054#A10.SS3 \"J.3 Style Control ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") contains additional qualitative examples of style control on SDXL and FLUX. [SectionJ.4](https://ar5iv.org/html/2410.23054#A10.SS4 \"J.4 Concept negation ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") contains additional qualitative examples for concept negation in SDXL and FLUX. [SectionsJ.6](https://ar5iv.org/html/2410.23054#A10.SS6 \"J.6 Style prompts ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and [J.7](https://ar5iv.org/html/2410.23054#A10.SS7 \"J.7 Concept prompts ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") contain the list of tags used as prompt modifiers to generate the target/source distribution of activations for each style/concept respectively. [SectionJ.8](https://ar5iv.org/html/2410.23054#A10.SS8 \"J.8 Details on FLUX conditioning ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") contains details on FLUX‚Äôs architecture conditioning.\n\n### J.1 Guidance Parameter in Existing Diffusion Models\n\nWe show in [Figure16](https://ar5iv.org/html/2410.23054#A10.F16 \"In J.1 Guidance Parameter in Existing Diffusion Models ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") the effect of changing the guidance scale parameter in SDXL. While large values lead to effective conditioning, lower values destroy content. This makes guidance non intuitive and harder to use by users.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/zebra_sdxl.jpg)1.01.01.01.51.51.52.02.02.02.52.52.53.03.03.03.53.53.54.04.04.04.54.54.55.05.05.05.55.55.56.06.06.0Figure 16: SDXL with art nouveau tags appended to the prompt as described in [SectionJ.3](https://ar5iv.org/html/2410.23054#A10.SS3 \"J.3 Style Control ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and guidance strength linearly increasing from 1 to 6. Note how for low guidance (left most images) the semantic content is almost completely lost.\n\n### J.2 Negative prompting\n\nStable diffusion models allow using negative prompts to avoid unwanted elements in the generated images (Rombach et al., [2022](https://ar5iv.org/html/2410.23054#bib.bib37 \"\"); [Podell et al.,](https://ar5iv.org/html/2410.23054#bib.bib32 \"\")). Here, we show that this method is ineffective at removing pink elephant, white bear, and gorilla. [Figures17](https://ar5iv.org/html/2410.23054#A10.F17 \"In J.2 Negative prompting ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and [18](https://ar5iv.org/html/2410.23054#A10.F18 \"Figure 18 ‚Ä£ J.2 Negative prompting ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") contain some failure cases of SDXL and Stable Diffusion 3 (Esser et al., [2024](https://ar5iv.org/html/2410.23054#bib.bib9 \"\")) at removing unwanted concepts. [Figure25](https://ar5iv.org/html/2410.23054#A10.F25 \"In J.4 Concept negation ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and [Figure26](https://ar5iv.org/html/2410.23054#A10.F26 \"In J.4 Concept negation ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") show results intervening SDXL with AcT, showing its effectiveness at removing these concepts with the same prompts. In [Figure27](https://ar5iv.org/html/2410.23054#A10.F27 \"In J.4 Concept negation ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") we show some failure cases at concept negation.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/negative_prompts/no_pink_elephant_2.jpg)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/negative_prompts/no_gorilla_2.jpg)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/negative_prompts/no_white_bear_2.jpg)\n\nFigure 17: SDXL with Negative Prompt. Prompt: ‚ÄúThere is a banana and two pieces of cheese on a plate. A {pink elephant, gorilla, white bear} cannot be seen anywhere.‚Äù. Negative prompt: ‚ÄúA {pink elephant, gorilla, white bear}‚Äù.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/negative_prompts/sd3-pink-elephant-1.jpg)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/negative_prompts/sd3-gorilla-1.jpg)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/negative_prompts/sd3-white-bear-1.jpg)\n\nFigure 18: Stable Diffusion 3 with Negative Prompt. Prompt: ‚Äú2 tier cake with multicolored stars attached to it. A {pink elephant, gorilla, white bear} cannot be seen anywhere.‚Äù Negative prompt: ‚ÄúA {pink elephant, gorilla, white bear}.‚Äù.\n\n### J.3 Style Control\n\n[Figures19](https://ar5iv.org/html/2410.23054#A10.F19 \"In J.3 Style Control ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), [20](https://ar5iv.org/html/2410.23054#A10.F20 \"Figure 20 ‚Ä£ J.3 Style Control ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and [21](https://ar5iv.org/html/2410.23054#A10.F21 \"Figure 21 ‚Ä£ J.3 Style Control ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") complement the results shown in [Section5.1](https://ar5iv.org/html/2410.23054#S5.SS1 \"5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/anime/221865.jpg)(a) Anime\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/art_nouveau/221865.jpg)(b) Art Nouveau\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/cyberpunk/221865.jpg)(c) Cyberpunk\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/impressionism/221865.jpg)(d) Impressionism\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/sketch/221865.jpg)(e) Sketch.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/watercolor/221865.jpg)(f) Watercolor\n\nFigure 19: SDXL - A plane floating on top of a lake surrounded by mountains. From left to right conditioning strength ŒªùúÜ\\\\lambda increases from 0 to 1. Rightmost column corresponds to the best strength found in [Figure6](https://ar5iv.org/html/2410.23054#S5.F6 \"In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") (Œª=1ùúÜ1\\\\lambda=1 for AcT and Œª=2ùúÜ2\\\\lambda=2 for ITI-c). Linear-AcT succeeds at inducing different styles. Mean-AcT fails at inducing art nouveau. ITI-c introduces noise for art nouveau and cyberpunk.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/anime/110843.jpg)(a) Anime\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/art_nouveau/110843.jpg)(b) Art Nouveau\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/cyberpunk/110843.jpg)(c) Cyberpunk\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/impressionism/110843.jpg)(d) Impressionism\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/sketch/110843.jpg)(e) Sketch.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/watercolor/110843.jpg)(f) Watercolor\n\nFigure 20: SDXL - A firetruck with lights on is on a city street. Rightmost column corresponds to the best strength found in [Figure6](https://ar5iv.org/html/2410.23054#S5.F6 \"In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") (Œª=1ùúÜ1\\\\lambda=1 for AcT and Œª=2ùúÜ2\\\\lambda=2 for ITI-c). Mean-AcT fails at inducing impressionism and art nouveau. ITI-c achieves the strongest conditioning and generates a noisy image for art nouveau.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/anime/332361.jpg)(a) Anime\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/art_nouveau/332361.jpg)(b) Art Nouveau\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/cyberpunk/332361.jpg)(c) Cyberpunk\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/impressionism/332361.jpg)(d) Impressionism\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/sketch/332361.jpg)(e) Sketch.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/SDXL/watercolor/332361.jpg)(f) Watercolor\n\nFigure 21: SDXL - A sandwich is placed next to some vegetables. Rightmost column corresponds to the best strength found in [Figure6](https://ar5iv.org/html/2410.23054#S5.F6 \"In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") (Œª=1ùúÜ1\\\\lambda=1 for AcT and Œª=2ùúÜ2\\\\lambda=2 for ITI-c). ITI-c fails at inducing style progressively (e.g. (c) cyberpunk).\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/anime/355564.jpg)(a) Anime\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/art_nouveau/355564.jpg)(b) Art Nouveau\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/cyberpunk/355564.jpg)(c) Cyberpunk\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/impressionism/355564.jpg)(d) Impressionism\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/sketch/355564.jpg)(e) Sketch.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/watercolor/355564.jpg)(f) Watercolor\n\nFigure 22: FLUX - A group of zebra standing next to each other on a dirt field. Rightmost column corresponds to the best strength found in [Figure6](https://ar5iv.org/html/2410.23054#S5.F6 \"In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") (Œª=1ùúÜ1\\\\lambda=1 for all methods). Linear-AcT is successful at inducing all styles. ITI-c fails at inducing cyberpunk and anime.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/anime/134979.jpg)(a) Anime\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/art_nouveau/134979.jpg)(b) Art Nouveau\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/cyberpunk/134979.jpg)(c) Cyberpunk\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/impressionism/134979.jpg)(d) Impressionism\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/sketch/134979.jpg)(e) Sketch.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/watercolor/134979.jpg)(f) Watercolor\n\nFigure 23: FLUX - Black cat with green eyes sitting in a bathroom sink. Rightmost column corresponds to the best strength found in [Figure6](https://ar5iv.org/html/2410.23054#S5.F6 \"In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") (Œª=1ùúÜ1\\\\lambda=1 for all methods). AcT‚Äôs conditioning is weak for sketch and watercolor. ITI-c fails at inducing cyberpunk.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/anime/211675.jpg)(a) Anime\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/art_nouveau/211675.jpg)(b) Art Nouveau\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/cyberpunk/211675.jpg)(c) Cyberpunk\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/impressionism/211675.jpg)(d) Impressionism\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/sketch/211675.jpg)(e) Sketch.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/styles/FLUX/watercolor/211675.jpg)(f) Watercolor\n\nFigure 24: FLUX - A semi truck is driving down a street. Rightmost column corresponds to the best strength found in [Figure6](https://ar5iv.org/html/2410.23054#S5.F6 \"In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") (Œª=1ùúÜ1\\\\lambda=1 for all methods). AcT is able to preserve the semantics for all styles and we observe only mild conditioning for impressionism and watercolor. ITI-c fails at inducing anime and cyberpunk.\n\n### J.4 Concept negation\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/concept_removal/SDXL/149093.jpg)(a) Many cars parked on a city street with tall buildings in the background.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/concept_removal/SDXL/352714.jpg)(b) A cat sitting in front of a large computer monitor.\n\nFigure 25: SDXL - Concept negation examples I. Rightmost column corresponds to the best strength found in [Figure6](https://ar5iv.org/html/2410.23054#S5.F6 \"In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") (Œª=1ùúÜ1\\\\lambda=1 for AcT and Œª=4ùúÜ4\\\\lambda=4 for ITI-c). Every 3 rows represent a different concept in {gorilla, pink elephant, white bear} which was negated at the input of the image generator. Mean-AcT and Linear-AcT succeed at removing the unwanted concept. ITI-c fails for gorilla and produces a blurry image for pink elephant.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/concept_removal/SDXL/141844.jpg)(a) There is a banana and two pieces of cheese on a plate.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/concept_removal/SDXL/147721.jpg)(b) 2 tier cake with multicolored stars attached to it.\n\nFigure 26: SDXL - Concept negation examples II. Rightmost column corresponds to the best strength found in [Figure6](https://ar5iv.org/html/2410.23054#S5.F6 \"In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") (Œª=1ùúÜ1\\\\lambda=1 for AcT and Œª=4ùúÜ4\\\\lambda=4 for ITI-c). Every 3 rows represent a different concept in {gorilla, pink elephant, white bear} which was negated at the input of the image generator. Linear-AcT and Mean-AcT succeed at removing the negated concepts while ITI-c tends to modify the semantics of the image.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/concept_removal/SDXL/314100.jpg)(a) Closeup of a white and yellow vase with a red circle at the bottom.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/concept_removal/SDXL/402723.jpg)(b) A table topped with bananas next to a coin.\n\nFigure 27: SDXL - Concept negation examples III (failures) Rightmost column corresponds to the best strength found in [Figure6](https://ar5iv.org/html/2410.23054#S5.F6 \"In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") (Œª=1ùúÜ1\\\\lambda=1 for AcT and Œª=4ùúÜ4\\\\lambda=4 for ITI-c). Every 3 rows represent a different concept in {gorilla, pink elephant, white bear} which was negated at the input of the image generator. While Mean-AcT and Linear-AcT are successful at removing the concept, there is sometimes a change in semantics of the image for the maximum strength. ITI-c at best strength (Œª=4ùúÜ4\\\\lambda=4) changes semantics for all concepts.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/concept_removal/FLUX/147721.jpg)(a) 2 tier cake with multicolored stars attached to it.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/concept_removal/FLUX/382508.jpg)(b) A table topped with bananas next to a coin.\n\nFigure 28: FLUX - Concept negation examples I. Rightmost column corresponds to the best strength found in [Figure6](https://ar5iv.org/html/2410.23054#S5.F6 \"In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") (Œª=1ùúÜ1\\\\lambda=1 for AcT and Œª=5ùúÜ5\\\\lambda=5 for ITI-c). Every 3 rows represent a different concept in {gorilla, pink elephant, white bear} which was negated at the input of the image generator. Linear-AcT removes the negated concepts except for white bear in (a). ITI-c is effective at ‚Äúbest‚Äù (Œª=5ùúÜ5\\\\lambda=5). At high strengths, Linear-AcT and ITI-c also affect other image semantics.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/concept_removal/FLUX/141844.jpg)(a) There is a banana and two pieces of cheese on a plate.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/figures/qualitative/concept_removal/FLUX/332361.jpg)(b) A sandwich is placed next to some vegetables.\n\nFigure 29: FLUX - Concept negation examples II (Failures) Rightmost column corresponds to the best strength found in [Figure6](https://ar5iv.org/html/2410.23054#S5.F6 \"In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") (Œª=1ùúÜ1\\\\lambda=1 for AcT and Œª=5ùúÜ5\\\\lambda=5 for ITI-c). Every 3 rows represent a different concept in {gorilla, pink elephant, white bear} which was negated at the input of the image generator. AcT does not remove white bear, and fails to remove gorilla in (b). For high ŒªùúÜ\\\\lambda, Linear-AcT modifies the semantics of the image. ITI-c removes the unwanted concept for Œª=5ùúÜ5\\\\lambda=5.\n\n### J.5 Detailed Results\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x29.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x30.png)\n\n(a) Anime\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x31.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x32.png)\n\n(b) Art Nouveau\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x33.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x34.png)\n\n(c) Cyberpunk\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x35.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x36.png)\n\n(d) Impressionism\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x37.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x38.png)\n\n(e) Sketch\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x39.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x40.png)\n\n(f) Watercolor\n\nFigure 30: Style induction. For each style (a-f) and model (left-right), we show the 0-shot classification score for the style being present in the generated images (top) and the ClipScore to track how much generated images deviate from the unconditional prompt (bottom). The gray area indicates images that have lost their semantic content.\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x41.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x42.png)\n\n(a) Gorilla\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x43.png)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x44.png)\n\n(b) Pink elephant\n\n![Refer to caption](https://ar5iv.org/html/2410.23054)\n\n![Refer to caption](https://ar5iv.org/html/2410.23054/assets/x46.png)\n\n(c) White bear\n\nFigure 31: Concept negation. For each concept (a-c) and model (left-right), we show the 0-shot classification score for the concept being present in the generated images (top) and the ClipScore (bottom) to track how much generated images deviate from the unconditional prompt. The gray area indicates images that have lost their semantic content.\n\n### J.6 Style prompts\n\nTable 13: List of tags generated with Llama-8B-instruct (right) to induce different styles (left).\n\n| Anime | anime style, large expressive eyes, stylized hair, bold outlines, simplified colors, dynamic perspective, exaggerated features, angular shapes, chibis, manga inspired, emotive facial expressions, action sequences, speed lines, cell shading, graphic backgrounds, vibrant palettes |\n| Art nouveau | Art Nouveau, Alphonse Mucha, Gustav Klimt, flowing lines, organic shapes, floral motifs, geometric patterns, ornamental designs, Jugendstil, Secessionism, symbolism, female figures, gold leaf, intricate details, turn of the century art, early 20th century |\n| Impressionism | impressionism, Claude Monet, brush strokes, light, color, outdoor scenes, water lilies, haystacks, Rouen Cathedral, reflections, nature, atmospheric, vibrant colors, visible textures, 19th century art, French impressionism |\n| Cyberpunk | cyberpunk, neon lights, urban jungles, high-tech architecture, augmented reality, AI technology, biopunk, futuristic cities, post-apocalyptic scenes, digital hacking, megacorporations, androids, dystopian societies, cybernetic enhancements, chromed details, glowing neon signs, rain-soaked streets |\n| Photorealism | photorealism, hyperrealism, optical precision, photographic quality, fine detail, lifelike textures, realistic lighting, accurate perspective, human figures, still life, cityscapes, landscapes, skin tones, reflections and shadows, everyday objects, documentary style art, contemporary realism |\n| Sketch | sketches, pencil drawing, charcoal sketches, ink illustrations, gestural lines, quick studies, figure drawing, perspective sketching, urban sketching, landscape sketches, still life drawings, sketchbook art, doodles, minimalist lines, expressive mark-making, observational drawing |\n| Watercolor | watercolor style, transparent media, wet-on-wet application, dry brush strokes, soft blending, delicate touches, gentle shading, luminous hues, atmospheric lighting, ethereal quality, subtle textures, color gradients, painterly aesthetics, fluid paint behavior, watercolor paper texture |\n\n### J.7 Concept prompts\n\nTable 14: List of tags generated with Llama-8B-instruct (right) to induce different concepts (upper left) or to prompt models not to generate them (lower left).\n\n| Pink elephant | a pink elephant. containing a pink elephant. with a pink elephant in plain view. and a pink elephant. it displays a pink elephant. featuring a pink elephant. in addition to a pink elephant. and also a pink elephant. and a pink elephant as well. the pink elephant can be clearly seen. |\n| Gorilla | a gorilla. containing a gorilla. with a gorilla in plain view. and a gorilla. it displays a gorilla. featuring a gorilla. in addition to a gorilla. and also a gorilla. and a gorilla as well. the gorilla can be clearly seen. |\n| White bear | a white bear. containing a white bear. with a white bear in plain view. and a white bear. it displays a white bear. featuring a white bear. in addition to a white bear. and also a white bear. and a white bear as well. the white bear can be clearly seen. |\n| No pink elephant | without a pink elephant. not containing a pink elephant. without a pink elephant in plain view. and a pink elephant that cannot be seen. it does not display a pink elephant. not featuring a pink elephant. lacking a pink elephant. and not a pink elephant. and a pink elephant is missing. the pink elephant cannot be seen. |\n| No gorilla | without a gorilla. not containing a gorilla. without a gorilla in plain view. and a gorilla that cannot be seen. it does not display a gorilla. not featuring a gorilla. lacking a gorilla. and not a gorilla. and a gorilla is missing. the gorilla cannot be seen. |\n| No white bear | without a white bear. not containing a white bear. without a white bear in plain view. and a white bear that cannot be seen. it does not display a white bear. not featuring a white bear. lacking a white bear. and not a white bear. and a white bear is missing. the white bear cannot be seen. |\n\n### J.8 Details on FLUX conditioning\n\nFLUX‚Äôs diffusion architecture 444https://blackforestlabs.ai/announcing-black-forest-labs/ is based on the transformer architecture (Vaswani et al., [2017](https://ar5iv.org/html/2410.23054#bib.bib47 \"\")). Concretely, it is composed of NùëÅN consecutive multi-modal fusion transformer residual blocks followed by MùëÄM uni-modal transformer residual blocks. We found that the most effective strategy for strong conditioning is to intervene upon the output of all blocks. However, we found that conditioning blocks closest to the output tends to deteriorate the generated images. Thus, we condition all the NùëÅN multi-modal blocks and the first 151515 uni-modal blocks.\n\n[‚óÑ](https://ar5iv.org/html/2410.23053) [![ar5iv homepage](https://ar5iv.org/assets/ar5iv.png)](https://ar5iv.org/) [Feeling\\\\\n\\\\\nlucky?](https://ar5iv.org/feeling_lucky) [Conversion\\\\\n\\\\\nreport](https://ar5iv.org/log/2410.23054) [Report\\\\\n\\\\\nan issue](https://github.com/dginev/ar5iv/issues/new?template=improve-article--arxiv-id-.md&title=Improve+article+2410.23054) [View original\\\\\n\\\\\non arXiv](https://arxiv.org/abs/2410.23054) [‚ñ∫](https://ar5iv.org/html/2410.23055)",
  "sections": {
    "1 Introduction": {
      "content": "Pre-trained Generative Models (GMs) typically undergo an additional fine-tuning phase to better align them to a desired behavior.\nFor example, Large Language Models (LLMs) are aligned via instruction fine-tuning ( [Wei et al.,]) or RLHF (Ouyang et al., [2022]). Although less extensively, these strategies have also been applied to Text-to-Image (T2I) models (Wallace et al., [2024]; Yang et al., [2024]). However, as the number of parameters grows, alignment approaches can become challenging from a computational and memory perspective (Houlsby et al., [2019]). In addition, these strategies modify the model‚Äôs internal mechanisms, realigning its parameters by leveraging new data, which can have the undesired side effect of impacting the utility of the model on other metrics (Kotha et al., [2024]; Luo et al., [2023]), such as 0-shot evaluation or question-answering.\n\nThe increasing cost of fine-tuning has motivated research in inference-time interventions on pre-trained models (Suau et al., [2022]; Rimsky et al., [2023]; Zou et al., [2023]; Li et al., [2024]) in order to control specific behaviors. Since these modifications are typically sparse and/or low-dimensional, they can be estimated using a few hundreds of sentences (Suau et al., [2024]; Turner et al., [2023]).\nFor example, Rimsky et al. ( [2023]); Li et al. ( [2024]) shift activations by a constant vector estimated with sets of desired and undesired data (e.g., non-toxic and toxic); or Suau et al. ( [2024]) mitigate toxicity by dampening the activations of expert neurons.\nWhile effective, existing methods do not preserve the activation distribution observed by the model during training. Considering how brittle GMs can be (Huu-Tien et al., [2024]; Sclar et al., [2024]), a constant shift can move activations out-of-distribution (OOD), which can lead to unwanted behaviors, and hinder both the conditioning and the general model performance.\n\nWe propose Activation Transport (AcT), a framework to steer activations according to the Optimal Transport (OT) map between two different (source and target) activation distributions. For example, from toxic to non-toxic language, or between two different styles in T2I generation. AcT applies a set of univariate maps on activations while preserving their target distributions, achieving better controllability and stronger robustness to the choice of model and layers intervened upon.\nOur main contributions are:\n\n- ‚Ä¢\n\n\nA unifying interpretation of existing activation steering methods under the umbrella of OT, showing that most existing methods are equivalent to a mean transport map ( [Section3.3]Generalization of Prior Inference-Time Interventions Work ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")).\n\n- ‚Ä¢\n\n\nLinear-AcT, an inference-time intervention111Code will be made publicly available upon acceptance. based on OT that preserves internal activation distributions ( [Section3.1]Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). The degree of intervention can be controlled by a strength parameter ŒªùúÜ\\\\lambda between 0 (no transport) and 1 (full transport), as shown in [Figure1]In Controlling Language and Diffusion Models by Transporting Activations\"). We also introduce the transport support to prevent inducing OOD activations.\n\n- ‚Ä¢\n\n\nWe show that, without any hyperparameter tuning, Linear-AcT matches or outperforms existing inference-time interventions when aiming to control LLMs for the tasks of toxicity mitigation, concept induction, and increasing truthfulness.\n\n- ‚Ä¢\n\n\nWe find that off-the-shelf Linear-AcT is also effective at controlling T2I diffusion models for the tasks of fine-grained style control and concept negation. Additionally, we adapt (Li et al., [2024]) (ITI) for T2I. To the best of our knowledge, this is the first work to apply an inference-time intervention method that is simultaneously effective on both LLMs and Diffusion Models.",
      "citations": [
        {
          "start_pos": 215,
          "end_pos": 227,
          "text": "Wei et al.,]",
          "paper_id": "bib.bib49",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 238,
          "end_pos": 259,
          "text": "Ouyang et al., [2022]",
          "paper_id": "bib.bib30",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 360,
          "end_pos": 382,
          "text": "Wallace et al., [2024]",
          "paper_id": "bib.bib48",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 384,
          "end_pos": 403,
          "text": "Yang et al., [2024]",
          "paper_id": "bib.bib52",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 539,
          "end_pos": 561,
          "text": "Houlsby et al., [2019]",
          "paper_id": "bib.bib15",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 781,
          "end_pos": 801,
          "text": "Kotha et al., [2024]",
          "paper_id": "bib.bib20",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 803,
          "end_pos": 821,
          "text": "Luo et al., [2023]",
          "paper_id": "bib.bib26",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 987,
          "end_pos": 1006,
          "text": "Suau et al., [2022]",
          "paper_id": "bib.bib43",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1008,
          "end_pos": 1029,
          "text": "Rimsky et al., [2023]",
          "paper_id": "bib.bib36",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1031,
          "end_pos": 1049,
          "text": "Zou et al., [2023]",
          "paper_id": "bib.bib57",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1051,
          "end_pos": 1068,
          "text": "Li et al., [2024]",
          "paper_id": "bib.bib22",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1238,
          "end_pos": 1257,
          "text": "Suau et al., [2024]",
          "paper_id": "bib.bib44",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1259,
          "end_pos": 1280,
          "text": "Turner et al., [2023]",
          "paper_id": "bib.bib46",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1296,
          "end_pos": 1318,
          "text": "Rimsky et al. ( [2023]",
          "paper_id": "bib.bib36",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1321,
          "end_pos": 1339,
          "text": "Li et al. ( [2024]",
          "paper_id": "bib.bib22",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1462,
          "end_pos": 1482,
          "text": "Suau et al. ( [2024]",
          "paper_id": "bib.bib44",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1707,
          "end_pos": 1726,
          "text": "Tien et al., [2024]",
          "paper_id": "bib.bib16",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1728,
          "end_pos": 1748,
          "text": "Sclar et al., [2024]",
          "paper_id": "bib.bib41",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3863,
          "end_pos": 3880,
          "text": "Li et al., [2024]",
          "paper_id": "bib.bib22",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        }
      ]
    },
    "2 Related Work": {
      "content": "The growing capabilities and prevalence of GMs (Brown et al., [2020]; Rombach et al., [2022]), along with the rising costs of fine-tuning and alignment, have driven research into controllability of GMs.\n\n##### Controlling LLMs\n\nActAdd(Turner et al., [2023]) uses a contrast prompt (one positive and one negative example) to construct a shift vector.\nCAA (Rimsky et al., [2023]) builds on ActAdd by calculating the difference vectors for steering based on a dataset of contrast pairs (rather than a single pair), adding the mean difference during inference time for steering.\nITI-c(Li et al., [2024]) estimates the shift vector orthogonal to the hyperplane learnt by a binary linear classifier on two sets of sentences, showing an increase of truthfulness on the TruthfulQA benchmark (Lin et al., [2021]). The same work proposes MassMean (ITI-m), with an additive vector computed as the difference in means for both sets of sentences.\nWith a different approach, AurA by Suau et al. ( [2024]) dampens activations proportionally to each neuron‚Äôs ability to classify toxic and non-toxic sentences, effectively mitigating toxicity.\nRepE by Zou et al. ( [2023]) proposes to compute steering vectors at inference time based on prompt pairs.\nWu et al. ( [2024]) considers activations relationships using a low-rank projection to exchange information with a counterfactual representation.\nOrthogonal to the works of activation steering, Dekoninck et al. ( [2023]) have proposed a language model arithmetic that can combine the outputs of multiple models in a principled way to simulatenously control multiple concepts, however requiring several (costly) inference passes on the LLM.\n\n##### Controlling T2I\n\nFew works tackle aligment of T2I models. Wallace et al. ( [2024]) align diffusion models with reinforcement learning (RL) on human comparison data. Yang et al. ( [2024]) remove the need of a reward model to reduce computational overhead of RL. Other works focus on fine-tuning to maximize a reward function (Clark et al., [2023]) or consistency to reference images (Lee et al., [2024]). The literature on T2I diffusion model controllability is more extensive and it commonly consists in training structure adapters (Mou et al., [2024]; Jiang et al., [2024]), style adapters (Stracke et al., [2024]; Ye et al., [2023]; Zhao et al., [2024]), or low-rank adapters (LoRAs) (Ruiz et al., [2023]; YEH et al., [2024]; Gandikota et al., [2023]; Stracke et al., [2024]). Closer to our work are inference-time interventions, which do not require backpropation through the model to train the conditioning mechanisms. Diffusion steering methods are a family of inference-time interventions, which directly modify the diffusion algorithm at test time for fine-grained control with additional prompts (Nair et al., [2023]; Brack et al., [2022]). To the best of our knowledge, our work is the first to explore inference-time interventions that are not specific to diffusion models and transfer across modalities.",
      "citations": [
        {
          "start_pos": 48,
          "end_pos": 68,
          "text": "Brown et al., [2020]",
          "paper_id": "bib.bib3",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": [
            "bib.bib51",
            "bib.bib2",
            "bib.bib5"
          ]
        },
        {
          "start_pos": 70,
          "end_pos": 92,
          "text": "Rombach et al., [2022]",
          "paper_id": "bib.bib37",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 235,
          "end_pos": 256,
          "text": "Turner et al., [2023]",
          "paper_id": "bib.bib46",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 355,
          "end_pos": 376,
          "text": "Rimsky et al., [2023]",
          "paper_id": "bib.bib36",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 581,
          "end_pos": 598,
          "text": "Li et al., [2024]",
          "paper_id": "bib.bib22",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 784,
          "end_pos": 802,
          "text": "Lin et al., [2021]",
          "paper_id": "bib.bib25",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 969,
          "end_pos": 989,
          "text": "Suau et al. ( [2024]",
          "paper_id": "bib.bib44",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1135,
          "end_pos": 1154,
          "text": "Zou et al. ( [2023]",
          "paper_id": "bib.bib57",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1234,
          "end_pos": 1252,
          "text": "Wu et al. ( [2024]",
          "paper_id": "bib.bib51",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": [
            "bib.bib3",
            "bib.bib2",
            "bib.bib5"
          ]
        },
        {
          "start_pos": 1428,
          "end_pos": 1453,
          "text": "Dekoninck et al. ( [2023]",
          "paper_id": "bib.bib7",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1739,
          "end_pos": 1762,
          "text": "Wallace et al. ( [2024]",
          "paper_id": "bib.bib48",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1846,
          "end_pos": 1866,
          "text": "Yang et al. ( [2024]",
          "paper_id": "bib.bib52",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2006,
          "end_pos": 2026,
          "text": "Clark et al., [2023]",
          "paper_id": "bib.bib6",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2064,
          "end_pos": 2082,
          "text": "Lee et al., [2024]",
          "paper_id": "bib.bib21",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2214,
          "end_pos": 2232,
          "text": "Mou et al., [2024]",
          "paper_id": "bib.bib28",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2234,
          "end_pos": 2254,
          "text": "Jiang et al., [2024]",
          "paper_id": "bib.bib19",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2273,
          "end_pos": 2295,
          "text": "Stracke et al., [2024]",
          "paper_id": "bib.bib42",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2297,
          "end_pos": 2314,
          "text": "Ye et al., [2023]",
          "paper_id": "bib.bib53",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2316,
          "end_pos": 2335,
          "text": "Zhao et al., [2024]",
          "paper_id": "bib.bib55",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2368,
          "end_pos": 2387,
          "text": "Ruiz et al., [2023]",
          "paper_id": "bib.bib38",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2389,
          "end_pos": 2407,
          "text": "YEH et al., [2024]",
          "paper_id": "bib.bib54",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2409,
          "end_pos": 2433,
          "text": "Gandikota et al., [2023]",
          "paper_id": "bib.bib11",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2435,
          "end_pos": 2457,
          "text": "Stracke et al., [2024]",
          "paper_id": "bib.bib42",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2786,
          "end_pos": 2805,
          "text": "Nair et al., [2023]",
          "paper_id": "bib.bib29",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2807,
          "end_pos": 2827,
          "text": "Brack et al., [2022]",
          "paper_id": "bib.bib2",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": [
            "bib.bib51",
            "bib.bib3",
            "bib.bib5"
          ]
        }
      ]
    },
    "3 Transporting Neuron Activations": {
      "content": "We represent the activations of a GM given an input sentence ùíô‚ààùíÆùíôùíÆ{\\\\bm{x}}\\\\in\\\\mathcal{S} as a tensor ‚ÑùM√óL√óKsuperscript‚ÑùùëÄùêøùêæ\\\\mathbb{R}^{M\\\\times L\\\\times K}, where MùëÄM is the number of activations per layer (assumed constant w.l.o.g. for simplicity), LùêøL the number of layers, and KùêæK the number of tokens decoded. We reduce each of the KùêæK values to only one using an arbitrary pooling operator œïitalic-œï\\\\phi. From now on we write ùêô:ùíÆ‚Üí‚ÑùM√óL:ùêô‚ÜíùíÆsuperscript‚ÑùùëÄùêø\\\\mathbf{Z}:\\\\mathcal{S}\\\\rightarrow\\\\mathbb{R}^{M\\\\times L} for the map that turns a sentence into a matrix of activations statistics, noting that ùêôùêô\\\\mathbf{Z} incorporates œïitalic-œï\\\\phi-pooling.\n\nWe consider two probability distributions on sentences pùëùp and qùëûq. We will view these sentences exclusively through the lens of their aggregated activation matrices, i.e., we will examine probability distributions Œº:=ùêô‚Äã‚ôØ‚Äãpassignùúáùêô‚ôØùëù\\\\mu:=\\\\mathbf{Z}\\\\sharp p and ŒΩ:=ùêô‚Äã‚ôØ‚Äãqassignùúàùêô‚ôØùëû\\\\nu:=\\\\mathbf{Z}\\\\sharp q, where we have used the pushforward operator ‚ôØ‚ôØ\\\\sharp.\nIn practice, we have access to samples ùíô1,‚Ä¶,ùíôn‚àºpsimilar-tosuperscriptùíô1‚Ä¶superscriptùíôùëõùëù{\\\\bm{x}}^{1},\\\\dots,{\\\\bm{x}}^{n}\\\\sim p and ùíö1,‚Ä¶,ùíön‚àºqsimilar-tosuperscriptùíö1‚Ä¶superscriptùíöùëõùëû{\\\\bm{y}}^{1},\\\\dots,{\\\\bm{y}}^{n}\\\\sim q.\nIn the case of toxicity mitigation, pùëùp covers toxic sentences and qùëûqnon-toxic ones.\nInput sentences (ùíôi)superscriptùíôùëñ({\\\\bm{x}}^{i}) and (ùíöi)superscriptùíöùëñ({\\\\bm{y}}^{i}) go through the model to yield activation matrices ùíÇi:=ùêô‚Äã(ùíôi)assignsuperscriptùíÇùëñùêôsuperscriptùíôùëñ{\\\\bm{a}}^{i}:=\\\\mathbf{Z}({\\\\bm{x}}^{i}) and ùíÉi=ùêô‚Äã(ùíöi)superscriptùíÉùëñùêôsuperscriptùíöùëñ{\\\\bm{b}}^{i}=\\\\mathbf{Z}({\\\\bm{y}}^{i}), each seen as i.i.d. samples from Œºùúá\\\\mu and ŒΩùúà\\\\nu respectively. This results in n+nùëõùëõn+n observations of M√óLùëÄùêøM\\\\times L matrices. In that context, our goal is to learn a transport map T:‚ÑùM√óL‚Üí‚ÑùM√óL:ùëá‚Üísuperscript‚ÑùùëÄùêøsuperscript‚ÑùùëÄùêøT:\\\\mathbb{R}^{M\\\\times L}\\\\rightarrow\\\\mathbb{R}^{M\\\\times L} from (ùíÇi,ùíÉi)superscriptùíÇùëñsuperscriptùíÉùëñ({\\\\bm{a}}^{i},{\\\\bm{b}}^{i}) that approximately pushes Œºùúá\\\\mu to ŒΩùúà\\\\nu, i.e.,T‚Äã‚ôØ‚ÄãŒº‚âàŒΩùëá‚ôØùúáùúàT\\\\sharp\\\\mu\\\\approx\\\\nu.\n\n### 3.1 Low Budget Estimators for Transport Maps\n\nSince a modern GM can have millions of activations, we seek maps TùëáT that are cheap to evaluate and store, with very few parameters. Following Suau et al. ( [2024]), we focus on maps that factorize independently along each dimension (each activation). TùëáT is therefore described as a collection of M‚ÄãLùëÄùêøML independent univariate maps, where each map indexed by m,lùëöùëôm,l should ideally map the marginal distribution of Œºùúá\\\\mu in that coordinate to that of ŒΩùúà\\\\nu. Recall that:\n\n###### Proposition 3.1 (Univariate Transport Maps)\n\n(Santambrogio, [2015], Chap.2)\nLet œÅ,œÑ‚ààùí´‚Äã(‚Ñù)ùúåùúèùí´‚Ñù\\\\rho,\\\\tau\\\\in\\\\mathcal{P}(\\\\mathbb{R}) be two univariate distributions. For any submodular cost c:‚Ñù√ó‚Ñù‚Üí‚Ñù:ùëê‚Üí‚Ñù‚Ñù‚Ñùc:\\\\mathbb{R}\\\\times\\\\mathbb{R}\\\\rightarrow\\\\mathbb{R} (i.e., such that ‚àÇc/‚àÇx‚Äã‚àÇy<0ùëêùë•ùë¶0\\\\partial c/\\\\partial x\\\\partial y<0), the optimal transport map TùëáT that can transport œÅùúå\\\\rho to œÑùúè\\\\tau is T‚ãÜ=QœÑ‚àòFœÅsuperscriptùëá‚ãÜsubscriptùëÑùúèsubscriptùêπùúåT^{\\\\star}=Q\\_{\\\\tau}\\\\circ F\\_{\\\\rho}, where QœÑsubscriptùëÑùúèQ\\_{\\\\tau} and FœÅsubscriptùêπùúåF\\_{\\\\rho} are respectively the quantile function of œÑùúè\\\\tau and the cumulant density function (CDF) of œÅùúå\\\\rho.\n\nEstimating and storing all M‚ÄãLùëÄùêøML transport maps would therefore require dealing with as many quantile and CDF functions. Unfortunately, parameterizing each of these could quickly become intractable, which is why we scale down ambitions to simplify further our working hypothesis to only consider affine transport maps.\n\n![Refer to caption]Figure 2: Transport maps using different methods. For distributions with œÉa=œÉbsubscriptùúéùëésubscriptùúéùëè\\\\sigma\\_{a}=\\\\sigma\\_{b} (left) all methods (except ActAdd) are equivalent. When œÉa‚â†œÉbsubscriptùúéùëésubscriptùúéùëè\\\\sigma\\_{a}\\\\neq\\\\sigma\\_{b} (right), vector-based methods (e.g.,ActAdd, ITI-c, Mean-AcT) diverge from the map defined by the samples. ActAdd shows a bias since it only uses one sample pair. The linear estimator is robust to differences in œÉùúé\\\\sigma.\n\n![Refer to caption]Figure 3: Actual œÉa,œÉbsubscriptùúéùëésubscriptùúéùëè\\\\sigma\\_{a},\\\\sigma\\_{b} for toxic and non-toxic sentences on Gemma2-2B, showing that œÉa‚â†œÉbsubscriptùúéùëésubscriptùúéùëè\\\\sigma\\_{a}\\\\neq\\\\sigma\\_{b} in real scenarios.\n\nEach of the M‚ÄãLùëÄùêøML activations we consider results in two families of reals: source (am‚Äã‚Ñì1,‚Ä¶,am‚Äã‚Ñìn)subscriptsuperscriptùëé1ùëö‚Ñì‚Ä¶subscriptsuperscriptùëéùëõùëö‚Ñì(a^{1}\\_{m\\\\ell},\\\\dots,a^{n}\\_{m\\\\ell}) and targets (bm‚Äã‚Ñì1,‚Ä¶,bm‚Äã‚Ñìn)subscriptsuperscriptùëè1ùëö‚Ñì‚Ä¶subscriptsuperscriptùëèùëõùëö‚Ñì(b^{1}\\_{m\\\\ell},\\\\dots,b^{n}\\_{m\\\\ell}). Simpifying notations, we drop mentions to mùëöm and ‚Ñì‚Ñì\\\\ell to focus on values A:=(a1,‚Ä¶,an)assignùê¥superscriptùëé1‚Ä¶superscriptùëéùëõA:=(a^{1},\\\\dots,a^{n}) and B:=(b1,‚Ä¶,bn)assignùêµsuperscriptùëè1‚Ä¶superscriptùëèùëõB:=(b^{1},\\\\dots,b^{n}) each in ‚Ñùnsuperscript‚Ñùùëõ\\\\mathbb{R}^{n}. We propose to consider the simple proxy task of finding affine maps that push Aùê¥A to BùêµB efficiently. The best such affine map is denoted Linear-AcT, and defined in [Definition3.1]Definition 3.1 (Linear-AcT) ‚Ä£ 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). Despite its simplicity, we show in [Section3.3]Generalization of Prior Inference-Time Interventions Work ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") that many state-of-the-art methods boil down to even simpler approximations and heuristics.\n\n###### Definition 3.1 (Linear-AcT)\n\nGiven samples A=(a1,‚Ä¶,an)ùê¥superscriptùëé1‚Ä¶superscriptùëéùëõA=(a^{1},\\\\dots,a^{n}) and B=(b1,‚Ä¶,bn)ùêµsuperscriptùëè1‚Ä¶superscriptùëèùëõB=(b^{1},\\\\dots,b^{n}) and a cost function c:‚Ñù√ó‚Ñù‚Üí‚Ñù:ùëê‚Üí‚Ñù‚Ñù‚Ñùc:\\\\mathbb{R}\\\\times\\\\mathbb{R}\\\\rightarrow\\\\mathbb{R}, the\nLinear-AcT map trained with these samples is defined as\n\n|     |     |     |\n| --- | --- | --- |\n|  | T‚Äã(a;A,B):=œâ‚Äãa+Œ≤,assignùëáùëéùê¥ùêµùúîùëéùõΩT(a;A,B):=\\\\omega a+\\\\beta, |  |\n\nwhere œâ,Œ≤ùúîùõΩ\\\\omega,\\\\beta are the minimizers of minœâ,Œ≤‚Äã‚àëic‚Äã(b(i),œâ‚Äãa(i)+Œ≤)subscriptùúîùõΩsubscriptùëñùëêsuperscriptùëèùëñùúîsuperscriptùëéùëñùõΩ\\\\min\\_{\\\\omega,\\\\beta}\\\\sum\\_{i}c\\\\big{(}b^{(i)},\\\\omega a^{(i)}+\\\\beta\\\\big{)}, and can be recovered in closed form when c‚Äã(a,b):=(a‚àíb)2assignùëêùëéùëèsuperscriptùëéùëè2c(a,b):=(a-b)^{2}, as\n\n|     |     |     |\n| --- | --- | --- |\n|  | œâ=‚àëia~(i)‚Äãb~(i)‚àëi(b~(i))2,Œ≤=mb‚àíœâ‚Äãma,formulae-sequenceùúîsubscriptùëñsuperscript~ùëéùëñsuperscript~ùëèùëñsubscriptùëñsuperscriptsuperscript~ùëèùëñ2ùõΩsubscriptùëöùëèùúîsubscriptùëöùëé\\\\omega=\\\\frac{\\\\sum\\_{i}\\\\tilde{a}^{(i)}\\\\tilde{b}^{(i)}}{\\\\sum\\_{i}(\\\\tilde{b}^{(i)})^{2}},\\\\quad\\\\beta=m\\_{b}-\\\\omega m\\_{a}, |  |\n\nwhere ma=1n‚Äã‚àëiai,mb=1n‚Äã‚àëibiformulae-sequencesubscriptùëöùëé1ùëõsubscriptùëñsuperscriptùëéùëñsubscriptùëöùëè1ùëõsubscriptùëñsuperscriptùëèùëñm\\_{a}=\\\\tfrac{1}{n}\\\\sum\\_{i}a^{i},m\\_{b}=\\\\tfrac{1}{n}\\\\sum\\_{i}b^{i} are mean values, and superscripted values with (i) refer to sorted values in increasing order, (a(1)‚â§‚ãØ‚â§a(n))superscriptùëé1‚ãØsuperscriptùëéùëõ(a^{(1)}\\\\leq\\\\dots\\\\leq a^{(n)}) and (b(1)‚â§‚ãØ‚â§b(n))superscriptùëè1‚ãØsuperscriptùëèùëõ(b^{(1)}\\\\leq\\\\dots\\\\leq b^{(n)}).\nAdditionally, a~(i)=a(i)‚àíma,b~(i)=b(i)‚àímbformulae-sequencesuperscript~ùëéùëñsuperscriptùëéùëñsubscriptùëöùëésuperscript~ùëèùëñsuperscriptùëèùëñsubscriptùëöùëè\\\\tilde{a}^{(i)}=a^{(i)}-m\\_{a},\\\\tilde{b}^{(i)}=b^{(i)}-m\\_{b} are sorted and recentered observations.\n\nAn important feature of Linear-AcT is that it can be composed with linear layers in the GM, resulting in no computational overhead at inference time (see [AppendixA]Appendix A Memory and Computational Aspects ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") for details).\nNote that the expression in Linear-AcT should not be confused with the closed-form known when transporting a Gaussian density with parameter (ma,œÉa)m\\_{a},\\\\sigma\\_{a}) towards a second (mb,œÉbsubscriptùëöùëèsubscriptùúéùëèm\\_{b},\\\\sigma\\_{b}), which is known (Peyr√© & Cuturi, [2019], Remark 2.31) to be T‚Äã(a)=œÉbœÉa‚Äãa+(mb‚àíœÉbœÉa‚Äãma).ùëáùëésubscriptùúéùëèsubscriptùúéùëéùëésubscriptùëöùëèsubscriptùúéùëèsubscriptùúéùëésubscriptùëöùëéT(a)=\\\\frac{\\\\sigma\\_{b}}{\\\\sigma\\_{a}}a+(m\\_{b}-\\\\frac{\\\\sigma\\_{b}}{\\\\sigma\\_{a}}m\\_{a}).\nNote that if one makes the additional assumption that œÉa=œÉbsubscriptùúéùëésubscriptùúéùëè\\\\sigma\\_{a}=\\\\sigma\\_{b}, then the affine Gaussian map becomes a mean shift or translation, with T‚Äã(a)=a+mb‚àímaùëáùëéùëésubscriptùëöùëèsubscriptùëöùëéT(a)=a+m\\_{b}-m\\_{a}. We call this very simple baseline Mean-AcT and show in [Section3.3]Generalization of Prior Inference-Time Interventions Work ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") that several methods in the literature indeed propose versions of a mean shift strategy.\n\n[Figure3]In 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") showcases the effect of different maps on toy data (iid, Gaussian). Note that methods based on mean-shift (ActAdd, ITI-c, Mean-AcT) can strongly over or undershoot, mapping samples out-of-distribution. Linear-AcT shows a good trade-off between in distribution mapping and low computational budget. We note that activations in current GMs show mostly unimodal distributions, but have different standard deviations for different behaviors as shown in [Figure3]In 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), making the linear choice a suitable one. Note that multimodal distributions would result in non-linear transport maps, which are beyond the scope of this work.\n\n##### Transport Support\n\nThe map in [Definition3.1]Definition 3.1 (Linear-AcT) ‚Ä£ 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") is estimated using nùëõn pairs of samples. In practice, nùëõn is in the order of hundreds, which results in a rough approximation of the true transport from Œºùúá\\\\mu to ŒΩùúà\\\\nu. It is fair to assume that the transport error will be higher for input samples in the tail of Œºùúá\\\\mu, given the scarcity of samples in that range.\nBecause transporting OOD samples may lead to unexpected behavior, and to be on the conservative side, we only transport new samples that are within the osberved support ùí¨o=\\[min‚Å°A,max‚Å°A\\]subscriptùí¨ùëúùê¥ùê¥\\\\mathcal{Q}\\_{o}=\\[\\\\min A,\\\\max A\\].\nUsing the support is important when Œºùúá\\\\mu is narrower than ŒΩùúà\\\\nu (typically in a mitigation setup). Unless stated otherwise, we use ùí¨osubscriptùí¨ùëú\\\\mathcal{Q}\\_{o} for concept mitigation and ùí¨‚àû=(‚àí‚àû,‚àû)subscriptùí¨\\\\mathcal{Q}\\_{\\\\infty}=(-\\\\infty,\\\\infty) for induction. [AppendixD]Appendix D The Effect of the Transport Support ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") shows an empirical validation of this choice.\n\n### 3.2 Sequential Iterative Maps\n\nWhile it might be possible to follow the template approach outlined in [Section3.1]Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") to apply univariate maps to each of the M‚ÄãLùëÄùêøML activations, this ignores the causal relationship across activations, where activations produced by a layer are processed by the next one, i.e.,ùíÇm,‚Ñì+1=f‚Ñì‚Äã(ùíÇm,‚Ñì)subscriptùíÇùëö‚Ñì1subscriptùëì‚ÑìsubscriptùíÇùëö‚Ñì{\\\\bm{a}}\\_{m,\\\\ell+1}=f\\_{\\\\ell}({\\\\bm{a}}\\_{m,\\\\ell}). Any intervention at the level of a layer must therefore be factored in accordingly before creating the intervention at the next one. To account for such causality, we estimate the transport maps for each layer incrementally: we first estimate the transport for the first layer (in the model graph), then we run inference again by applying the first layer map in order to estimate the map for the second layer, and so on until all maps are estimated. A similar approach is adopted in Zou et al. ( [2023]), and detailed with our tools in [Definition3.2]Definition 3.2 (Affine Causal Transport Map) ‚Ä£ 3.2 Sequential Iterative Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). In [AppendixC]Appendix C Causal vs. Simultaneous Estimation of AcT ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") we show that causal estimation achieves more effective conditioning than a simultaneous estimation. In this work, we use causal estimation for Mean-AcT and Linear-AcT.\n\n###### Definition 3.2 (Affine Causal Transport Map)\n\nFor m‚â§MùëöùëÄm\\\\leq M and ‚Ñì‚â§L‚Ñìùêø\\\\ell\\\\leq L, let Am:=(ùêöm,11,‚ãØ,ùêöm,1n)assignsubscriptùê¥ùëösubscriptsuperscriptùêö1ùëö1‚ãØsubscriptsuperscriptùêöùëõùëö1A\\_{m}:=({\\\\bm{a}}^{1}\\_{m,1},\\\\cdots,{\\\\bm{a}}^{n}\\_{m,1}) and Bm:=(ùêõm,11,‚ãØ,ùêõm,1n)assignsubscriptùêµùëösubscriptsuperscriptùêõ1ùëö1‚ãØsubscriptsuperscriptùêõùëõùëö1B\\_{m}:=({\\\\bm{b}}^{1}\\_{m,1},\\\\cdots,{\\\\bm{b}}^{n}\\_{m,1}) denote nùëõn families of MùëÄM activations for the first layer. Starting with ‚Ñì=1‚Ñì1\\\\ell=1, and setting\n\n|     |     |     |\n| --- | --- | --- |\n|  | Cm,1:=Am,1,Dm,1:=Bm,1,formulae-sequenceassignsubscriptùê∂ùëö1subscriptùê¥ùëö1assignsubscriptùê∑ùëö1subscriptùêµùëö1C\\_{m,1}:=A\\_{m,1},D\\_{m,1}:=B\\_{m,1}, |  |\n\ncompute and store the 2‚ÄãM2ùëÄ2M(œâm,Œ≤m)subscriptùúîùëösubscriptùõΩùëö(\\\\omega\\_{m},\\\\beta\\_{m}) parameters of all MùëÄM transport maps associated with these activations using [Definition3.1]Definition 3.1 (Linear-AcT) ‚Ä£ 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"):\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àÄm‚â§M,‚àÄ‚Ñì‚â§L,Tm,‚Ñì:=T‚Äã(‚ãÖ;Cm,‚Ñì,Dm,‚Ñì):‚Ñù‚Üí‚Ñù,:formulae-sequencefor-allùëöùëÄformulae-sequencefor-all‚Ñìùêøassignsubscriptùëáùëö‚Ñìùëá‚ãÖsubscriptùê∂ùëö‚Ñìsubscriptùê∑ùëö‚Ñì‚Üí‚Ñù‚Ñù\\\\forall m\\\\leq M,\\\\forall\\\\ell\\\\leq L,\\\\quad T\\_{m,\\\\ell}:=T(\\\\;\\\\cdot\\\\;;C\\_{m,\\\\ell},D\\_{m,\\\\ell}):\\\\mathbb{R}\\\\rightarrow\\\\mathbb{R}, |  |\n\nwhere observations Cùê∂C and Dùê∑D are refreshed recursively for each of their entries m‚â§MùëöùëÄm\\\\leq M, as ‚Ñì‚Ñì\\\\ell is incremented,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | C‚ãÖ,‚Ñì+1subscriptùê∂‚ãÖ‚Ñì1\\\\displaystyle C\\_{\\\\cdot,\\\\ell+1} | :=f‚Ñì‚Äã(\\[Tm,‚Ñì‚Äã(Cm,‚Ñì)\\]m),assignabsentsubscriptùëì‚Ñìsubscriptdelimited-\\[\\]subscriptùëáùëö‚Ñìsubscriptùê∂ùëö‚Ñìùëö\\\\displaystyle:=f\\_{\\\\ell}(\\[T\\_{m,\\\\ell}(C\\_{m,\\\\ell})\\]\\_{m})\\\\,, |  |\n|  | D‚ãÖ,‚Ñì+1subscriptùê∑‚ãÖ‚Ñì1\\\\displaystyle D\\_{\\\\cdot,\\\\ell+1} | :=f‚Ñì‚Äã(\\[Tm,‚Ñì‚Äã(Dm,‚Ñì)\\]m).assignabsentsubscriptùëì‚Ñìsubscriptdelimited-\\[\\]subscriptùëáùëö‚Ñìsubscriptùê∑ùëö‚Ñìùëö\\\\displaystyle:=f\\_{\\\\ell}(\\[T\\_{m,\\\\ell}(D\\_{m,\\\\ell})\\]\\_{m})\\\\,. |  |\n\nAt inference time, given a sentence ùê±ùê±{\\\\bm{x}}, we run the recursion starting from the first activation vector ùêö=(ùêöm,1)mùêösubscriptsubscriptùêöùëö1ùëö{\\\\bm{a}}=({\\\\bm{a}}\\_{m,1})\\_{m}, looping for 1‚â§‚Ñì‚â§L1‚Ñìùêø1\\\\leq\\\\ell\\\\leq L as ùêö‚Üêf‚Ñì(\\[Tm,‚Ñì(ùêöm)\\]m{\\\\bm{a}}\\\\leftarrow f\\_{\\\\ell}(\\[T\\_{m,\\\\ell}({\\\\bm{a}}\\_{m})\\]\\_{m}.\n\nInterpolation Between Measures Using Transport One can easily extend a transport map from measure Œºùúá\\\\mu to ŒΩùúà\\\\nu to one that is able to output an interpolating measure. The idea, outlined by McCann ( [1997])), consists in defining the following ŒªùúÜ\\\\lambda-parameterized map from any OT map TùëáT,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | T‚Äã(a,Œª)=(1‚àíŒª)‚Äãa+Œª‚ÄãT‚Äã(a),ùëáùëéùúÜ1ùúÜùëéùúÜùëáùëéT(a,\\\\lambda)=(1-\\\\lambda)a+\\\\lambda T(a), |  | (1) |\n\nwhere Œª‚àà\\[0,1\\]ùúÜ01\\\\lambda\\\\in\\[0,1\\] and Œª=1ùúÜ1\\\\lambda=1 recovers the full transport.\nConditioning GMs through OT allows the user to precisely control the presence of a concept with a continuous and interpretable knob(Œª)ùúÜ(\\\\lambda) during generation, not requiring expensive parameter search (Li et al., [2024]) or being limited by fixed, uncontrollable conditioning (Suau et al., [2024]). In applications such as diffusion, where the utility of the model is harder to assess, our interpretable strength is of key importance, as shown in [Section5]Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). Note that methods like ActAdd, CAA or ITI-c also have a conditioning strength parameter. However, this parameter is applied as a multiplier of a conditioning bias as T‚Äã(a,Œª)=a+Œª‚ÄãŒ≤ùëáùëéùúÜùëéùúÜùõΩT(a,\\\\lambda)=a+\\\\lambda\\\\beta (see [Section3.3]Generalization of Prior Inference-Time Interventions Work ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), thus making ŒªùúÜ\\\\lambda unbounded, harder to interpret and not robust with respect to different models, layers, and tasks.\n\n### 3.3 Generalization of Prior Inference-Time Interventions Work\n\nIn this section, we show how many earlier works can be interpreted as special cases of Linear-AcT.\n[Table1]In 3.3 Generalization of Prior Inference-Time Interventions Work ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") summarizes the intervention proposed by several recent methods, where we show that all methods propose a form of linear transport, and all of them (aside from Suau et al. ( [2022])) add a bias to the activations. The way this bias is pre-computed is what differentiates each method. Note that the parameter ŒªùúÜ\\\\lambda typically multiplies the bias, thus becoming unbounded and non-interpretable.\n\nAcT applies a linear transformation on activations that maximally preserves internal distributions ( [Section3.1]Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). Moreover, AcT interpolates between the current and transformed activations, making ŒªùúÜ\\\\lambda bounded between \\[0,1\\]01\\[0,1\\] and interpretable. An additional important aspect is that other methods propose various heuristics to choose the support, while AcT uses all activations or the observed input range (ùí¨osubscriptùí¨ùëú\\\\mathcal{Q}\\_{o}). Note that CAA, ITI-m and Mean-AcT use a difference in means. We subsume this family of methods reporting results for Mean-AcT, which has the additional advantage of an interpretable ŒªùúÜ\\\\lambda.\nAn additional difference is that many methods use the last token only (in pseudocode, œï‚Äã(ùíõ)=ùíõ‚Äã\\[‚Ä¶,‚àí1\\]italic-œïùíõùíõ‚Ä¶1\\\\phi({\\\\bm{z}})={\\\\bm{z}}\\[\\\\ldots,-1\\]). Detzerozero{}\\_{\\\\text{zero}} and AurA use max-pooling (œï‚Äã(ùíõ)=ùíõ.m‚Äãa‚Äãx‚Äã(‚àí1)formulae-sequenceitalic-œïùíõùíõùëöùëéùë•1\\\\phi({\\\\bm{z}})={\\\\bm{z}}.max(-1)). Conversely AcT uses an average across tokens (œï‚Äã(ùíõ)=ùíõ.m‚Äãe‚Äãa‚Äãn‚Äã(‚àí1)formulae-sequenceitalic-œïùíõùíõùëöùëíùëéùëõ1\\\\phi({\\\\bm{z}})={\\\\bm{z}}.mean(-1)), which we have found to be more robust.\n\nTable 1: Comparison of different inference-time interventions in the literature. All methods listed can be expressed as a specific form of a linear map. With AcT, the conditioning strength ŒªùúÜ\\\\lambda interpolated between the activation aùëéa and its transformed version (following [Equation1]In 3.2 Sequential Iterative Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), while existing methods use ŒªùúÜ\\\\lambda as a bias multiplier, thus becoming less interpretable and less robust to model/layer changes. As a result, many methods require a grid-search to find the best layer to intervene upon.\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n| Method | Transport | Parameters | Support | œïitalic-œï\\\\phi |\n| Detzerozero{}\\_{\\\\text{zero}}(Suau et al., [2022]) | œâ‚Äãa+Œ≤ùúîùëéùõΩ\\\\omega a+\\\\beta | œâ=0,Œ≤=mbformulae-sequenceùúî0ùõΩsubscriptùëöùëè\\\\omega=0,\\\\;\\\\beta=m\\_{b} | Any layer, a‚Äã‚à£AP‚Äã(A,B)>‚ÄãŒµùëéketAPùê¥ùêµùúÄ{a\\\\mid\\\\text{AP}(A,B)>\\\\varepsilon} | max |\n| ActAdd(Turner et al., [2023]) | œâ‚Äãa+Œª‚ÄãŒ≤ùúîùëéùúÜùõΩ\\\\omega a+\\\\lambda\\\\beta | œâ=1,Œ≤=a+‚àía‚àíformulae-sequenceùúî1ùõΩsuperscriptùëésuperscriptùëé\\\\omega=1,\\\\;\\\\beta=a^{+}-a^{-} | Layer search | last |\n| CAA (Rimsky et al., [2023]) | œâ‚Äãa+Œª‚ÄãŒ≤ùúîùëéùúÜùõΩ\\\\omega a+\\\\lambda\\\\beta | œâ=1,Œ≤=mb‚àímaformulae-sequenceùúî1ùõΩsubscriptùëöùëèsubscriptùëöùëé\\\\omega=1,\\\\;\\\\beta=m\\_{b}-m\\_{a} | Layer search | last |\n| RePE (Zou et al., [2023]) | œâ‚Äãa+Œª‚ÄãŒ≤ùúîùëéùúÜùõΩ\\\\omega a+\\\\lambda\\\\beta | œâ=1,Œ≤=a+‚Äã(ùíô)‚àía‚àí‚Äã(ùíô)formulae-sequenceùúî1ùõΩsuperscriptùëéùíôsuperscriptùëéùíô\\\\omega=1,\\\\;\\\\beta=a^{+}({\\\\bm{x}})-a^{-}({\\\\bm{x}}) | Layer search | last |\n| AurA(Suau et al., [2024]) | œâ‚Äãa+Œ≤ùúîùëéùõΩ\\\\omega a+\\\\beta | œâ=1‚àíG‚Äãi‚Äãn‚Äãi‚Äã(A,B),Œ≤=0formulae-sequenceùúî1ùê∫ùëñùëõùëñùê¥ùêµùõΩ0\\\\omega=1-Gini(A,B),\\\\;\\\\beta=0 | Any layer, a‚Äã‚à£AUROC‚Äã(A,B)>‚Äã0.5ùëéketAUROCùê¥ùêµ0.5{a\\\\mid\\\\text{AUROC}(A,B)>0.5} | max |\n| EAST (Rahn et al., [2024]) | œâ‚Äãa+Œª‚ÄãŒ≤ùúîùëéùúÜùõΩ\\\\omega a+\\\\lambda\\\\beta | œâ=1,Œ≤‚âàmbformulae-sequenceùúî1ùõΩsubscriptùëöùëè\\\\omega=1,\\\\;\\\\beta\\\\approx m\\_{b} | Layer search | last |\n| ITI-m(Li et al., [2024]) | œâ‚Äãa+Œª‚ÄãŒ≤ùúîùëéùúÜùõΩ\\\\omega a+\\\\lambda\\\\beta | œâ=1,Œ≤=mb‚àímaformulae-sequenceùúî1ùõΩsubscriptùëöùëèsubscriptùëöùëé\\\\omega=1,\\\\;\\\\beta=m\\_{b}-m\\_{a} | Attention head search | last |\n| ITI-c(Li et al., [2024]) | œâ‚Äãa+Œª‚ÄãŒ≤ùúîùëéùúÜùõΩ\\\\omega a+\\\\lambda\\\\beta | œâ=1,Œ≤=fC‚ÄãL‚ÄãS‚Äã(A,B)formulae-sequenceùúî1ùõΩsubscriptùëìùê∂ùêøùëÜùê¥ùêµ\\\\omega=1,\\\\;\\\\beta=f\\_{CLS}(A,B) | Attention head search | last |\n| Mean-AcT, [Section3.1]Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") | (1‚àíŒª)‚Äãa+Œª‚Äã(œâ‚Äãa+Œ≤)1ùúÜùëéùúÜùúîùëéùõΩ(1-\\\\lambda)a+\\\\lambda(\\\\omega a+\\\\beta) | œâ=1,Œ≤=mb‚àímaformulae-sequenceùúî1ùõΩsubscriptùëöùëèsubscriptùëöùëé\\\\omega=1,\\\\;\\\\beta=m\\_{b}-m\\_{a} | Any layer, a‚ààùí¨o‚Äã or ‚Äãùí¨‚àûùëésubscriptùí¨ùëú or subscriptùí¨a\\\\in\\\\mathcal{Q}\\_{o}\\\\text{ or }\\\\mathcal{Q}\\_{\\\\infty} | mean |\n| Linear-AcT, [Definition3.1]Definition 3.1 (Linear-AcT) ‚Ä£ 3.1 Low Budget Estimators for Transport Maps ‚Ä£ 3 Transporting Neuron Activations ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") | (1‚àíŒª)‚Äãa+Œª‚Äã(œâ‚Äãa+Œ≤)1ùúÜùëéùúÜùúîùëéùõΩ(1-\\\\lambda)a+\\\\lambda(\\\\omega a+\\\\beta) | œâ,Œ≤=arg‚Äãminœâ,Œ≤‚Äã‚àëi(b(i)‚àí(œâ‚Äãa(i)+Œ≤))2ùúîùõΩsubscriptargminùúîùõΩsubscriptùëñsuperscriptsuperscriptùëèùëñùúîsuperscriptùëéùëñùõΩ2\\\\omega,\\\\beta=\\\\operatorname\\*{arg\\\\,min}\\_{\\\\omega,\\\\beta}\\\\sum\\_{i}(b^{(i)}-(\\\\omega a^{(i)}+\\\\beta))^{2} | Any layer, a‚ààùí¨o‚Äã or ‚Äãùí¨‚àûùëésubscriptùí¨ùëú or subscriptùí¨a\\\\in\\\\mathcal{Q}\\_{o}\\\\text{ or }\\\\mathcal{Q}\\_{\\\\infty} | mean |",
      "citations": [
        {
          "start_pos": 2276,
          "end_pos": 2296,
          "text": "Suau et al. ( [2024]",
          "paper_id": "bib.bib44",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2663,
          "end_pos": 2683,
          "text": "Santambrogio, [2015]",
          "paper_id": "bib.bib39",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 8146,
          "end_pos": 8160,
          "text": "Cuturi, [2019]",
          "paper_id": "bib.bib31",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 12474,
          "end_pos": 12493,
          "text": "Zou et al. ( [2023]",
          "paper_id": "bib.bib57",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 16399,
          "end_pos": 16416,
          "text": "Li et al., [2024]",
          "paper_id": "bib.bib22",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 16474,
          "end_pos": 16493,
          "text": "Suau et al., [2024]",
          "paper_id": "bib.bib44",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 17942,
          "end_pos": 17962,
          "text": "Suau et al. ( [2022]",
          "paper_id": "bib.bib43",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 20275,
          "end_pos": 20294,
          "text": "Suau et al., [2022]",
          "paper_id": "bib.bib43",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 20481,
          "end_pos": 20502,
          "text": "Turner et al., [2023]",
          "paper_id": "bib.bib46",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 20662,
          "end_pos": 20683,
          "text": "Rimsky et al., [2023]",
          "paper_id": "bib.bib36",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 20844,
          "end_pos": 20862,
          "text": "Zou et al., [2023]",
          "paper_id": "bib.bib57",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 21054,
          "end_pos": 21073,
          "text": "Suau et al., [2024]",
          "paper_id": "bib.bib44",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 21277,
          "end_pos": 21296,
          "text": "Rahn et al., [2024]",
          "paper_id": "bib.bib35",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 21444,
          "end_pos": 21461,
          "text": "Li et al., [2024]",
          "paper_id": "bib.bib22",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 21631,
          "end_pos": 21648,
          "text": "Li et al., [2024]",
          "paper_id": "bib.bib22",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        }
      ]
    },
    "4 Experiments on LLMs": {
      "content": "We empirically verify the performance of AcT on pre-trained LLMs on toxicity mitigation ( [Section4.1]Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), general concept induction ( [Section4.2]Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), and truthfulness induction in particular ( [Section4.3]Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), showing the efficacy and robustness of AcT in different scenarios related to LLMs.\n\n### 4.1 Toxicity Mitigation in LLMs\n\nIt is known that LLMs are prone to generate toxic language (Wen et al., [2023]), especially when prompts are designed to elicit toxic behavior. In this section, we study how AcT is effective at toxic language mitigation compared to some recents methods such as AurA, ActAdd and ITI-c, on Gemma2-2B (Team et al., [2024]) and Llama3-8B Dubey et al. ( [2024]).\n\nWe prompt each LLM with 1000 randomly chosen prompts from RealToxicityPrompts (RTP) (Gehman et al., [2020]),known to induce toxic language generation. Then, we collect the generated continuation to each prompt and we evaluate toxicity with a ROBERTA-based classifier222 [https://huggingface.co/s-nlp/roberta\\_toxicity\\_classifier], as in Suau et al. ( [2024]). In addition, we also measure toxicity in a 0-shot manner by querying Llama3-8B-instruct as LLM-as-a-judge (Zheng et al., [2023]) (more details on the way we instructed the LLM-as-a-judge can be found in [AppendixE]Appendix E 0-shot toxicity classification ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). As a measure of general LLM utility we report in [Section4.1]Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"): (i) perplexity (PPL) on a fixed set of 20k Wikipedia sentences measured with the intervened model, (ii) PPL of the generated sentences measured with Mistral-7B (Jiang et al., [2023]) and (iii) MMLU (Hendrycks et al., [2021]) 5-shot accuracy using the intervened model.\n\nTable 2: Toxicity mitigation for Gemma2-2B and Llama3-8B, results over 5 runs. We intervene upon different layer types (layer column) and show the best layer per method. ITI-c, ActAdd and AcT have a strength parameter ŒªùúÜ\\\\lambda which we sweep. For each method, we report results for the ŒªùúÜ\\\\lambda that attained the best CLS toxicity that incurs less than +11+1 increase in PPL Wikipedia. AcT methods and provide best results for Œª=1ùúÜ1\\\\lambda=1, achieving up to 7.5√ó7.5\\\\times (Gemma2-2B) and 4.3√ó4.3\\\\times (Llama3-8B) CLS toxicity mitigation with Linear-AcT. ITI-c is very sensitive to ŒªùúÜ\\\\lambda as well as layer choice (see full results in [AppendixG]Appendix G Extended Results on Toxicity Mitigation ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), and AurA reaches up to 3.1√ó3.1\\\\times reduction.\n\n{NiceTabular}\ncllr‚Äîll‚Äîlll\nLayer Best ŒªùúÜ\\\\lambda CLS Tox. (%) ‚Üì‚Üì\\\\downarrow 0-shot Tox. (%) ‚Üì‚Üì\\\\downarrow PPL Wikipedia ‚Üì‚Üì\\\\downarrow PPL Mistral-7B ‚Üì‚Üì\\\\downarrow MMLU ‚Üë‚Üë\\\\uparrow\n\n\\\\Block6-1¬°\\\\rotate¬øGemma2-2B Original - - 4.17¬±0.32plus-or-minus4.170.324.17\\\\pm{0.32}13.42¬±1.08plus-or-minus13.421.0813.42\\\\pm{1.08} 13.98 6.68 53.1\n\nActAdd MLP 0.5 3.96¬±0.24plus-or-minus3.960.243.96\\\\pm{0.24}(1.1√ó({1.1}\\\\times)13.43¬±1.42plus-or-minus13.431.4213.43\\\\pm{1.42} 14.69 (+0.72) 6.67 (+0.05) 53.0 (-0.1)\n\nAurA MLP - 2.12¬±0.27plus-or-minus2.120.272.12\\\\pm{0.27}(2.0√ó({2.0}\\\\times)9.04¬±0.66plus-or-minus9.040.669.04\\\\pm{0.66} 14.18 (+0.21) 7.04 (+0.36) 53.0 (-0.1)\n\nITI-c Attention 8.0 0.74¬±0.18plus-or-minus0.740.18{0.74}\\\\pm{0.18}(5.6√ó({5.6}\\\\times)5.36¬±0.91plus-or-minus5.360.915.36\\\\pm{0.91} 14.90 (+0.92) 7.44 (+0.76) 52.6 (-0.5)\n\nMean-AcT Post-LN 1.0 0.54¬±0.44plus-or-minus0.540.44\\\\mathbf{0.54}\\\\pm{0.44}(7.7√ó({7.7}\\\\times)4.10¬±0.41plus-or-minus4.100.41\\\\mathbf{4.10}\\\\pm{0.41} 14.21 (+0.23) 7.59 (+0.90) 51.6 (-1.5)\n\nLinear-AcT Post-LN 1.0 0.56¬Ø¬±0.21plus-or-minus¬Ø0.560.21\\\\underline{0.56}\\\\pm{0.21}(7.5√ó({7.5}\\\\times)4.14¬Ø¬±0.55plus-or-minus¬Ø4.140.55\\\\underline{4.14}\\\\pm{0.55} 14.79 (+0.81) 7.99 (+1.31) 51.3 (-1.8)\n\n\\\\Block6-1¬°\\\\rotate¬øLlama3-8B Original - - 5.805.805.8015.0015.0015.00 9.06 5.68 65.3\n\nActAdd Attention 0.3 5.57¬±0.45plus-or-minus5.570.455.57\\\\pm{0.45}(1.0√ó({1.0}\\\\times)15.73¬±0.21plus-or-minus15.730.2115.73\\\\pm{0.21} 9.71 (+0.65) 5.85 (+0.16) 65.5 (+0.2)\n\nAurA MLP - 1.90¬±0.61plus-or-minus1.900.61{1.90}\\\\pm{0.61}(3.1√ó({3.1}\\\\times)8.12¬±0.85plus-or-minus8.120.85{8.12}\\\\pm{0.85} 9.52 (+0.45) 6.05 (+0.37) 65.5 (+0.2)\n\nITI-c Attention 3.0 1.60¬±0.22plus-or-minus1.600.221.60\\\\pm{0.22}(3.6√ó({3.6}\\\\times)6.53¬Ø¬±0.66plus-or-minus¬Ø6.530.66\\\\underline{6.53}\\\\pm{0.66} 9.48 (+0.42) 6.17 (+0.49) 64.7 (-0.6)\n\nMean-AcT Attention 1.0 1.38¬Ø¬±0.17plus-or-minus¬Ø1.380.17\\\\underline{1.38}\\\\pm{0.17}(4.2√ó({4.2}\\\\times)5.60¬±0.34plus-or-minus5.600.34\\\\mathbf{5.60}\\\\pm{0.34} 9.56 (+0.49) 6.36 (+0.68) 64.7 (-0.7)\n\nLinear-AcT Attention 1.0 1.35¬±0.39plus-or-minus1.350.39\\\\mathbf{1.35}\\\\pm{0.39}(4.3√ó({4.3}\\\\times)6.68¬±0.81plus-or-minus6.680.816.68\\\\pm{0.81} 9.56 (+0.49) 6.28 (+0.60) 64.5 (-0.8)\n\nLinear-AcT reduces toxicity up to 7.5√ó7.5\\\\times and is robust to ŒªùúÜ\\\\lambda, layer, and model choice\n\nWe observe that Linear-AcT achieves up to 7.5√ó7.5\\\\times reduction in toxicity on Gemma2-2B and 4.3√ó4.3\\\\times on Llama3-8B, with minimal impact on PPL and MMLU. Most importantly, AcT obtains the best results at Œª=1ùúÜ1\\\\lambda=1, which is in line with our OT formulation, since Œª=1ùúÜ1\\\\lambda=1 means full transport. Linear-AcT and Mean-AcT obtain similar toxicity mitigation results. ITI-c achieves 5.6√ó5.6\\\\times and 3.6√ó3.6\\\\times toxicity reduction on Gemma2-2B and Llama3-8B respectively. In line with the ITI-c paper findings, ITI-c performs well on attention, but is very sensitive to models and layers, as well as to the choice of ŒªùúÜ\\\\lambda\n(see a layer diagram in [AppendixB]Appendix B Intervened Layers ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and full tables and plots in [AppendixG]Appendix G Extended Results on Toxicity Mitigation ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). AurA achieves 2.0√ó2.0\\\\times and 3.1√ó3.1\\\\times toxicity reduction per model and ActAdd induces the mildest mitigation.\n\n### 4.2 Inducing Concepts in LLMs with AcT\n\n![Refer to caption]\n\n![Refer to caption]\n\nFigure 4: Concept induction using AcT (post-LN layers) and ITI-c (attention layers) on Gemma2-2B. We aggregate results over 7 WordNet concepts, generating 500 sentences at different intervention strength levels. We report concept presence with LLM-as-a-judge (p‚Äã(y‚Äãe‚Äãs)ùëùùë¶ùëíùë†p(yes)), and the PPL of the generated sentences using Mistral-7B. We plot the median (and 25/75 quantile band) across concepts and generations per level, showing that Linear-AcT achieves a peak of concept induction at Œª‚âà1ùúÜ1\\\\lambda\\\\approx 1, which is inline with our OT formulation. Other methods show different maxima.\n\nAcT allows transporting activations from distribution Œºùúá\\\\mu to ŒΩùúà\\\\nu (derived from sentence distributions pùëùp and qùëûq respectively). In an induction setting, pùëùp covers generic content, while qùëûq a specific concept that we want to induce. We mine the OneSec dataset (Scarlini et al., [2019]), collecting 700 sentences that contain a specific concept (qùëûq) and 700 sentences randomly sampled from other concepts (pùëùp). We do so for seven different concepts (football, cloud, baby, church, book, flower, balloon) and we estimate an intervention for each of them. We assess the presence of a concept in the generated text in a LLM-as-a-judge manner by querying Llama3-8B-instruct (LLM-as-a-judge details in [AppendixF]Appendix F 0-shot concept presence classification ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")).\n\nLinear-AcT can induce arbitrary concepts with consistent Œª=1ùúÜ1\\\\lambda=1\n\n[Figure4]In 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") shows the effect of increasing ŒªùúÜ\\\\lambda both on the presence of the concept, p‚Äã(y‚Äãe‚Äãs)ùëùùë¶ùëíùë†p(yes), and the PPL measured with Mistral-7B on the generated text. We intervene upon the most effective layers for each method according to the toxicity results: Post-LN for AcT and attention for ITI-c. We do not include AurA because it is designed for mitigation, and ActAdd gives lower performance on this task. For Linear-AcT, we observe a peak of concept presence at Œª‚âà1ùúÜ1\\\\lambda\\\\approx 1, with a median p‚Äã(y‚Äãe‚Äãs)=0.87ùëùùë¶ùëíùë†0.87p(yes)=0.87 (i.e., 87% of the generated sentences are classified as containing the induced concept) and an acceptable PPL=8.5PPL8.5\\\\text{PPL}=8.5. For Œª>1ùúÜ1\\\\lambda>1, the PPL quickly degrades and the presence of the concept diminishes.\nThis is also consistent with the toxicity mitigation experiments in [Section4.1]Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). Interestingly, the peak for Mean-AcT is at Œª‚âà2.5ùúÜ2.5\\\\lambda\\\\approx 2.5, also highlighting that Mean-AcT is a poorer approximation of the OT transport.\nNotably, ITI-c achieves a similar p‚Äã(y‚Äãe‚Äãs)ùëùùë¶ùëíùë†p(yes) and PPL as Linear-AcT for Œª‚âà5ùúÜ5\\\\lambda\\\\approx 5. However, note that ITI-c‚Äôs best ŒªùúÜ\\\\lambda is different than the ones for toxicity.\n[AppendixH]Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") contains generation examples.\n\nTable 3: TruthfulQA results for Gemma2-2B and Llama3-8B, results over 5 runs. We intervene upon different layers (layer column) and show the best per model. ITI-c, ActAdd and AcT have a strength parameter ŒªùúÜ\\\\lambda which we sweep, reporting the best ŒªùúÜ\\\\lambda result per model (MC1 Accuracy so that MMLU is within the best AcT MMLU ¬±‚ÄÑ0.1plus-or-minus0.1\\\\pm\\\\;0.1).\n\n{NiceTabular}\ncllr‚Äîll‚Äîl\nLayer Best ŒªùúÜ\\\\lambda MC1 Accuracy (%) ‚Üë‚Üë\\\\uparrow MC2 Accuracy (%) ‚Üë‚Üë\\\\uparrow MMLU Accuracy (%) ‚Üë‚Üë\\\\uparrow\n\n\\\\Block6-1¬°\\\\rotate¬øGemma2-2B Original - - 21.0521.0521.0532.8032.8032.8053.1053.1053.10\n\nActAdd MLP 3.0 23.01¬±0.00plus-or-minus23.010.0023.01\\\\pm{0.00} (+1.961.96+1.96) 34.76¬±0.00plus-or-minus34.760.0034.76\\\\pm{0.00} (+1.961.96+1.96) 52.83¬±0.00plus-or-minus52.830.0052.83\\\\pm{0.00} (‚àí0.270.27-0.27)\n\nAurA MLP - 21.20¬±0.10plus-or-minus21.200.1021.20\\\\pm{0.10} (+0.150.15+0.15) 32.88¬±0.22plus-or-minus32.880.2232.88\\\\pm{0.22} (+0.080.08+0.08) 52.73¬±0.07plus-or-minus52.730.0752.73\\\\pm{0.07} (‚àí0.370.37-0.37)\n\nITI-c MLP 2.0 24.53¬±0.11plus-or-minus24.530.1124.53\\\\pm{0.11} (+3.483.48+3.48) 37.06¬±0.38plus-or-minus37.060.3837.06\\\\pm{0.38} (+4.264.26+4.26) 51.39¬±0.41plus-or-minus51.390.4151.39\\\\pm{0.41} (‚àí1.711.71-1.71)\n\nMean-AcT All-LN 1.0 25.07¬Ø¬±0.20plus-or-minus¬Ø25.070.20\\\\underline{25.07}\\\\pm{0.20} (+4.024.02+4.02) 38.68¬Ø¬±0.30plus-or-minus¬Ø38.680.30\\\\underline{38.68}\\\\pm{0.30} (+5.885.88+5.88) 51.81¬±0.12plus-or-minus51.810.1251.81\\\\pm{0.12} (‚àí1.291.29-1.29)\n\nLinear-AcT All-LN 1.0 26.00¬±0.32plus-or-minus26.000.32\\\\textbf{26.00}\\\\pm{0.32} (+4.954.95+4.95) 40.17¬±0.24plus-or-minus40.170.24\\\\textbf{40.17}\\\\pm{0.24} (+7.377.37+7.37) 51.47¬±0.27plus-or-minus51.470.2751.47\\\\pm{0.27} (‚àí1.631.63-1.63)\n\n\\\\Block6-1¬°\\\\rotate¬øLlama3-8B Original - - 25.4625.4625.4640.2740.2740.2765.3565.3565.35\n\nActAdd Attention 0.7 26.19¬±0.00plus-or-minus26.190.0026.19\\\\pm{0.00} (+0.730.73+0.73) 40.88¬±0.00plus-or-minus40.880.0040.88\\\\pm{0.00} (+0.610.61+0.61) 65.42¬±0.00plus-or-minus65.420.0065.42\\\\pm{0.00} (+0.070.07+0.07)\n\nAurA MLP - 25.34¬±0.15plus-or-minus25.340.1525.34\\\\pm{0.15} (‚àí0.120.12-0.12) 40.47¬±0.20plus-or-minus40.470.2040.47\\\\pm{0.20} (+0.200.20+0.20) 65.37¬±0.06plus-or-minus65.370.0665.37\\\\pm{0.06} (+0.020.02+0.02)\n\nITI-c MLP 2.0 30.11¬±0.60plus-or-minus30.110.6030.11\\\\pm{0.60} (+4.654.65+4.65) 45.41¬±0.24plus-or-minus45.410.2445.41\\\\pm{0.24} (+5.145.14+5.14) 64.71¬±0.14plus-or-minus64.710.1464.71\\\\pm{0.14} (‚àí0.640.64-0.64)\n\nMean-AcT All-LN 1.0 32.88¬Ø¬±0.54plus-or-minus¬Ø32.880.54\\\\underline{32.88}\\\\pm{0.54} (+7.427.42+7.42) 48.23¬Ø¬±0.64plus-or-minus¬Ø48.230.64\\\\underline{48.23}\\\\pm{0.64} (+7.967.96+7.96) 64.83¬±0.14plus-or-minus64.830.1464.83\\\\pm{0.14} (‚àí0.520.52-0.52)\n\nLinear-AcT All-LN 1.0 33.22¬±0.22plus-or-minus33.220.22\\\\textbf{33.22}\\\\pm{0.22} (+7.767.76+7.76) 48.69¬±0.34plus-or-minus48.690.34\\\\textbf{48.69}\\\\pm{0.34} (+8.428.42+8.42) 64.78¬±0.15plus-or-minus64.780.1564.78\\\\pm{0.15} (‚àí0.570.57-0.57)\n\n### 4.3 Inducing truthfulness in LLMs with AcT\n\nOne particular concept that has gained attention in previous activation steering works is ‚Äútruthfulness‚Äù (Li et al., [2024]).\nWe study how AcT can increase truthfulness on Gemma2-2B and Llama3-8B, compared to the original model. Again, we compare to AurA, ActAdd and ITI-c. We evaluate all methods on the TruthfulQA multiple choice part that has been used in prior work (Lin et al., [2021]; Li et al., [2024]). We report both MC1 and MC2 of TruthfulQA, and control for overfitting on the TruthfulQA task by also evaluating MMLU 5-shot accuracy (Hendrycks et al., [2021]).\n\nAcT can induce truthfulness with consistent Œª=1ùúÜ1\\\\lambda=1.\n\nThe results of our experiments are summarized in Table [4.2]Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). As we can see, AcT can successfully induce truthfulness in both models in its default setting Œª=1ùúÜ1\\\\lambda=1 (corresponding to full transport). Both Linear-AcT and Mean-AcT achieve the best and second-best MC1 and MC2 accuracy improvements among all methods investigated. Linear-AcT increases MC1 by roughly 5%percent55\\\\% for Gemma2-2B and by almost 8%percent88\\\\% for Llama3-8B, which is about 1.5%percent1.51.5\\\\% and 3%percent33\\\\% more than the closest non-AcT baseline (ITI-c), while incurring even slightly less decrease in MMLU performance.\nFull results and experimental setup in [AppendixI]Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").",
      "citations": [
        {
          "start_pos": 889,
          "end_pos": 907,
          "text": "Wen et al., [2023]",
          "paper_id": "bib.bib50",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1128,
          "end_pos": 1147,
          "text": "Team et al., [2024]",
          "paper_id": "bib.bib45",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1163,
          "end_pos": 1184,
          "text": "Dubey et al. ( [2024]",
          "paper_id": "bib.bib8",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1273,
          "end_pos": 1294,
          "text": "Gehman et al., [2020]",
          "paper_id": "bib.bib12",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1526,
          "end_pos": 1546,
          "text": "Suau et al. ( [2024]",
          "paper_id": "bib.bib44",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1656,
          "end_pos": 1676,
          "text": "Zheng et al., [2023]",
          "paper_id": "bib.bib56",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2533,
          "end_pos": 2553,
          "text": "Jiang et al., [2023]",
          "paper_id": "bib.bib18",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 2571,
          "end_pos": 2595,
          "text": "Hendrycks et al., [2021]",
          "paper_id": "bib.bib13",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 8708,
          "end_pos": 8731,
          "text": "Scarlini et al., [2019]",
          "paper_id": "bib.bib40",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 14699,
          "end_pos": 14716,
          "text": "Li et al., [2024]",
          "paper_id": "bib.bib22",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 14964,
          "end_pos": 14982,
          "text": "Lin et al., [2021]",
          "paper_id": "bib.bib25",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 14984,
          "end_pos": 15001,
          "text": "Li et al., [2024]",
          "paper_id": "bib.bib22",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 15138,
          "end_pos": 15162,
          "text": "Hendrycks et al., [2021]",
          "paper_id": "bib.bib13",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        }
      ]
    },
    "5 Controlling Image Diffusion Models": {
      "content": "In this section, we show that AcT improves the controllability of text-to-image diffusion models (T2Is), a well-known challenge (Cao et al., [2024]). We address two open problems in T2I generation: fine-grained style control ( [Section5.1]Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")) and concept negation ( [Section5.2]Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). We show that off-the-shelf AcT succeeds at both tasks. In line with optimal transport theory and experimental results on LLMs ( [Section4]Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")), AcT consistently achieves the strongest conditioning with full strength (i.e.,Œª=1ùúÜ1\\\\lambda=1). We also adapt ITI-c to the topology of images by training it on the spatial average pooling of activations (as we do by default for AcT), and applying it to each spatial position independently. Remarkably, ITI-c succeeds at the fine-grained control task with our adaptation, but requires tuning ŒªùúÜ\\\\lambda, and it fails with concept negation.\n\n##### Setup.\n\nWe apply AcT on the denoising convolutional UNet of Stable Diffusion XL (SDXL) ( [Podell et al.,]) and the denoising transformer of FLUX.1.Schnell333 [https://blackforestlabs.ai/announcing-black-forest-labs/]. For FLUX, we use the T5-XXL text encoding modality (Raffel et al., [2020]) instead of CLIP (Radford et al., [2017]) to account for the effects of language modelling. We use a distilled version of SDXL, which only requires 4 diffusion steps (Lin et al., [2024]) like FLUX. We intervene upon all normalization layers in SDXL‚Äôs UNET and the output of most residual layers in FLUX (details in [SectionJ.8]J.8 Details on FLUX conditioning ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")). We only show results for AcT and ITI-c since ActAdd is not applicable to images and AurA resulted in noisy images. To measure the presence of a style or a concept, we use a CLIP zero-shot classifier with the classes (+) ‚ÄúA picture of a {style or concept}‚Äù and (-) ‚ÄúA picture of something‚Äù. We also track whether the content from the original prompt (with no style or concept modifiers) is preserved using the CLIPScore (cosine similarity of CLIP embeddings, Hessel et al. ( [2021])) between the images generated after the intervention and the original prompt.\n\n![Refer to caption]![Refer to caption]0.00.00.00.40.40.40.60.60.60.80.80.81.01.01.02.0‚Äã best2.0 best2.0\\\\text{ best}0.00.00.00.40.40.40.60.60.60.80.80.81.01.01.01.0‚Äã best1.0 best1.0\\\\text{ best}0.00.00.00.40.40.40.60.60.60.80.80.81.01.01.01.0‚Äã best1.0 best1.0\\\\text{ best}0.00.00.00.40.40.40.60.60.60.80.80.81.01.01.01.0‚Äã best1.0 best1.0\\\\text{ best}0.00.00.00.40.40.40.60.60.60.80.80.81.01.01.01.0‚Äã best1.0 best1.0\\\\text{ best}0.00.00.00.40.40.40.60.60.60.80.80.81.01.01.01.0‚Äã best1.0 best1.0\\\\text{ best}Figure 5: Linear-AcT allows controlled conditioning of SDXL and FLUX. ‚ÄúA cat resting on a laptop keyboard in a bedroom.‚Äù SDXL (left) and FLUX (right) intervened with ITI-c (top), Mean-AcT (middle) and Linear-AcT (bottom) respectively for the concept cyberpunk, with strength increasing from 0 and 1. We also show the image at the best ŒªùúÜ\\\\lambda according to the highest 0-shot score in [Figure6]In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"). Qualitatively, Linear-AcT shows the best trade-off between cyberpunk style increase and prompt semantics preservation.\n\n### 5.1 Style control\n\nA major challenge in T2I generation is fine-grained control. For example, while you can prompt SDXL to create a sketch of an object, it is hard to control the level of ‚Äúsketchiness‚Äù. Models like SDXL have a guidance parameter, but its use is limited since low guidance values tend to remove image semantics (see example in [SectionJ.1]J.1 Guidance Parameter in Existing Diffusion Models ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")).\n\nWe sample 2048 prompts from the COCO Captions (Chen et al., [2015]) training set and append a series of tags generated with Llama-8B-instruct to induce the following styles: anime, art nouveau, cyberpunk, impressionism, sketch, watercolor (see [Table13]In J.6 Style prompts ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") for details). Then we use the original prompt as the source distribution (pùëùp) and the style-modified prompt as the target distribution (qùëûq) to learn transport maps for style. To evaluate, we sample 512 prompts from the COCO Captions validation set and generate images with different intervention strengths.\n\nLinear-AcT is a robust method for fine-grained control in text-to-image generation.\n\n[Figure5(a)]In Figure 6 ‚Ä£ 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") shows that Linear-AcT on SDXL and FLUX increases the presence of a desired style, e.g., on SDXL from ‚àº12%similar-toabsentpercent12\\\\sim 12\\\\% to ‚àº95%similar-toabsentpercent95\\\\sim 95\\\\% of the generated images while keeping ‚àº80%similar-toabsentpercent80\\\\sim 80\\\\% of the similarity to the original prompt (Œª=1)\\\\lambda=1). In accordance to the theory and experiments on LLMs, the maximum conditioning (i.e., highest 0-shot score) for AcT is achieved at Œª=1ùúÜ1\\\\lambda=1 for both models. ITI-c can also accomplish fine-grained control, but its best performance is achieved at different ŒªùúÜ\\\\lambdas, equal to 2 and 1 for SDXL and FLUX respectively, which is in turn not consistent with the best ŒªùúÜ\\\\lambda found in LLM experiments. A closer look at images generated with ITI-c for best ŒªùúÜ\\\\lambda in [Figures5]In Setup. ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and [J.3]J.3 Style Control ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") reveals that ITI tends to exaggerate style traits while distorting the semantics. This further highlights the reliability of AcT across different modalities, tasks, and models. While quantitatively AcT and ITI-c perform well, we invite the reader to compare the quality of the generated images and styles in [Figures1]In Controlling Language and Diffusion Models by Transporting Activations\") and [5]Figure 5 ‚Ä£ Setup. ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), and in more examples in [SectionJ.3]J.3 Style Control ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").\n\n![Refer to caption]\n\n![Refer to caption]\n\n(a) Style control\n\n![Refer to caption]\n\n![Refer to caption]\n\n(b) Concept Negation\n\nFigure 6: Style control (a) and concept negation (b) on SDXL and FLUX. Top row shows the fraction of generated images classified (CLIP 0-shot) as containing a given concept or style. Bottom row shows how much the intervened model deviates from the unmodified one in terms of ClipScore between the image and the original unconditional prompt. Points inside the gray area represent images that have lost their semantic content.![Refer to caption]Figure 7: Concept Negation for ‚ÄúA plate of food with rice and beans, broccoli and meat. And a pink elephant is missing.‚Äù. (a) Linear-AcT on SDXL with transport strength ŒªùúÜ\\\\lambda linearly increasing from 0 to 1. Note how the presence of the pink elephant is prominent for the original model (leftmost image) and gradually disappears as ŒªùúÜ\\\\lambda increases.\n\n### 5.2 Concept Negation\n\nT2I diffusion models are known for struggling with concept negation ( [Li et al.,]; Hwang et al., [2024]). For example, Hwang et al. ( [2024]) showed that recent models such as Stable Diffusion (Rombach et al., [2022]) and DALL-E 3 (Betker et al., [2023]) are prone to generate a pink elephant when instructed not to generate one. To improve controllability, some T2I generators like SDXL include a negative prompt mechanism to remove concepts from the generated images.\nHowever, we found that both SDXL (CLIP encoder + negative prompt) and FLUX (T5-XXL encoder) still tend to generate unwanted concepts (see some examples in [SectionJ.2]J.2 Negative prompting ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\")).\n\nWe use the COCO Captions (Chen et al., [2015]) training set to sample 2048 prompts used to generate the images. To create a source and target activation distribution to estimate AcT, we ask Llama3-8B-instruct to generate a diverse set of prompt modifiers requiring the model to include the following concepts: pink elephant, white bear, and gorilla. The exact phrasing of the modifiers is provided in [Table14]In J.7 Concept prompts ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").\nWe estimate our transport maps from the modified prompts (pùëùp, with concept) to the unmodified prompts (qùëûq).\nTo evaluate the model, we sample 512 captions the COCO Captions validation set and ask Llama-3B-instruct to negate each of the modifiers used before (e.g., ‚Äúwithout a pink elephant‚Äù, ‚Äúa gorilla cannot be seen anywhere‚Äù) to generate images with unintended concept spillage such as the leftmost image in [Figure7]In 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") or the examples in [Figures17]In J.2 Negative prompting ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\") and [18]Figure 18 ‚Ä£ J.2 Negative prompting ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").\n\nLinear-AcT is a robust method for concept negation in text-to-image generation.\n\nIn [Figure5(b)]In Figure 6 ‚Ä£ 5.1 Style control ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\"), we observe that AcT is more effective at concept negation than ITI-c while better preserving the original semantics of the image, as indicated by the drop in 0-shot concept score for higher CLIPScore than ITI-c. ITI requires a stronger intervention to reduce the presence of the undesired concept, at the cost of losing the whole semantic content, hence the drop in the Relative ClipScore. Additional examples and images for each concept can be found in [SectionJ.4]J.4 Concept negation ‚Ä£ Appendix J Experimental Details and Extended Results for T2I generation ‚Ä£ Appendix I Experimental details and extended results on inducing Truthfulness ‚Ä£ Appendix H Extended results on concept induction on LLMs ‚Ä£ Acknowledgements ‚Ä£ Reproducibility Statement ‚Ä£ Ethics Statement ‚Ä£ 6 Limitations and Discussion ‚Ä£ 5.2 Concept Negation ‚Ä£ 5 Controlling Image Diffusion Models ‚Ä£ 4.3 Inducing truthfulness in LLMs with AcT ‚Ä£ 4.2 Inducing Concepts in LLMs with AcT ‚Ä£ 4.1 Toxicity Mitigation in LLMs ‚Ä£ 4 Experiments on LLMs ‚Ä£ Controlling Language and Diffusion Models by Transporting Activations\").",
      "citations": [
        {
          "start_pos": 129,
          "end_pos": 147,
          "text": "Cao et al., [2024]",
          "paper_id": "bib.bib4",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1592,
          "end_pos": 1607,
          "text": "Podell et al.,]",
          "paper_id": "bib.bib32",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1772,
          "end_pos": 1793,
          "text": "Raffel et al., [2020]",
          "paper_id": "bib.bib34",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1812,
          "end_pos": 1834,
          "text": "Radford et al., [2017]",
          "paper_id": "bib.bib33",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 1961,
          "end_pos": 1979,
          "text": "Lin et al., [2024]",
          "paper_id": "bib.bib24",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 3204,
          "end_pos": 3226,
          "text": "Hessel et al. ( [2021]",
          "paper_id": "bib.bib14",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 5658,
          "end_pos": 5677,
          "text": "Chen et al., [2015]",
          "paper_id": "bib.bib5",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": [
            "bib.bib1",
            "bib.bib2",
            "bib.bib51"
          ]
        },
        {
          "start_pos": 11211,
          "end_pos": 11222,
          "text": "Li et al.,]",
          "paper_id": "bib.bib23",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 11224,
          "end_pos": 11244,
          "text": "Hwang et al., [2024]",
          "paper_id": "bib.bib17",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 11260,
          "end_pos": 11281,
          "text": "Hwang et al. ( [2024]",
          "paper_id": "bib.bib17",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 11335,
          "end_pos": 11357,
          "text": "Rombach et al., [2022]",
          "paper_id": "bib.bib37",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": null
        },
        {
          "start_pos": 11373,
          "end_pos": 11394,
          "text": "Betker et al., [2023]",
          "paper_id": "bib.bib1",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": [
            "bib.bib5",
            "bib.bib2",
            "bib.bib51"
          ]
        },
        {
          "start_pos": 12420,
          "end_pos": 12439,
          "text": "Chen et al., [2015]",
          "paper_id": "bib.bib5",
          "single_citation": null,
          "citation_type": null,
          "nearest_citations": [
            "bib.bib1",
            "bib.bib2",
            "bib.bib51"
          ]
        }
      ]
    },
    "6 Limitations and Discussion": {
      "content": "In this work, we introduce Activation Transport (AcT), a general framework to achieve intuitive and fine-grained control of GMs. Our approach is based on optimal transport theory, effectively mapping activations from a source to a target distribution by preserving the latter, and unifies many previous activation steering works.\nWe show experimentally that our Linear-AcT approach generalizes well across models and tasks, for both LLMs and T2I architectures. Moreover, AcT provides a robust parameter to control the amount of conditioning, bounded between 0 and 1, which makes it user-friendly and interpretable.\n\nWhile effective, Linear-AcT assumes a linear transport between i.i.d. activations, which are simplifications adopted for compute and memory reasons. Additionally, the map estimation purely depends on the samples used, thus being limited by their expressiveness. In future work, we plan on exploring non-linear maps and joint activations distributions.",
      "citations": []
    }
  },
  "references": {
    "data": {
      "bib.bib1": {
        "id": "bib.bib1",
        "citation": "Betker et al. (2023)",
        "authors": "",
        "year": "",
        "title": "Improving image generation with better captions.",
        "venue": "Computer Science.",
        "pages": "",
        "url": "",
        "arxiv_id": "2006.11807",
        "doi": null,
        "sections": {},
        "abstract": "Image captioning is a multimodal problem that has drawn extensive attention\nin both the natural language processing and computer vision community. In this\npaper, we present a novel image captioning architecture to better explore\nsemantics available in captions and leverage that to enhance both image\nrepresentation and caption generation. Our models first construct\ncaption-guided visual relationship graphs that introduce beneficial inductive\nbias using weakly supervised multi-instance learning. The representation is\nthen enhanced with neighbouring and contextual nodes with their textual and\nvisual features. During generation, the model further incorporates visual\nrelationships using multi-task learning for jointly predicting word and\nobject/predicate tag sequences. We perform extensive experiments on the MSCOCO\ndataset, showing that the proposed framework significantly outperforms the\nbaselines, resulting in the state-of-the-art performance under a wide range of\nevaluation metrics."
      },
      "bib.bib2": {
        "id": "bib.bib2",
        "citation": "Brack et al. (2022)",
        "authors": "",
        "year": "",
        "title": "The stable artist: Steering semantics in diffusion latent space.",
        "venue": "arXiv preprint arXiv:2212.06013",
        "pages": "",
        "url": "",
        "arxiv_id": "2212.06013",
        "doi": null,
        "sections": {
          "1 Introduction": {
            "content": "Generative AI methods are improving rapidly, and using text-to-image diffusion models (DM) \\[ [12]), [10]), [11])\\]\nmakes it now possible to generate text and images simply based on text input, producing\nimpressive results on generative image tasks.\nUnfortunately, however, unraveling the concepts they learn during training and understanding how to influence what they actually output remains an open question. Users need deep knowledge of style-specific, long, and obfuscated prompts that usually eludes non-experts. Hence, high-quality images are rarely the result of the initially generated output, making a one-shot text-to-image generation infeasible.\nThe contrary is the case; text-guided image generation is a highly iterative process that requires interaction between the model and its user. Consequently, the human user is likely to generate many images with slight changes to the text prompt and other parameters in order to achieve the envisioned outcome. In this ‚Äòartist-in-the-loop‚Äô setting, fine-grained control over the generated output and its elements is imperative but hardly feasible through current methods. Small changes in the phrasing of the prompt text may lead to the generation of entirely different images.\n\nThe required amount of control is generally only possible through providing image masks in combination with an edit instruction of the masked area. This is inherently limited, as it discards important structural information and the global composition of the image. Furthermore, some tasks like texture or style changes are not achievable with inpainting techniques. Other approaches like Prompt-to-Prompt (P2P) \\[ [3])\\] rely on a form of soft, implicit masking by interacting with the attention masks of the input prompt. P2P utilizes the changes in attention maps between the original prompt and an edited prompt to target the relevant regions of the image. However, the granularity of control remains limited to the rather core-grained dimensions of the attention mask, and these approaches are inherently restricted to one editing operation at a time.\nOn the other hand, Composable Diffusion \\[ [7])\\] does enable conditioning on multiple concepts but only provides control over the initial image composition and does not support more subtle changes.\n\nWe present the Stable Artist, an iterative approach for guiding a generated image toward the desired output. The Stable Artist can change aspects of the initial image using Semantic Guidance (Sega) that provides fine-grained control of the image generation process by leveraging sophisticated operations in the model‚Äòs latent space. This enables subtle edits to images, changes in composition and style, as well as optimization of the overall artistic conception. Furthermore, Sega allows for probing the latent space of diffusion models to gain insights into how abstract concepts are represented by the model and how their interpretation reflects on the generated image. Sega also facilitates advanced arithmetics between concepts that were previously only observed for natural language embeddings \\[ [8]), [6]), [1])\\].\n\nThe Stable Artist supports editing with multiple concepts simultaneously while providing full control over the extent of changes to the image as well as the strength of each applied concept. All while using no masks‚Äîbe it explicit or based on attention‚Äîand without any fine-tuning.",
            "citations": null
          },
          "2 The Stable Artist": {
            "content": "Algorithm 1Semantic Guidance (Sega)\n\nmodel weights Œ∏ùúÉ\\\\theta, text condition t‚Äãe‚Äãx‚Äãtpùë°ùëíùë•subscriptùë°ùëùtext\\_{p}, edit texts List(t‚Äãe‚Äãx‚Äãteùë°ùëíùë•subscriptùë°ùëí{text\\_{e}}) and diffusion steps TùëáT\n\nsm‚àà\\[0,1\\]subscriptùë†ùëö01s\\_{m}\\\\in\\[0,1\\], ŒΩt=0=0subscriptùúàùë°00\\\\nu\\_{t=0}=0, Œ≤m‚àà\\[0,1)subscriptùõΩùëö01\\\\beta\\_{m}\\\\in\\[0,1), Œªi‚àà\\[‚àí1,1\\]superscriptùúÜùëñ11\\\\lambda^{i}\\\\in\\[-1,1\\], sei‚àà\\[0,5000\\]superscriptsubscriptùë†ùëíùëñ05000s\\_{e}^{i}\\\\in\\[0,5000\\], Œ¥‚àà\\[0,20\\]ùõø020\\\\delta\\\\in\\[0,20\\], t=0ùë°0t=0\\\n\\\nDM‚Üêinit-diffusion-model‚Äã(Œ∏)‚ÜêDMinit-diffusion-modelùúÉ\\\\text{DM}\\\\leftarrow\\\\text{init-diffusion-model}(\\\\theta)\\\n\\\ncp‚ÜêDM.encode‚Äã(t‚Äãe‚Äãx‚Äãtp)formulae-sequence‚ÜêsubscriptùëêùëùDMencodeùë°ùëíùë•subscriptùë°ùëùc\\_{p}\\\\leftarrow\\\\text{DM}.\\\\text{encode}(text\\_{p})\\\n\\\nList‚Äã(ce)‚ÜêDM.encode‚Äã(List‚Äã(t‚Äãe‚Äãx‚Äãte))formulae-sequence‚ÜêListsubscriptùëêùëíDMencodeListùë°ùëíùë•subscriptùë°ùëí\\\\textbf{List}(c\\_{e})\\\\leftarrow\\\\text{DM}.\\\\text{encode}(\\\\textbf{List}(text\\_{e}))\\\n\\\nl‚Äãa‚Äãt‚Äãe‚Äãn‚Äãt‚Äãs‚ÜêDM.sample‚Äã(s‚Äãe‚Äãe‚Äãd)formulae-sequence‚Üêùëôùëéùë°ùëíùëõùë°ùë†DMsampleùë†ùëíùëíùëëlatents\\\\leftarrow\\\\text{DM}.\\\\text{sample}(seed)\\\n\\\nwhilet‚â†Tùë°ùëát\\\\neq Tdo\\\n\\\nn‚àÖ,np‚ÜêDM.predict-noise‚Äã(l‚Äãa‚Äãt‚Äãe‚Äãn‚Äãt‚Äãs,cp)formulae-sequence‚ÜêsubscriptùëõsubscriptùëõùëùDMpredict-noiseùëôùëéùë°ùëíùëõùë°ùë†subscriptùëêùëùn\\_{\\\\emptyset},n\\_{p}\\\\leftarrow\\\\text{DM}.\\\\text{predict-noise}(latents,c\\_{p})\\\n\\\nList‚Äã(ne)‚ÜêDM.predict-noise‚Äã(List‚Äã(ce))formulae-sequence‚ÜêListsubscriptùëõùëíDMpredict-noiseListsubscriptùëêùëí\\\\textbf{List}(n\\_{e})\\\\leftarrow\\\\text{DM}.\\\\text{predict-noise}(\\\\textbf{List}(c\\_{e}))\\\n\\\nŒºt‚Üêùüé‚Üêsubscriptùúáùë°0\\\\mu\\_{t}\\\\leftarrow\\\\mathbf{0}‚ñ∑‚ñ∑\\\\triangleright [Eq.6]In One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") 0\\\n\\\nfor allnesubscriptùëõùëín\\_{e} in List‚Äã(ne)Listsubscriptùëõùëí\\\\textbf{List}(n\\_{e})do\\\n\\\nœïti‚Üêsei‚àó(np‚àíne)‚àí1‚Üêsuperscriptsubscriptitalic-œïùë°ùëñsuperscriptsubscriptùë†ùëíùëñsuperscriptsubscriptùëõùëùsubscriptùëõùëí1\\\\phi\\_{t}^{i}\\\\leftarrow s\\_{e}^{i}\\*(n\\_{p}-n\\_{e})^{-1}‚ñ∑‚ñ∑\\\\triangleright [Eq.7]In One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") 0\\\n\\\nif positive guidance then\\\n\\\nŒºti‚Üêwhere‚Äã(np‚àíne>Œª,max‚Äã(1,\\|œït\\|))‚Üêsuperscriptsubscriptùúáùë°ùëñwheresubscriptùëõùëùsubscriptùëõùëíùúÜmax1subscriptitalic-œïùë°\\\\mu\\_{t}^{i}\\\\leftarrow\\\\text{where}(n\\_{p}-n\\_{e}>\\\\lambda,\\\\text{max}(1,\\|\\\\phi\\_{t}\\|))‚ñ∑‚ñ∑\\\\triangleright [Eq.6]In One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") 0\\\n\\\nŒ≥ti‚ÜêŒºti‚àó(n‚àÖ‚àíne)‚Üêsuperscriptsubscriptùõæùë°ùëñsuperscriptsubscriptùúáùë°ùëñsubscriptùëõsubscriptùëõùëí\\\\gamma\\_{t}^{i}\\\\leftarrow\\\\mu\\_{t}^{i}\\*(n\\_{\\\\emptyset}-n\\_{e})‚ñ∑‚ñ∑\\\\triangleright [Eqs.4]In One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") and [5]Equation 5 ‚Ä£ One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") 0\\\n\\\nelse\\\n\\\nŒºti‚Üêwhere‚Äã(np‚àíne<Œª,max‚Äã(1,\\|œït\\|))‚Üêsuperscriptsubscriptùúáùë°ùëñwheresubscriptùëõùëùsubscriptùëõùëíùúÜmax1subscriptitalic-œïùë°\\\\mu\\_{t}^{i}\\\\leftarrow\\\\text{where}(n\\_{p}-n\\_{e}<\\\\lambda,\\\\text{max}(1,\\|\\\\phi\\_{t}\\|))‚ñ∑‚ñ∑\\\\triangleright [Eq.6]In One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") 0\\\n\\\nŒ≥ti‚ÜêŒºti‚àó(ne‚àín‚àÖ)‚Üêsuperscriptsubscriptùõæùë°ùëñsuperscriptsubscriptùúáùë°ùëñsubscriptùëõùëísubscriptùëõ\\\\gamma\\_{t}^{i}\\\\leftarrow\\\\mu\\_{t}^{i}\\*(n\\_{e}-n\\_{\\\\emptyset})‚ñ∑‚ñ∑\\\\triangleright [Eqs.4]In One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") and [5]Equation 5 ‚Ä£ One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") 0\\\n\\\nendif\\\n\\\nendfor\\\n\\\nŒ≥t‚Üê‚àëi‚ààIgi‚àóŒ≥ti‚Üêsubscriptùõæùë°subscriptùëñùêºsubscriptùëîùëñsuperscriptsubscriptùõæùë°ùëñ\\\\gamma\\_{t}\\\\leftarrow\\\\sum\\\\nolimits\\_{i\\\\in I}g\\_{i}\\*\\\\gamma\\_{t}^{i}‚ñ∑‚ñ∑\\\\triangleright [Eq.10]In Beyond One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\")\\\n\\\nŒ≥t‚ÜêŒ≥t+sm‚àóŒΩt‚Üêsubscriptùõæùë°subscriptùõæùë°subscriptùë†ùëösubscriptùúàùë°\\\\gamma\\_{t}\\\\leftarrow\\\\gamma\\_{t}+s\\_{m}\\*\\\\nu\\_{t}‚ñ∑‚ñ∑\\\\triangleright [Eq.8]In One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") 0\\\n\\\nŒΩt+1‚ÜêŒ≤m‚àóŒΩt‚Äã(1‚àíŒ≤m)‚àóŒ≥t‚Üêsubscriptùúàùë°1subscriptùõΩùëösubscriptùúàùë°1subscriptùõΩùëösubscriptùõæùë°\\\\nu\\_{t+1}\\\\leftarrow\\\\beta\\_{m}\\*\\\\nu\\_{t}(1-\\\\beta\\_{m})\\*\\\\gamma\\_{t}‚ñ∑‚ñ∑\\\\triangleright [Eq.9]In One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") 0\\\n\\\nift‚â•Œ¥ùë°ùõøt\\\\geq\\\\deltathen\\\n\\\np‚Äãr‚Äãe‚Äãd‚Üêsg‚àó(np‚àín‚àÖ‚àíŒ≥t)‚Üêùëùùëüùëíùëësubscriptùë†ùëîsubscriptùëõùëùsubscriptùëõsubscriptùõæùë°pred\\\\leftarrow s\\_{g}\\*(n\\_{p}-n\\_{\\\\emptyset}-\\\\gamma\\_{t})‚ñ∑‚ñ∑\\\\triangleright [Sec.2.2]One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") 0\\\n\\\nelse\\\n\\\np‚Äãr‚Äãe‚Äãd‚Üêsg‚àó(np‚àín‚àÖ)‚Üêùëùùëüùëíùëësubscriptùë†ùëîsubscriptùëõùëùsubscriptùëõpred\\\\leftarrow s\\_{g}\\*(n\\_{p}-n\\_{\\\\emptyset})‚ñ∑‚ñ∑\\\\triangleright [Eq.2]In 2.1 Guided Diffusion ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") 0\\\n\\\nendif\\\n\\\nl‚Äãa‚Äãt‚Äãe‚Äãn‚Äãt‚Äãs‚ÜêDM.update-latents‚Äã(p‚Äãr‚Äãe‚Äãd,l‚Äãa‚Äãt‚Äãe‚Äãn‚Äãt‚Äãs)formulae-sequence‚Üêùëôùëéùë°ùëíùëõùë°ùë†DMupdate-latentsùëùùëüùëíùëëùëôùëéùë°ùëíùëõùë°ùë†latents\\\\leftarrow\\\\text{DM}.\\\\text{update-latents}(pred,latents)\\\n\\\nt‚Üêt+1‚Üêùë°ùë°1t\\\\leftarrow t+1\\\n\\\nendwhile\\\n\\\ni‚Äãm‚Äãa‚Äãg‚Äãe‚ÜêDM.decode‚Äã(l‚Äãa‚Äãt‚Äãe‚Äãn‚Äãt‚Äãs)formulae-sequence‚ÜêùëñùëöùëéùëîùëíDMdecodeùëôùëéùë°ùëíùëõùë°ùë†image\\\\leftarrow\\\\text{DM}.\\\\text{decode}(latents)\\\n\\\n![Refer to caption](a)A (latent) diffusion process inherently organizes concepts and learns implicitly relationships between them, although there is no supervision.\\\n\\\n![Refer to caption](b)Guidance arithmetic: Guiding the image ‚Äòa portrait of a king‚Äô (left) using ‚Äòking‚Äô‚àí-‚Äòmale‚Äô++‚Äòfemale‚Äô results in an images of a ‚Äòqueen‚Äô (right).\\\n\\\nFigure 2: Semantic guidance (SEGA) applied to the image ‚Äòa portrait of a king‚Äô using ‚Äòking‚Äô‚àí-‚Äòmale‚Äô++‚Äòfemale‚Äô. (Best viewed in color)\\\n\\\nLet us now devise the Stable Artist111In this context, ‚ÄòStable‚Äô is not only a nod to Stable Diffusion that builds the base of our implementation. Additionally, the Stable Artist behaves stable with respect to its control over the generated image., a semantic image editing technique for latent diffusion models. Roughly speaking, it generalizes the generative diffusion process by combining text conditioning through classifier-free guidance with editing concepts targeting dedicated parts of the image. In doing so, it substantially extends the combination of latents introduced in composable diffusion \\[ [7])\\] and is a general-purpose advancement of Safe Latent Diffusion (SLD) \\[ [13])\\]; while SLD suppresses one inappropriate direction during generation, the Stable Artist features a variable number of directions that can be\\\nsuppressed or enforced.\\\n\\\n### 2.1 Guided Diffusion\\\n\\\nThe first step towards the Stable Artist is guided diffusion. Specifically, diffusion models iteratively denoise a Gaussian distributed variable to produce samples of a learned data distribution. For text-to-image generation, the model is conditioned on a text prompt pùëùp and guided towards an image, faithful to that prompt. The training objective of a diffusion model x^Œ∏subscript^ùë•ùúÉ\\\\hat{x}\\_{\\\\theta}, can be written as\\\n\\\n|     |     |     |     |\\\n| --- | --- | --- | --- |\\\n|  | ùîºùê±,ùêúp,œµ,t‚Äã\\[wt‚Äã‚Äñùê±^Œ∏‚Äã(Œ±t‚Äãùê±+œât‚Äãœµ,ùêúp)‚àíùê±‚Äñ22\\]subscriptùîºùê±subscriptùêúùëùitalic-œµùë°delimited-\\[\\]subscriptùë§ùë°subscriptsuperscriptnormsubscript^ùê±ùúÉsubscriptùõºùë°ùê±subscriptùúîùë°italic-œµsubscriptùêúùëùùê±22\\\\mathbb{E}\\_{\\\\mathbf{x,c}\\_{p}\\\\mathbf{,\\\\epsilon},t}\\\\left\\[w\\_{t}\\|\\|\\\\mathbf{\\\\hat{x}}\\_{\\\\theta}(\\\\alpha\\_{t}\\\\mathbf{x}+\\\\omega\\_{t}\\\\mathbf{\\\\epsilon},\\\\mathbf{c}\\_{p})-\\\\mathbf{x}\\|\\|^{2}\\_{2}\\\\right\\] |  | (1) |\\\n\\\nwhere (ùê±,ùêúp)ùê±subscriptùêúùëù(\\\\mathbf{x,c}\\_{p}) is conditioned on text prompt pùëùp, tùë°t is drawn from a uniform distribution t‚àºùí∞‚Äã(\\[0,1\\])similar-toùë°ùí∞01t\\\\sim\\\\mathcal{U}(\\[0,1\\]), œµitalic-œµ\\\\epsilon sampled from a Gaussian œµ‚àºùí©‚Äã(0,ùêà)similar-toitalic-œµùí©0ùêà\\\\mathbf{\\\\epsilon}\\\\sim\\\\mathcal{N}(0,\\\\mathbf{I}), and wt,œât,Œ±tsubscriptùë§ùë°subscriptùúîùë°subscriptùõºùë°w\\_{t},\\\\omega\\_{t},\\\\alpha\\_{t} influence image fidelity depending on tùë°t.\\\nConsequently, the DM is trained to denoise ùê≥t:=ùê±+œµassignsubscriptùê≥ùë°ùê±italic-œµ\\\\mathbf{z}\\_{t}:=\\\\mathbf{x}+\\\\mathbf{\\\\epsilon} to yield ùê±ùê±\\\\mathbf{x} with the squared error as a loss. At inference, the DM is sampled using the model‚Äôs prediction of ùê±=(ùê≥t‚àíœµŒ∏¬Ø)ùê±subscriptùê≥ùë°¬Øsubscriptitalic-œµùúÉ\\\\mathbf{x}=(\\\\mathbf{z}\\_{t}-\\\\mathbf{\\\\bar{\\\\epsilon\\_{\\\\theta}}}), with œµŒ∏¬Ø¬Øsubscriptitalic-œµùúÉ{\\\\bar{\\\\epsilon\\_{\\\\theta}}} as described below.\\\n\\\nClassifier-free guidance \\[ [5])\\] is a conditioning method using a purely generative diffusion model, eliminating the need for an additional pre-trained classifier. The approach randomly drops the text conditioning ùêúpsubscriptùêúùëù\\\\mathbf{c}\\_{p} with a fixed probability during training, resulting in a joint model for unconditional and conditional objectives.\\\nDuring inference the score estimates for the ùê±ùê±\\\\mathbf{x}-prediction are adjusted so that:\\\n\\\n|     |     |     |     |\\\n| --- | --- | --- | --- |\\\n|  | œµ~Œ∏‚Äã(ùê≥t,ùêúp):=œµŒ∏‚Äã(ùê≥t)+sg‚Äã(œµŒ∏‚Äã(ùê≥t,ùêúp)‚àíœµŒ∏‚Äã(ùê≥t))assignsubscript~italic-œµùúÉsubscriptùê≥ùë°subscriptùêúùëùsubscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptùë†ùëîsubscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptùêúùëùsubscriptitalic-œµùúÉsubscriptùê≥ùë°\\\\mathbf{\\\\tilde{\\\\epsilon}}\\_{\\\\theta}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p}):=\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t})+s\\_{g}(\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p})-\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t})) |  | (2) |\\\n\\\nwith guidance scale sgsubscriptùë†ùëîs\\_{g} and œµŒ∏subscriptitalic-œµùúÉ\\\\epsilon\\_{\\\\theta} defining the noise estimate with parameters Œ∏ùúÉ\\\\theta. Intuitively, the unconditioned œµitalic-œµ\\\\epsilon-prediction is pushed in the direction of the conditioned one, with the sgsubscriptùë†ùëîs\\_{g} determining the extent of the adjustment.\\\n\\\n### 2.2 Semantic Guidance\\\n\\\nNow, the main idea is to\\\ninfluence the diffusion process along several directions. To achieve this, Sega substantially extends the principles introduced in classifier-free guidance.\\\nThe idea is to use\\\nmultiple editing prompts eisubscriptùëíùëñe\\_{i} targeting arbitrary concepts of the generated image, in addition to the text prompt pùëùp.\\\n\\\n#### One Direction.\\\n\\\nTo introduce semantic guidance, let us start off with a single direction, i.e., editing prompt.\\\nSpecifically, we use three œµitalic-œµ\\\\epsilon-predictions with the goal of moving the unconditioned score estimate œµŒ∏‚Äã(ùê≥t)subscriptitalic-œµùúÉsubscriptùê≥ùë°\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t}) towards the prompt conditioned estimate œµŒ∏‚Äã(ùê≥t,ùêúp)subscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptùêúùëù\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p}) and simultaneously away or also towards the concept conditioned estimate œµŒ∏‚Äã(ùê≥t,ùêúe)subscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptùêúùëí\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{e}), depending on the editing direction. Formally, we compute\\\n\\\n|     |     |     |     |     |\\\n| --- | --- | --- | --- | --- |\\\n|  | œµ¬ØŒ∏(\\\\displaystyle\\\\mathbf{\\\\bar{\\\\epsilon}}\\_{\\\\theta}( | ùê≥t,ùêúp,ùêúe)=\\\\displaystyle\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p},\\\\mathbf{c}\\_{e})= |  |\\\n|  |  | œµŒ∏‚Äã(ùê≥t)+sg‚Äã(œµŒ∏‚Äã(ùê≥t,ùêúp)‚àíœµŒ∏‚Äã(ùê≥t)‚àíŒ≥‚Äã(ùê≥t,ùêúp,ùêúe))subscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptùë†ùëîsubscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptùêúùëùsubscriptitalic-œµùúÉsubscriptùê≥ùë°ùõæsubscriptùê≥ùë°subscriptùêúùëùsubscriptùêúùëí\\\\displaystyle\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t})+s\\_{g}\\\\big{(}\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p})-\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t})-\\\\gamma(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p},\\\\mathbf{c}\\_{e})\\\\big{)} |  | (3) |\\\n\\\nwith the semantic guidance term Œ≥ùõæ\\\\gamma\\\n\\\n|     |     |     |     |\\\n| --- | --- | --- | --- |\\\n|  | Œ≥‚Äã(ùê≥t,ùêúp,ùêúe)=Œº‚Äã(ùêúp,ùêúe;se,Œª)‚Äãœà‚Äã(ùê≥t,ùêúp,ùêúe)ùõæsubscriptùê≥ùë°subscriptùêúùëùsubscriptùêúùëíùúásubscriptùêúùëùsubscriptùêúùëísubscriptùë†ùëíùúÜùúìsubscriptùê≥ùë°subscriptùêúùëùsubscriptùêúùëí\\\\gamma(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p},\\\\mathbf{c}\\_{e})=\\\\mu(\\\\mathbf{c}\\_{p},\\\\mathbf{c}\\_{e};s\\_{e},\\\\lambda)\\\\psi(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p},\\\\mathbf{c}\\_{e}) |  | (4) |\\\n\\\nwhere Œºùúá\\\\mu applies an editing guidance scale sesubscriptùë†ùëís\\_{e} element-wise, and œàùúì\\\\psi depends on the editing direction:\\\n\\\n|     |     |     |     |     |\\\n| --- | --- | --- | --- | --- |\\\n|  | œà(ùê≥t,\\\\displaystyle\\\\psi(\\\\mathbf{z}\\_{t}, | ùêúp,ùêúe)=\\\\displaystyle\\\\mathbf{c}\\_{p},\\\\mathbf{c}\\_{e})= |  |\\\n|  |  | {œµŒ∏‚Äã(ùê≥t)‚àíœµŒ∏‚Äã(ùê≥t,ùêúe)if pos. guidance‚àí(œµŒ∏‚Äã(ùê≥t)‚àíœµŒ∏‚Äã(ùê≥t,ùêúe))if neg. guidancecasessubscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptùêúùëíif pos. guidancesubscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptùêúùëíif neg. guidance\\\\displaystyle\\\\begin{cases}\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t})-\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{e})&\\\\text{if pos. guidance}\\\\\\<br>-(\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t})-\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{e}))&\\\\text{if neg. guidance}\\\\end{cases} |  | (5) |\\\n\\\nConsequently, changing the guidance direction is reflected by the direction of the vector between œµŒ∏‚Äã(ùê≥t,ùêúe)subscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptùêúùëí\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{e}) and œµŒ∏‚Äã(ùê≥t)subscriptitalic-œµùúÉsubscriptùê≥ùë°\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t}).\\\n\\\n![Refer to caption]Figure 3: Image editing, performed using semantic guiding of the Stable Artist. All images generated from the same initial noise latent using the prompt ‚Äòa picture of a car‚Äô. Editing prompts denoted in blue. Arrows indicate the editing direction. The Stable Artist can act on explicit edits for local and global changes of the image, as well as abstract editing concepts. (Best viewed in color)\\\n\\\nBut back to Œºùúá\\\\mu. It considers those dimensions of the prompt conditioned estimate that are relevant to the defined editing prompt eùëíe. To this end, Œºùúá\\\\mu scales the element-wise difference between the prompt conditioned estimate and edit conditioned estimate by sesubscriptùë†ùëís\\_{e} for all elements where this difference is below or above a threshold ŒªùúÜ\\\\lambda and equals 00 otherwise:\\\n\\\n|     |     |     |     |\\\n| --- | --- | --- | --- |\\\n|  | Œº‚Äã(ùêúp,ùêúe;se,Œª)=ùúásubscriptùêúùëùsubscriptùêúùëísubscriptùë†ùëíùúÜabsent\\\\displaystyle\\\\mu(\\\\mathbf{c}\\_{p},\\\\mathbf{c}\\_{e};s\\_{e},\\\\lambda)= |  |\\\n|  | {max‚Äã(1,\\|œï\\|),where ‚ÄãœµŒ∏‚Äã(ùê≥t,ùêúp)‚äñœµŒ∏‚Äã(ùê≥t,ùêúe)‚â∂Œª0,otherwisecasesmax1italic-œïless-than-or-greater-thansymmetric-differencewhere subscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptùêúùëùsubscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptùêúùëíùúÜ0otherwise\\\\displaystyle\\\\begin{cases}\\\\text{max}(1,\\|\\\\phi\\|),&\\\\text{where }\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p})\\\\ominus\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{e})\\\\lessgtr\\\\lambda\\\\\\<br>0,&\\\\text{otherwise}\\\\end{cases} |  | (6) |\\\n|  | withœï=se‚Äã(œµŒ∏‚Äã(ùê≥t,ùêúp)‚àíœµŒ∏‚Äã(ùê≥t,ùêúe))‚àí1withitalic-œïsubscriptùë†ùëísuperscriptsubscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptùêúùëùsubscriptitalic-œµùúÉsubscriptùê≥ùë°subscriptùêúùëí1\\\\displaystyle\\\\text{with}\\\\quad\\\\phi=s\\_{e}\\\\big{(}{\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p})-\\\\mathbf{\\\\epsilon}\\_{\\\\theta}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{e})}\\\\big{)}^{-1} |  | (7) |\\\n\\\nwith both larger absolute values of ŒªùúÜ\\\\lambda and larger sesubscriptùë†ùëís\\_{e} leading to a more substantial shift away from the prompt text. For positive guidance, values greater than the threshold are considered and vice versa for negative guidance. Consequently, the former should choose negative values for ŒªùúÜ\\\\lambda and the latter positive ones.\\\n\\\nNote that we clip the scaling factor of Œºùúá\\\\mu in order to avoid producing image artifacts. Following \\[ [12]), [4])\\], the values of each ùê±ùê±\\\\mathbf{x}-prediction should adhere to the training bounds of \\[‚àí1,1\\]11\\[-1,1\\] to prevent low fidelity images.\\\n\\\nTo offer even more control over the diffusion process, we make two adjustments to the methodology presented above.\\\nWe add a warm-up parameter Œ¥ùõø\\\\delta that will only apply guidance Œ≥ùõæ\\\\gamma after an initial warm-up period in the diffusion process, i.e., Œ≥‚Äã(ùê≥t,ùêúp,ùêúe):=ùüé‚Äã if ‚Äãt<Œ¥assignùõæsubscriptùê≥ùë°subscriptùêúùëùsubscriptùêúùëí0 if ùë°ùõø\\\\gamma(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p},\\\\mathbf{c}\\_{e}):=\\\\mathbf{0}\\\\text{ if }t<\\\\delta. Naturally, higher values for Œ¥ùõø\\\\delta lead to less significant adjustments of the generated image.\\\nIf we aim to keep the overall composition of the image unchanged, selecting a sufficiently high Œ¥ùõø\\\\delta ensures that only fine-grained details of the output are altered.\\\n\\\nFurthermore, we add a momentum term ŒΩtsubscriptùúàùë°\\\\nu\\_{t} to the semantic guidance Œ≥ùõæ\\\\gamma in order to accelerate guidance over time steps for dimensions that are continuously guided in the same direction. Hence, Œ≥tsubscriptùõæùë°\\\\gamma\\_{t} is defined as:\\\n\\\n|     |     |     |     |     |\\\n| --- | --- | --- | --- | --- |\\\n|  | Œ≥t(ùê≥t,\\\\displaystyle\\\\gamma\\_{t}(\\\\mathbf{z}\\_{t}, | ùêúp,ùêúe)=Œº(ùêúp,ùêúe;se,Œª)œà(ùê≥t,ùêúp,ùêúe)+smŒΩt\\\\displaystyle\\\\mathbf{c}\\_{p},\\\\mathbf{c}\\_{e})=\\\\mu(\\\\mathbf{c}\\_{p},\\\\mathbf{c}\\_{e};s\\_{e},\\\\lambda)\\\\psi(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p},\\\\mathbf{c}\\_{e})+s\\_{m}\\\\nu\\_{t} |  | (8) |\\\n\\\nwith momentum scale sm‚àà\\[0,1\\]subscriptùë†ùëö01s\\_{m}\\\\in\\[0,1\\] and ŒΩùúà\\\\nu being updated as\\\n\\\n|     |     |     |     |\\\n| --- | --- | --- | --- |\\\n|  | ŒΩt+1=Œ≤m‚ÄãŒΩt+(1‚àíŒ≤m)‚ÄãŒ≥tsubscriptùúàùë°1subscriptùõΩùëösubscriptùúàùë°1subscriptùõΩùëösubscriptùõæùë°\\\\nu\\_{t+1}=\\\\beta\\_{m}\\\\nu\\_{t}+(1-\\\\beta\\_{m})\\\\gamma\\_{t} |  | (9) |\\\n\\\nwhere ŒΩ0=ùüésubscriptùúà00\\\\nu\\_{0}=\\\\mathbf{0} and Œ≤m‚àà\\[0,1)subscriptùõΩùëö01\\\\beta\\_{m}\\\\in\\[0,1). Thus, larger Œ≤msubscriptùõΩùëö\\\\beta\\_{m} lead to less volatile changes of the momentum. Momentum is already built up during the warm-up period, even though Œ≥tsubscriptùõæùë°\\\\gamma\\_{t} is not applied during these steps.\\\n\\\n#### Beyond One Direction.\\\n\\\nNow we are ready to move beyond using just one direction towards multiple concepts eisubscriptùëíùëñe\\_{i} and in turn combining multiple calculations of Œ≥tsubscriptùõæùë°\\\\gamma\\_{t}.\\\n\\\nFor all eisubscriptùëíùëñe\\_{i}, we calculate Œ≥tisuperscriptsubscriptùõæùë°ùëñ\\\\gamma\\_{t}^{i} as described above with each defining their own parameter values ŒªisuperscriptùúÜùëñ\\\\lambda^{i}, seisuperscriptsubscriptùë†ùëíùëñs\\_{e}^{i}. The adjusted Œ≥^tsubscript^ùõæùë°\\\\hat{\\\\gamma}\\_{t} is the result of the weighted sum of all Œ≥tisuperscriptsubscriptùõæùë°ùëñ\\\\gamma\\_{t}^{i}:\\\n\\\n|     |     |     |     |\\\n| --- | --- | --- | --- |\\\n|  | Œ≥^t‚Äã(ùê≥t,ùêúp;ùêû)=‚àëi‚ààIgi‚ÄãŒ≥ti‚Äã(ùê≥t,ùêúp,ùêúei)subscript^ùõæùë°subscriptùê≥ùë°subscriptùêúùëùùêûsubscriptùëñùêºsubscriptùëîùëñsuperscriptsubscriptùõæùë°ùëñsubscriptùê≥ùë°subscriptùêúùëùsubscriptùêúsubscriptùëíùëñ\\\\hat{\\\\gamma}\\_{t}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p};\\\\mathbf{e})=\\\\sum\\\\nolimits\\_{i\\\\in I}g\\_{i}\\\\gamma\\_{t}^{i}(\\\\mathbf{z}\\_{t},\\\\mathbf{c}\\_{p},\\\\mathbf{c}\\_{e\\_{i}}) |  | (10) |\\\n\\\nwhere gisubscriptùëîùëñg\\_{i} sums up to one. In order to account for different warm-up periods gisubscriptùëîùëñg\\_{i} is defined as gi=0subscriptùëîùëñ0g\\_{i}\\\\!=\\\\!0 if t<Œ¥iùë°subscriptùõøùëñt<\\\\delta\\_{i}. However, momentum is built up using all edit prompt and applied once all warm-up periods are completed, i.e. ‚àÄŒ¥i:Œ¥i‚â•t:for-allsubscriptùõøùëñsubscriptùõøùëñùë°\\\\forall\\\\delta\\_{i}:\\\\delta\\_{i}\\\\geq t. We provide a pseudo-code implementation of Sega in [Algorithm1]In 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\"). Please note that this notation makes the simplified assumption of one single warm-up period Œ¥ùõø\\\\delta for all edit prompts eisubscriptùëíùëñe\\_{i}.\\\n\\\n### 2.3 Interactively Steering Semantics\\\n\\\nPutting everything together, we start with an image generated from a prompt. Then, we iteratively perform adjustments with Sega, enforcing or suppressing concepts, thus steering the overall semantics in diffusion latent space. [Fig.2]In 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") provides a 2-dimensional, visual explanation of semantic guidance. Intuitively, we can understand the latent space as a composition of arbitrary sub-spaces representing semantic concepts. The unconditioned noise estimate (black dot) starts us off at some random point in the latent space without semantic grounding. The guidance corresponding to the prompt ‚Äúa portrait of a king‚Äù represents a vector (blue vector) moving us into a portion of the latent space where the concepts ‚Äòmale‚Äô (human) and royal overlap, resulting in an image of a king.\\\nWe can now further manipulate the generation process using Sega. From the unconditioned starting point, we get the directions of ‚Äòmale‚Äô and ‚Äòfemale‚Äô (orange/green lines) using estimates conditioned on the respective prompts. If we subtract this inferred ‚Äòmale‚Äô direction from our prompt guidance and add the ‚Äòfemale‚Äô one, we now reach a point in latent space at the intersection of the ‚Äòroyal‚Äô and ‚Äòfemale‚Äô sub-spaces, i.e. a queen. This vector represents the final direction (red vector) resulting from semantic guidance.\\\n\\\n![Refer to caption]Figure 4: The Stable Artist offers strong control over the latent space and can gradually perform edits at the desired strength. All images generated from the same initial noise latent using the prompt ‚Äòa crowded boulevard‚Äô. Editing prompts denoted in blue and are gradually increased in strength from left to right and top to bottom. (Best viewed in color)\\\n\\\nIn the next section, we now illustrate the Stable Artist. The illustrations are based on our own implementation of Stable Diffusion version 1.5 222 [https://huggingface.co/runwayml/stable-diffusion-v1-5]. The code, together with detailed demonstrations, is publicly available at [github.com/ml-research/semantic-image-editing].\\\n\\",
            "citations": null
          },
          "3 Interacting with Visual Concepts\\": {
            "content": "\\\nIn contrast to existing work, the Stable Artist directly interacts with concepts implicitly learned by DMs.\\\nConsider e.g. [Fig.2(b)]In Figure 2 ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\"). As one can see, the linear operations between noise estimates distilled using Sega are semantically grounded. Arithmetic relations between concepts like these have previously been observed for natural language embeddings. In the depicted example, editing an image of a king by guiding it away from the concept ‚Äòmale‚Äô and towards the concept ‚Äòfemale‚Äô produces a compositionally similar image but replaces the king with a queen. This indicates that the latent space of diffusion models may inherently be disentangled to some extent, although further research in that direction is necessary to verify our assumption.\\\n\\\nFurthermore, the Stable Artist can simultaneously change multiple aspects of an image with minimal interference of different concepts, as shown in [Fig.1]In The Stable Artist Interacting with Concepts in Diffusion Latent Space\") (top right) and [Fig.3]In One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") (top mid). We discuss the subtle control offered by Sega in more detail in [Sec.4]Fine-grained Image Editing & Composition ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\"). Additionally, [Fig.3]In One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") highlights the versatile concepts that may be used to adjust images faithfully. These include concrete editing prompts that explicitly target certain portions of the image. In this regard, the stable artist supports both local edits to one of the depicted objects and global edits aimed at the environment of the image as a whole. Notably, multiple local and global edits may be combined arbitrarily.\\\nOn the other hand, the Stable Artist also helps uncover how the underlying DM ‚Äúinterprets‚Äù more complex concepts and gives further insight into learned representations. For example, adding the concept ‚Äòcarbon emissions‚Äô to the generated car produces a seemingly much older vehicle with a presumably larger carbon footprint.\\\nSimilarly, reducing ‚Äòsafety‚Äô yields a convertible with no roof and likely increased horsepower.\\\nBoth these interpretations of the provided concepts with respect to cars are logically sound and provide valuable insights into the learned concepts of DMs. These experiments suggest a deeper natural language and image ‚Äúunderstanding‚Äù that go beyond descriptive captions of images.\\\n\\",
            "citations": null
          },
          "4 Fine-grained Image Editing & Composition\\": {
            "content": "\\\nOne of our driving forces is the vision that\\\ngenerative image creation and composition techniques should offer fine-grained control over the generated image. Sega targets the relevant portions of the image while not changing other aspects. Furthermore, the Stable Artist offers continuous control over the strength of the applied concept semantically reflected in the image. It is worth noting that we achieve this without masking the image, be it user-provided masks or those implicitly inferred from attention maps. Instead, we produce results of competitive quality by targeting the relevant latent dimensions alone.\\\n\\\nThis level of control can be seen throughout the images shown in the present work. Considering the top right example in [Fig.1]In The Stable Artist Interacting with Concepts in Diffusion Latent Space\"), we make two local changes to the image composition and a global style change affecting the entire image. All three operations are performed simultaneously in the same latent space, and nonetheless, the majority of the image remains unchanged down to small details like the structure of clouds, the bush in the foreground, the castle, or the hill it stands on. We can observe a similar level of control in [Fig.3]In One Direction. ‚Ä£ 2.2 Semantic Guidance ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\"), where the fore- and background remain largely unaffected by changes to the car and vice versa.\\\n\\\nWe investigated this further in [Fig.4]In 2.3 Interactively Steering Semantics ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\"), together with possible linear continuity of image alterations. Starting from the original image in the top left corner, we remove one concept from the image following the x- or y-axis. In both cases, the Stable Artist continually reduces the number of people or trees until the respective concept is removed entirely. Again, the rest of the image remains fairly consistent, especially the concept that is not targeted. Going even further, a similar level of control is also possible with an arbitrary mixture of applied concepts. Let us consider the second row of [Fig.4]In 2.3 Interactively Steering Semantics ‚Ä£ 2 The Stable Artist ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\"), for example. The number of trees is kept at a medium level in that the row of trees on the left side of each image is always removed, but the larger tree on the right remains. While keeping the number of trees stable, we can still gradually remove the crowd at the same time.\\\n\\\n![Refer to caption]Figure 5: Style transfer performed by the Stable Artist. All images generated from the same initial noise latent using the prompt ‚Äòa house at a lake‚Äô. Editing prompts denoted in blue. Arrows indicate the editing direction. (Best viewed in color)![Refer to caption]Figure 6: Latent style and image quality optimization using the Stable Artist. All image pairs/triplets are generated from the same initial noise latent and the text prompt under the images. Images are guided towards the average prompt embeddings of high-quality images belonging to the category stated in blue. (Best viewed in color)![Refer to caption]Figure 7: Comparison of image editing between Prompt-to-Prompt (P2P) \\[ [3])\\], Composable Diffusion (CompDiff)\\[ [7])\\], and the Stable Artist with Sega (ours). All images were generated from the same initial noise latent using the prompt ‚Äòa castle next to a river‚Äô. Colored boxes around the image denote the quality of the edit with respect to the editing task and the goal of minimal changes to the unaffected parts of the image. (Best viewed in color)\\\n\\",
            "citations": null
          },
          "5 Latent Image Optimization\\": {
            "content": "\\\nSega can be used to influence the overall style of an image as well as its quality with respect to certain artistic conceptions. [Fig.5]In 4 Fine-grained Image Editing & Composition ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") demonstrates examples of style transfer in which a photorealistic image is adjusted to reflect a different style of photography or painting. The Stable Artist faithfully reproduces the styles of well-known artists, as well as more abstract instructions. Again, the overall image composition remains largely unchanged, enabling a real transfer of the original image to the target style. This sets Sega clearly apart from more simplistic techniques that only append the style instruction to the original prompt.\\\n\\\nWith Stable Artist, we can go even further than vanilla style transfer and actually optimize the overall look and quality of the generated output for arbitrary types of images directly in latent space. Creating high-fidelity images often requires a large amount of error-prone prompt engineering for every specific type of image and, in turn, results in long and obfuscated prompts. Instead, we can use a short and concise prompt and directly optimize the style through semantic guidance.\\\nTo that end, we collected prompts known to produce high-quality results333Prompts taken from [https://mpost.io/best-100-stable-diffusion-prompts-the-most-beautiful-ai-text-to-image-prompts/] for five different types of images in portrait photography, animation, concept art, character design, and modern architecture. We calculated the text embeddings for a set of prompts and took the average embedding per category as guidance conditioning. Exemplary results are depicted in [Fig.6]In 4 Fine-grained Image Editing & Composition ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\"). The results are of high quality and stay close to the original image, but accurately reflect the targeted artistic direction.\\\n\\",
            "citations": null
          },
          "6 Qualitative Comparison\\": {
            "content": "\\\nTo investigate whether the Stable Artist provides more control to the artist, we compared it qualitatively to related techniques for text-to-image diffusion. While the fine-grained control and probing of the latent diffusion space are unique to Sega, closest to the Stable Artist are Composable Diffusion \\[ [7])\\] and Prompt-to-Prompt \\[ [3])\\].\\\nTo compare them, we assess the performance of each approach on five different tasks depicted in [Fig.7]In 4 Fine-grained Image Editing & Composition ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\"). These consist of additive and subtractive image composition, style transfer, and the combination of composition and style changes.\\\n\\\nAll three methods perform well in adding elements to the image ( [Fig.7]In 4 Fine-grained Image Editing & Composition ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") top left). Nonetheless, the Stable Artist is the only one keeping the riverside brick stone wall from the original image and also makes the least visible alterations to the castle and river. In the case of removing elements ( [Fig.7]In 4 Fine-grained Image Editing & Composition ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") top right), Composable Diffusion alters large portions of the image composition, whereas P2P and the Stable Artist stay more faithful to the original image. This experiment further supports an interesting observation of the Stable Diffusion latent space. The model tends to prefer covering up image components targeted for removal with new details instead of generating the material that would be revealed behind or beneath the removed contents.\\\n\\\nOn the style transfer task ( [Fig.7]In 4 Fine-grained Image Editing & Composition ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") bottom mid), Composable Diffusion is incapable of combining the original image composition with the target style. For progressively stronger conditioning on van Gogh‚Äôs starry night, the approach simply shifts towards replicating the original painting and loses the image composition of the castle. However, P2P and the Stable Artist both create a faithful fusion between the content‚Äôs starting image and the target style.\\\n\\\nWhen combining editing and style transfer ( [Fig.7]In 4 Fine-grained Image Editing & Composition ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\") bottom left & right), Composable Diffusion may generate images that do not fulfill any of the input descriptions. Sega and P2P produce satisfactory results; however, the latter is limited to one editing prompt. Consequently, we generated these results by supplying both editing tasks in the same prompt for P2P. This also results in artifacts like multiple boats being added, although only one was specified.\\\n\\\nOverall, Stable Artist outperforms Composable Diffusion in general image editing and composition on a variety of tasks. We achieve better or at least equally good performance in targeted editing as P2P but natively support conditioning on multiple concepts. Furthermore, Sega does not rely on token-based attention and is therefore applicable to any conditioning beyond natural language, such as conditioning on images, averaged textual embeddings or embeddings calculated through textual inversion. We discuss this further in [Sec.8]Conclusions ‚Ä£ The Stable Artist Interacting with Concepts in Diffusion Latent Space\").\\\n\\",
            "citations": null
          },
          "7 Broader Impact on Society\\": {
            "content": "\\\nRecent developments in text-to-image models \\[ [10]), [9]), [12])\\] have the potential for far-reaching impact on society, both positive and negative, when deployed in applications such as image generation, image editing, or search engines.\\\nPrevious research \\[ [2]), [13])\\] described many potential negative societal implications that may arise due to the careless use of such large-scale generative models. Many of these problems can be attributed to the noisy, large-scale datasets these models rely on.\\\nSince recent text-to-image models, such as stable diffusion, are trained on web-crawled data containing inappropriate content \\[ [14])\\], they are no exception to this issue. Specifically, current versions of stable diffusion show signs of inappropriate degeneration \\[ [13])\\]. While Schramowski et al. utilize the model‚Äôs notion of inappropriateness to steer the model away from generating related content, it is noteworthy that we introduce an approach that could also be used to guide image generation toward inappropriate material. However, on the positive side, Sega could also have the potential to increase e.g. fairness, by detecting and steering certain related concepts. Therefore, we advocate for further research in this direction.\\\n\\\nAnother frequently voiced point of criticism, is the notion that generative models like stable diffusion are replacing human artists and illustrators. At first glance, the great results produced by these models might warrant this impression. Examples like the DALL-E generated Cosmopolitan cover444 [https://www.cosmopolitan.com/lifestyle/a40314356/dall-e-2-artificial-intelligence-cover/] subtitled with the phrase ‚ÄúAnd it only took 20 seconds to make‚Äù certainly seem to support this point.\\\nHowever, looking more closely at this example reveals that creating this cover still involved multiple hours spent by a human user interacting with the model. Consequently, we argue that generative models remain a tool to be used by humans for creating artwork.\\\nThe generative process as a whole still requires a substantial amount of iterative human feedback and creative thinking. The introduced Stable Artist increases the interaction capabilities in these processes.\\\n\\",
            "citations": null
          },
          "8 Conclusions\\": {
            "content": "\\\nWe presented the Stable Artist for directly interacting with concepts in DM‚Äôs latent space. To this end, we introduced semantic guidance (SEGA) that allows one to influence/steer the diffusion process along several directions. We demonstrated that the Stable Artist using Sega offers fine-grained control over the generated image for performing sophisticated image composition and editing.\\\n\\\nThe Stable Artist covers several exciting avenues for future work. For instance, one should investigate more closely how concepts are represented in the latent space of DM‚Äôs and how to target and quantify them. More importantly, automatically detecting concepts could provide novel insights and toolsets to mitigate biases, as well as enacting privacy concerns of real people memorized by the model.\\\n\\\n#### Acknowledgments.\\\n\\\nThis research has benefited from the Hessian Ministry of Higher Education, Research, Science and the Arts (HMWK) cluster projects ‚ÄúThe Third Wave of AI‚Äù and hessian.AI, from the German Center for Artificial Intelligence (DFKI) project ‚ÄúSAINT‚Äù, the Federal Ministry of Education and Research (BMBF) project KISTRA (reference no. 13N15343), as well as from the joint ATHENE project of the HMWK and the BMBF ‚ÄúAVSV‚Äù.\\\n\\",
            "citations": null
          }
        },
        "abstract": "Large, text-conditioned generative diffusion models have recently gained a\nlot of attention for their impressive performance in generating high-fidelity\nimages from text alone. However, achieving high-quality results is almost\nunfeasible in a one-shot fashion. On the contrary, text-guided image generation\ninvolves the user making many slight changes to inputs in order to iteratively\ncarve out the envisioned image. However, slight changes to the input prompt\noften lead to entirely different images being generated, and thus the control\nof the artist is limited in its granularity. To provide flexibility, we present\nthe Stable Artist, an image editing approach enabling fine-grained control of\nthe image generation process. The main component is semantic guidance (SEGA)\nwhich steers the diffusion process along variable numbers of semantic\ndirections. This allows for subtle edits to images, changes in composition and\nstyle, as well as optimization of the overall artistic conception. Furthermore,\nSEGA enables probing of latent spaces to gain insights into the representation\nof concepts learned by the model, even complex ones such as 'carbon emission'.\nWe demonstrate the Stable Artist on several tasks, showcasing high-quality\nimage editing and composition."
      },
      "bib.bib3": {
        "id": "bib.bib3",
        "citation": "Brown et al. (2020)",
        "authors": "",
        "year": "",
        "title": "Language models are few-shot learners.",
        "venue": "Advances in neural information processing systems",
        "pages": "",
        "url": "",
        "arxiv_id": "2005.14165",
        "doi": null,
        "sections": {
          "1 Introduction": {
            "content": "Recent years have featured a trend towards pre-trained language representations in NLP systems, applied in increasingly flexible and task-agnostic ways for downstream transfer. First, single-layer representations were learned using word vectors \\[ [82]), [102])\\] and fed to task-specific architectures, then RNNs with multiple layers of representations and contextual state were used to form stronger representations \\[ [24]), [81]), [100])\\] (though still applied to task-specific architectures), and more recently pre-trained recurrent or transformer language models \\[ [134])\\] have been directly fine-tuned, entirely removing the need for task-specific architectures \\[ [112]), [20]), [43])\\].\n\n![Refer to caption]Figure 1.1: Language model meta-learning. During unsupervised pre-training, a language model develops a broad set of skills and pattern recognition abilities. It then uses these abilities at inference time to rapidly adapt to or recognize the desired task. We use the term ‚Äúin-context learning‚Äù to describe the inner loop of this process, which occurs within the forward-pass upon each sequence. The sequences in this diagram are not intended to be representative of the data a model would see during pre-training, but are intended to show that there are sometimes repeated sub-tasks embedded within a single sequence.\n\nThis last paradigm has led to substantial progress on many challenging NLP tasks such as reading comprehension, question answering, textual entailment, and many others, and has continued to advance based on new architectures and algorithms \\[ [116]), [74]), [139]), [62])\\]. However, a major limitation to this approach is that while the architecture is task-agnostic, there is still a need for task-specific datasets and task-specific fine-tuning: to achieve strong performance on a desired task typically requires fine-tuning on a dataset of thousands to hundreds of thousands of examples specific to that task. Removing this limitation would be desirable, for several reasons.\n\nFirst, from a practical perspective, the need for a large dataset of labeled examples for every new task limits the applicability of language models. There exists a very wide range of possible useful language tasks, encompassing anything from correcting grammar, to generating examples of an abstract concept, to critiquing a short story. For many of these tasks it is difficult to collect a large supervised training dataset, especially when the process must be repeated for every new task.\n\nSecond, the potential to exploit spurious correlations in training data fundamentally grows with the expressiveness of the model and the narrowness of the training distribution. This can create problems for the pre-training plus fine-tuning paradigm, where models are designed to be large to absorb information during pre-training, but are then fine-tuned on very narrow task distributions. For instance \\[ [41])\\] observe that larger models do not necessarily generalize better out-of-distribution. There is evidence that suggests that the generalization achieved under this paradigm can be poor because the model is overly specific to the training distribution and does not generalize well outside it \\[ [138]), [88])\\]. Thus, the performance of fine-tuned models on specific benchmarks, even when it is nominally at human-level, may exaggerate actual performance on the underlying task \\[ [36]), [91])\\].\n\nThird, humans do not require large supervised datasets to learn most language tasks ‚Äì a brief directive in natural language (e.g. ‚Äúplease tell me if this sentence describes something happy or something sad‚Äù) or at most a tiny number of demonstrations (e.g. ‚Äúhere are two examples of people acting brave; please give a third example of bravery‚Äù) is often sufficient to enable a human to perform a new task to at least a reasonable degree of competence. Aside from pointing to a conceptual limitation in our current NLP techniques, this adaptability has practical advantages ‚Äì it allows humans to seamlessly mix together or switch between many tasks and skills, for example performing addition during a lengthy dialogue. To be broadly useful, we would someday like our NLP systems to have this same fluidity and generality.\n\nOne potential route towards addressing these issues is meta-learning111In the context of language models this has sometimes been called ‚Äúzero-shot transfer‚Äù, but this term is potentially ambiguous: the method is ‚Äúzero-shot‚Äù in the sense that no gradient updates are performed, but it often involves providing inference-time demonstrations to the model, so is not truly learning from zero examples. To avoid this confusion, we use the term ‚Äúmeta-learning‚Äù to capture the inner-loop / outer-loop structure of the general method, and the term ‚Äúin context-learning‚Äù to refer to the inner loop of meta-learning. We further specialize the description to ‚Äúzero-shot‚Äù, ‚Äúone-shot‚Äù, or ‚Äúfew-shot‚Äù depending on how many demonstrations are provided at inference time. These terms are intended to remain agnostic on the question of whether the model learns new tasks from scratch at inference time or simply recognizes patterns seen during training ‚Äì this is an important issue which we discuss later in the paper, but ‚Äúmeta-learning‚Äù is intended to encompass both possibilities, and simply describes the inner-outer loop structure. ‚Äì which in the context of language models means the model develops a broad set of skills and pattern recognition abilities at training time, and then uses those abilities at inference time to rapidly adapt to or recognize the desired task (illustrated in Figure [1.1]Figure 1.1 ‚Ä£ 1 Introduction ‚Ä£ Language Models are Few-Shot Learners\")). Recent work \\[ [117])\\] attempts to do this via what we call ‚Äúin-context learning‚Äù, using the text input of a pretrained language model as a form of task specification: the model is conditioned on a natural language instruction and/or a few demonstrations of the task and is then expected to complete further instances of the task simply by predicting what comes next.\n\nWhile it has shown some initial promise, this approach still achieves results far inferior to fine-tuning ‚Äì for example \\[ [117])\\] achieves only 4% on Natural Questions, and even its 55 F1 CoQa result is now more than 35 points behind the state of the art. Meta-learning clearly requires substantial improvement in order to be viable as a practical method of solving language tasks.\n\nAnother recent trend in language modeling may offer a way forward. In recent years the capacity of transformer language models has increased substantially, from 100 million parameters \\[ [112])\\], to 300 million parameters \\[ [20])\\], to 1.5 billion parameters \\[ [117])\\], to 8 billion parameters \\[ [125])\\], 11 billion parameters \\[ [116])\\], and finally 17 billion parameters \\[ [132])\\]. Each increase has brought improvements in text synthesis and/or downstream NLP tasks, and there is evidence suggesting that log loss, which correlates well with many downstream tasks, follows a smooth trend of improvement with scale \\[ [57])\\]. Since in-context learning involves absorbing many skills and tasks within the parameters of the model, it is plausible that in-context learning abilities might show similarly strong gains with scale.\n\n![Refer to caption]Figure 1.2: Larger models make increasingly efficient use of in-context information.   We show in-context learning performance on a simple task requiring the model to remove random symbols from a word, both with and without a natural language task description (see Sec. [3.9.2]Word Scrambling and Manipulation Tasks ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\")). The steeper ‚Äúin-context learning curves‚Äù for large models demonstrate improved ability to learn a task from contextual information. We see qualitatively similar behavior across a wide range of tasks.![Refer to caption]Figure 1.3: Aggregate performance for all 42 accuracy-denominated benchmarks   While zero-shot performance improves steadily with model size, few-shot performance increases more rapidly, demonstrating that larger models are more proficient at in-context learning. See Figure [3.8]Figure 3.8 ‚Ä£ 3.6 Reading Comprehension ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") for a more detailed analysis on SuperGLUE, a standard NLP benchmark suite.\n\nIn this paper, we test this hypothesis by training a 175 billion parameter autoregressive language model, which we call GPT-3, and measuring its in-context learning abilities. Specifically, we evaluate GPT-3 on over two dozen NLP datasets, as well as several novel tasks designed to test rapid adaptation to tasks unlikely to be directly contained in the training set. For each task, we evaluate GPT-3 under 3 conditions: (a) ‚Äúfew-shot learning‚Äù, or in-context learning where we allow as many demonstrations as will fit into the model‚Äôs context window (typically 10 to 100), (b) ‚Äúone-shot learning‚Äù, where we allow only one demonstration, and (c) ‚Äúzero-shot‚Äù learning, where no demonstrations are allowed and only an instruction in natural language is given to the model. GPT-3 could also in principle be evaluated in the traditional fine-tuning setting, but we leave this to future work.\n\nFigure [1.2]Figure 1.2 ‚Ä£ 1 Introduction ‚Ä£ Language Models are Few-Shot Learners\") illustrates the conditions we study, and shows few-shot learning of a simple task requiring the model to remove extraneous symbols from a word. Model performance improves with the addition of a natural language task description, and with the number of examples in the model‚Äôs context, KùêæK. Few-shot learning also improves dramatically with model size. Though the results in this case are particularly striking, the general trends with both model size and number of examples in-context hold for most tasks we study. We emphasize that these ‚Äúlearning‚Äù curves involve no gradient updates or fine-tuning, just increasing numbers of demonstrations given as conditioning.\n\nBroadly, on NLP tasks GPT-3 achieves promising results in the zero-shot and one-shot settings, and in the the few-shot setting is sometimes competitive with or even occasionally surpasses state-of-the-art (despite state-of-the-art being held by fine-tuned models). For example, GPT-3 achieves 81.5 F1 on CoQA in the zero-shot setting, 84.0 F1 on CoQA in the one-shot setting, 85.0 F1 in the few-shot setting. Similarly, GPT-3 achieves 64.3% accuracy on TriviaQA in the zero-shot setting, 68.0% in the one-shot setting, and 71.2% in the few-shot setting, the last of which is state-of-the-art relative to fine-tuned models operating in the same closed-book setting.\n\nGPT-3 also displays one-shot and few-shot proficiency at tasks designed to test rapid adaption or on-the-fly reasoning, which include unscrambling words, performing arithmetic, and using novel words in a sentence after seeing them defined only once. We also show that in the few-shot setting, GPT-3 can generate synthetic news articles which human evaluators have difficulty distinguishing from human-generated articles.\n\nAt the same time, we also find some tasks on which few-shot performance struggles, even at the scale of GPT-3. This includes natural language inference tasks like the ANLI dataset, and some reading comprehension datasets like RACE or QuAC. By presenting a broad characterization of GPT-3‚Äôs strengths and weaknesses, including these limitations, we hope to stimulate study of few-shot learning in language models and draw attention to where progress is most needed.\n\nA heuristic sense of the overall results can be seen in Figure [1.3]Figure 1.3 ‚Ä£ 1 Introduction ‚Ä£ Language Models are Few-Shot Learners\"), which aggregates the various tasks (though it should not be seen as a rigorous or meaningful benchmark in itself).\n\nWe also undertake a systematic study of ‚Äúdata contamination‚Äù ‚Äì a growing problem when training high capacity models on datasets such as Common Crawl, which can potentially include content from test datasets simply because such content often exists on the web. In this paper we develop systematic tools to measure data contamination and quantify its distorting effects. Although we find that data contamination has a minimal effect on GPT-3‚Äôs performance on most datasets, we do identify a few datasets where it could be inflating results, and we either do not report results on these datasets or we note them with an asterisk, depending on the severity.\n\nIn addition to all the above, we also train a series of smaller models (ranging from 125 million parameters to 13 billion parameters) in order to compare their performance to GPT-3 in the zero, one and few-shot settings. Broadly, for most tasks we find relatively smooth scaling with model capacity in all three settings; one notable pattern is that the gap between zero-, one-, and few-shot performance often grows with model capacity, perhaps suggesting that larger models are more proficient meta-learners.\n\nFinally, given the broad spectrum of capabilities displayed by GPT-3, we discuss concerns about bias, fairness, and broader societal impacts, and attempt a preliminary analysis of GPT-3‚Äôs characteristics in this regard.\n\nThe remainder of this paper is organized as follows. In Section [2]Approach ‚Ä£ Language Models are Few-Shot Learners\"), we describe our approach and methods for training GPT-3 and evaluating it. Section [3]Results ‚Ä£ Language Models are Few-Shot Learners\") presents results on the full range of tasks in the zero-, one- and few-shot settings. Section [4.1]Figure 4.1 ‚Ä£ 4 Measuring and Preventing Memorization Of Benchmarks ‚Ä£ Language Models are Few-Shot Learners\") addresses questions of data contamination (train-test overlap). Section [5]Limitations ‚Ä£ Language Models are Few-Shot Learners\") discusses limitations of GPT-3. Section [6]Broader Impacts ‚Ä£ Language Models are Few-Shot Learners\") discusses broader impacts. Section [7]Related Work ‚Ä£ Language Models are Few-Shot Learners\") reviews related work and Section [8]Conclusion ‚Ä£ Language Models are Few-Shot Learners\") concludes.",
            "citations": null
          },
          "2 Approach": {
            "content": "![Refer to caption]Figure 2.1: Zero-shot, one-shot and few-shot, contrasted with traditional fine-tuning. The panels above show four methods for performing a task with a language model ‚Äì fine-tuning is the traditional method, whereas zero-, one-, and few-shot, which we study in this work, require the model to perform the task with only forward passes at test time. We typically present the model with a few dozen examples in the few shot setting. Exact phrasings for all task descriptions, examples and prompts can be found in Appendix [G]Appendix G Details of Task Phrasing and Specifications ‚Ä£ Language Models are Few-Shot Learners\").\n\nOur basic pre-training approach, including model, data, and training, is similar to the process described in \\[ [117])\\], with relatively straightforward scaling up of the model size, dataset size and diversity, and length of training. Our use of in-context learning is also similar to \\[ [117])\\], but in this work we systematically explore different settings for learning within the context. Therefore, we start this section by explicitly defining and contrasting the different settings that we will be evaluating GPT-3 on or could in principle evaluate GPT-3 on. These settings can be seen as lying on a spectrum of how much task-specific data they tend to rely on. Specifically, we can identify at least four points on this spectrum (see Figure [2.1]Figure 2.1 ‚Ä£ 2 Approach ‚Ä£ Language Models are Few-Shot Learners\") for an illustration):\n\n- ‚Ä¢\n\n\nFine-Tuning (FT) has been the most common approach in recent years, and involves updating the weights of a pre-trained model by training on a supervised dataset specific to the desired task. Typically thousands to hundreds of thousands of labeled examples are used. The main advantage of fine-tuning is strong performance on many benchmarks. The main disadvantages are the need for a new large dataset for every task, the potential for poor generalization out-of-distribution \\[ [88])\\], and the potential to exploit spurious features of the training data \\[ [36]), [91])\\], potentially resulting in an unfair comparison with human performance. In this work we do not fine-tune GPT-3 because our focus is on task-agnostic performance, but GPT-3 can be fine-tuned in principle and this is a promising direction for future work.\n\n- ‚Ä¢\n\n\nFew-Shot (FS) is the term we will use in this work to refer to the setting where the model is given a few demonstrations of the task at inference time as conditioning \\[ [117])\\], but no weight updates are allowed. As shown in Figure [2.1]Figure 2.1 ‚Ä£ 2 Approach ‚Ä£ Language Models are Few-Shot Learners\"), for a typical dataset an example has a context and a desired completion (for example an English sentence and the French translation), and few-shot works by giving KùêæK examples of context and completion, and then one final example of context, with the model expected to provide the completion. We typically set KùêæK in the range of 10 to 100 as this is how many examples can fit in the model‚Äôs context window (nctx=2048subscriptùëõctx2048n\\_{\\\\mathrm{ctx}}=2048). The main advantages of few-shot are a major reduction in the need for task-specific data and reduced potential to learn an overly narrow distribution from a large but narrow fine-tuning dataset. The main disadvantage is that results from this method have so far been much worse than state-of-the-art fine-tuned models. Also, a small amount of task specific data is still required. As indicated by the name, few-shot learning as described here for language models is related to few-shot learning as used in other contexts in ML \\[ [45]), [133])\\] ‚Äì both involve learning based on a broad distribution of tasks (in this case implicit in the pre-training data) and then rapidly adapting to a new task.\n\n- ‚Ä¢\n\n\nOne-Shot (1S) is the same as few-shot except that only one demonstration is allowed, in addition to a natural language description of the task, as shown in Figure 1. The reason to distinguish one-shot from few-shot and zero-shot (below) is that it most closely matches the way in which some tasks are communicated to humans. For example, when asking humans to generate a dataset on a human worker service (for example Mechanical Turk), it is common to give one demonstration of the task. By contrast it is sometimes difficult to communicate the content or format of a task if no examples are given.\n\n- ‚Ä¢\n\n\nZero-Shot (0S) is the same as one-shot except that no demonstrations are allowed, and the model is only given a natural language instruction describing the task. This method provides maximum convenience, potential for robustness, and avoidance of spurious correlations (unless they occur very broadly across the large corpus of pre-training data), but is also the most challenging setting. In some cases it may even be difficult for humans to understand the format of the task without prior examples, so this setting is in some cases ‚Äúunfairly hard‚Äù. For example, if someone is asked to ‚Äúmake a table of world records for the 200m dash‚Äù, this request can be ambiguous, as it may not be clear exactly what format the table should have or what should be included (and even with careful clarification, understanding precisely what is desired can be difficult). Nevertheless, for at least some settings zero-shot is closest to how humans perform tasks ‚Äì for example, in the translation example in Figure [2.1]Figure 2.1 ‚Ä£ 2 Approach ‚Ä£ Language Models are Few-Shot Learners\"), a human would likely know what to do from just the text instruction.\n\n\nFigure [2.1]Figure 2.1 ‚Ä£ 2 Approach ‚Ä£ Language Models are Few-Shot Learners\") shows the four methods using the example of translating English to French. In this paper we focus on zero-shot, one-shot and few-shot, with the aim of comparing them not as competing alternatives, but as different problem settings which offer a varying trade-off between performance on specific benchmarks and sample efficiency. We especially highlight the few-shot results as many of them are only slightly behind state-of-the-art fine-tuned models. Ultimately, however, one-shot, or even sometimes zero-shot, seem like the fairest comparisons to human performance, and are important targets for future work.\n\nSections [2.1]Model and Architectures ‚Ä£ 2 Approach ‚Ä£ Language Models are Few-Shot Learners\")- [2.3]Training Process ‚Ä£ 2 Approach ‚Ä£ Language Models are Few-Shot Learners\") below give details on our models, training data, and training process respectively.\nSection [2.4]Evaluation ‚Ä£ 2 Approach ‚Ä£ Language Models are Few-Shot Learners\") discusses the details of how we do few-shot, one-shot, and zero-shot evaluations.\n\n### 2.1 Model and Architectures\n\nWe use the same model and architecture as GPT-2 \\[ [117])\\], including the modified initialization, pre-normalization, and reversible tokenization described therein, with the exception that we use alternating dense and locally banded sparse attention patterns in the layers of the transformer, similar to the Sparse Transformer \\[ [15])\\]. To study the dependence of ML performance on model size, we train 8 different sizes of model, ranging over three orders of magnitude from 125 million parameters to 175 billion parameters, with the last being the model we call GPT-3. Previous work \\[ [57])\\] suggests that with enough training data, scaling of validation loss should be approximately a smooth power law as a function of size; training models of many different sizes allows us to test this hypothesis both for validation loss and for downstream language tasks.\n\n| Model Name | nparamssubscriptùëõparamsn\\_{\\\\mathrm{params}} | nlayerssubscriptùëõlayersn\\_{\\\\mathrm{layers}} | dmodelsubscriptùëëmodeld\\_{\\\\mathrm{model}} | nheadssubscriptùëõheadsn\\_{\\\\mathrm{heads}} | dheadsubscriptùëëheadd\\_{\\\\mathrm{head}} | Batch Size | Learning Rate |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| GPT-3 Small | 125M | 12 | 768 | 12 | 64 | 0.5M | 6.0√ó10‚àí46.0superscript1046.0\\\\times 10^{-4} |\n| GPT-3 Medium | 350M | 24 | 1024 | 16 | 64 | 0.5M | 3.0√ó10‚àí43.0superscript1043.0\\\\times 10^{-4} |\n| GPT-3 Large | 760M | 24 | 1536 | 16 | 96 | 0.5M | 2.5√ó10‚àí42.5superscript1042.5\\\\times 10^{-4} |\n| GPT-3 XL | 1.3B | 24 | 2048 | 24 | 128 | 1M | 2.0√ó10‚àí42.0superscript1042.0\\\\times 10^{-4} |\n| GPT-3 2.7B | 2.7B | 32 | 2560 | 32 | 80 | 1M | 1.6√ó10‚àí41.6superscript1041.6\\\\times 10^{-4} |\n| GPT-3 6.7B | 6.7B | 32 | 4096 | 32 | 128 | 2M | 1.2√ó10‚àí41.2superscript1041.2\\\\times 10^{-4} |\n| GPT-3 13B | 13.0B | 40 | 5140 | 40 | 128 | 2M | 1.0√ó10‚àí41.0superscript1041.0\\\\times 10^{-4} |\n| GPT-3 175B or ‚ÄúGPT-3‚Äù | 175.0B | 96 | 12288 | 96 | 128 | 3.2M | 0.6√ó10‚àí40.6superscript1040.6\\\\times 10^{-4} |\n\nTable 2.1: Sizes, architectures, and learning hyper-parameters (batch size in tokens and learning rate) of the models which we trained. All models were trained for a total of 300 billion tokens.\n\nTable [2.1]Table 2.1 ‚Ä£ 2.1 Model and Architectures ‚Ä£ 2 Approach ‚Ä£ Language Models are Few-Shot Learners\") shows the sizes and architectures of our 8 models. Here nparamssubscriptùëõparamsn\\_{\\\\mathrm{params}} is the total number of trainable parameters, nlayerssubscriptùëõlayersn\\_{\\\\mathrm{layers}} is the total number of layers, dmodelsubscriptùëëmodeld\\_{\\\\mathrm{model}} is the number of units in each bottleneck layer (we always have the feedforward layer four times the size of the bottleneck layer, dffsubscriptùëëffd\\_{\\\\mathrm{ff}}=4‚àódmodelabsent‚àó4subscriptùëëmodel=4\\\\ast d\\_{\\\\mathrm{model}}), and dheadsubscriptùëëheadd\\_{\\\\mathrm{head}} is the dimension of each attention head. All models use a context window of nctx=2048subscriptùëõctx2048n\\_{\\\\mathrm{ctx}}=2048 tokens. We partition the model across GPUs along both the depth and width dimension in order to minimize data-transfer between nodes. The precise architectural parameters for each model are chosen based on computational efficiency and load-balancing in the layout of models across GPU‚Äôs. Previous work \\[ [57])\\] suggests that validation loss is not strongly sensitive to these parameters within a reasonably broad range.\n\n![Refer to caption]Figure 2.2: Total compute used during training. Based on the analysis in Scaling Laws For Neural Language Models \\[ [57])\\] we train much larger models on many fewer tokens than is typical. As a consequence, although GPT-3 3B is almost 10x larger than RoBERTa-Large (355M params), both models took roughly 50 petaflop/s-days of compute during pre-training. Methodology for these calculations can be found in Appendix [D]Appendix D Total Compute Used to Train Language Models ‚Ä£ Language Models are Few-Shot Learners\").\n\n### 2.2 Training Dataset\n\nDatasets for language models have rapidly expanded, culminating in the Common Crawl dataset222 [https://commoncrawl.org/the-data/]\\[ [116])\\] constituting nearly a trillion words. This size of dataset is sufficient to train our largest models without ever updating on the same sequence twice. However, we have found that unfiltered or lightly filtered versions of Common Crawl tend to have lower quality than more curated datasets. Therefore, we took 3 steps to improve the average quality of our datasets: (1) we downloaded and filtered a version of CommonCrawl based on similarity to a range of high-quality reference corpora, (2) we performed fuzzy deduplication at the document level, within and across datasets, to prevent redundancy and preserve the integrity of our held-out validation set as an accurate measure of overfitting, and (3) we also added known high-quality reference corpora to the training mix to augment CommonCrawl and increase its diversity.\n\nDetails of the first two points (processing of Common Crawl) are described in Appendix [A]Appendix A Details of Common Crawl Filtering ‚Ä£ Language Models are Few-Shot Learners\"). For the third, we added several curated high-quality datasets, including an expanded version of the WebText dataset \\[ [117])\\], collected by scraping links over a longer period of time, and first described in \\[ [57])\\], two internet-based books corpora (Books1 and Books2) and English-language Wikipedia.\n\nTable [2.2]Table 2.2 ‚Ä£ 2.2 Training Dataset ‚Ä£ 2 Approach ‚Ä£ Language Models are Few-Shot Learners\") shows the final mixture of datasets that we used in training. The CommonCrawl data was downloaded from 41 shards of monthly CommonCrawl covering 2016 to 2019, constituting 45TB of compressed plaintext before filtering and 570GB after filtering, roughly equivalent to 400 billion byte-pair-encoded tokens. Note that during training, datasets are not sampled in proportion to their size, but rather datasets we view as higher-quality are sampled more frequently, such that CommonCrawl and Books2 datasets are sampled less than once during training, but the other datasets are sampled 2-3 times. This essentially accepts a small amount of overfitting in exchange for higher quality training data.\n\n| Dataset | Quantity(tokens) | Weight intraining mix | Epochs elapsed whentraining for 300B tokens |\n| --- | --- | --- | --- |\n| Common Crawl (filtered) | 410 billion | 60% | 0.44 |\n| WebText2 | 19 billion | 22% | 2.9 |\n| Books1 | 12 billion | 8% | 1.9 |\n| Books2 | 55 billion | 8% | 0.43 |\n| Wikipedia | 3 billion | 3% | 3.4 |\n\nTable 2.2: Datasets used to train GPT-3. ‚ÄúWeight in training mix‚Äù refers to the fraction of examples during training that are drawn from a given dataset, which we intentionally do not make proportional to the size of the dataset. As a result, when we train for 300 billion tokens, some datasets are seen up to 3.4 times during training while other datasets are seen less than once.\n\nA major methodological concern with language models pretrained on a broad swath of internet data, particularly large models with the capacity to memorize vast amounts of content, is potential contamination of downstream tasks by having their test or development sets inadvertently seen during pre-training. To reduce such contamination, we searched for and attempted to remove any overlaps with the development and test sets of all benchmarks studied in this paper. Unfortunately, a bug in the filtering caused us to ignore some overlaps, and due to the cost of training it was not feasible to retrain the model. In Section [4.1]Figure 4.1 ‚Ä£ 4 Measuring and Preventing Memorization Of Benchmarks ‚Ä£ Language Models are Few-Shot Learners\") we characterize the impact of the remaining overlaps, and in future work we will more aggressively remove data contamination.\n\n### 2.3 Training Process\n\nAs found in \\[ [57]), [85])\\], larger models can typically use a larger batch size, but require a smaller learning rate. We measure the gradient noise scale during training and use it to guide our choice of batch size \\[ [85])\\]. Table [2.1]Table 2.1 ‚Ä£ 2.1 Model and Architectures ‚Ä£ 2 Approach ‚Ä£ Language Models are Few-Shot Learners\") shows the parameter settings we used. To train the larger models without running out of memory, we use a mixture of model parallelism within each matrix multiply and model parallelism across the layers of the network. All models were trained on V100 GPU‚Äôs on part of a high-bandwidth cluster provided by Microsoft. Details of the training process and hyperparameter settings are described in Appendix [B]Appendix B Details of Model Training ‚Ä£ Language Models are Few-Shot Learners\").\n\n### 2.4 Evaluation\n\nFor few-shot learning, we evaluate each example in the evaluation set by randomly drawing KùêæK examples from that task‚Äôs training set as conditioning, delimited by 1 or 2 newlines depending on the task. For LAMBADA and Storycloze there is no supervised training set available so we draw conditioning examples from the development set and evaluate on the test set. For Winograd (the original, not SuperGLUE version) there is only one dataset, so we draw conditioning examples directly from it.\n\nKùêæK can be any value from 0 to the maximum amount allowed by the model‚Äôs context window, which is nctx=2048subscriptùëõctx2048n\\_{\\\\mathrm{ctx}}=2048 for all models and typically fits 101010 to 100100100 examples. Larger values of KùêæK are usually but not always better, so when a separate development and test set are available, we experiment with a few values of KùêæK on the development set and then run the best value on the test set. For some tasks (see Appendix [G]Appendix G Details of Task Phrasing and Specifications ‚Ä£ Language Models are Few-Shot Learners\")) we also use a natural language prompt in addition to (or for K=0ùêæ0K=0, instead of) demonstrations.\n\nOn tasks that involve choosing one correct completion from several options (multiple choice), we provide KùêæK examples of context plus correct completion, followed by one example of context only, and compare the LM likelihood of each completion. For most tasks we compare the per-token likelihood (to normalize for length), however on a small number of datasets (ARC, OpenBookQA, and RACE) we gain additional benefit as measured on the development set by normalizing by the unconditional probability of each completion, by computing P‚Äã(completion\\|context)P‚Äã(completion\\|answer‚Äã\\_‚Äãcontext)ùëÉconditionalcompletioncontextùëÉconditionalcompletionanswer\\_context\\\\frac{P(\\\\mathrm{completion}\\|\\\\mathrm{context})}{P(\\\\mathrm{completion}\\|\\\\mathrm{answer\\\\\\_context})}, where answer‚Äã\\_‚Äãcontextanswer\\_context\\\\mathrm{answer\\\\\\_context} is the string \"Answer: \" or \"A: \" and is used to prompt that the completion should be an answer but is otherwise generic.\n\nOn tasks that involve binary classification, we give the options more semantically meaningful names (e.g. ‚ÄúTrue‚Äù or ‚ÄúFalse‚Äù rather than 0 or 1) and then treat the task like multiple choice; we also sometimes frame the task similar to what is done by \\[ [116])\\] (see Appendix [G]Appendix G Details of Task Phrasing and Specifications ‚Ä£ Language Models are Few-Shot Learners\")) for details.\n\nOn tasks with free-form completion, we use beam search with the same parameters as \\[ [116])\\]: a beam width of 4 and a length penalty of Œ±=0.6ùõº0.6\\\\alpha=0.6. We score the model using F1 similarity score, BLEU, or exact match, depending on what is standard for the dataset at hand.\n\nFinal results are reported on the test set when publicly available, for each model size and learning setting (zero-, one-, and few-shot). When the test set is private, our model is often too large to fit on the test server, so we report results on the development set. We do submit to the test server on a small number of datasets (SuperGLUE, TriviaQA, PiQa) where we were able to make submission work, and we submit only the 200B few-shot results, and report development set results for everything else.",
            "citations": null
          },
          "3 Results": {
            "content": "![Refer to caption]Figure 3.1: Smooth scaling of performance with compute. Performance (measured in terms of cross-entropy validation loss) follows a power-law trend with the amount of compute used for training. The power-law behavior observed in \\[ [57])\\] continues for an additional two orders of magnitude with only small deviations from the predicted curve. For this figure, we exclude embedding parameters from compute and parameter counts.\n\nIn Figure [3.1]Figure 3.1 ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") we display training curves for the 8 models described in Section [2]Approach ‚Ä£ Language Models are Few-Shot Learners\"). For this graph we also include 6 additional extra-small models with as few as 100,000 parameters. As observed in \\[ [57])\\], language modeling performance follows a power-law when making efficient use of training compute. After extending this trend by two more orders of magnitude, we observe only a slight (if any) departure from the power-law. One might worry that these improvements in cross-entropy loss come only from modeling spurious details of our training corpus. However, we will see in the following sections that improvements in cross-entropy loss lead to consistent performance gains across a broad spectrum of natural language tasks.\n\nBelow, we evaluate the 8 models described in Section [2]Approach ‚Ä£ Language Models are Few-Shot Learners\") (the 175 billion parameter parameter GPT-3 and 7 smaller models) on a wide range of datasets. We group the datasets into 9 categories representing roughly similar tasks.\n\nIn Section [3.1]Language Modeling, Cloze, and Completion Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") we evaluate on traditional language modeling tasks and tasks that are similar to language modeling, such as Cloze tasks and sentence/paragraph completion tasks. In Section [3.2]Closed Book Question Answering ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") we evaluate on ‚Äúclosed book‚Äù question answering tasks: tasks which require using the information stored in the model‚Äôs parameters to answer general knowledge questions. In Section [3.3]Translation ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") we evaluate the model‚Äôs ability to translate between languages (especially one-shot and few-shot). In Section [3.4]Winograd-Style Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") we evaluate the model‚Äôs performance on Winograd Schema-like tasks. In Section [3.5]Common Sense Reasoning ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") we evaluate on datasets that involve commonsense reasoning or question answering. In Section [3.6]Reading Comprehension ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") we evaluate on reading comprehension tasks, in Section [3.7]SuperGLUE ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") we evaluate on the SuperGLUE benchmark suite, and in [3.8]NLI ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") we briefly explore NLI. Finally, in Section [3.9]Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\"), we invent some additional tasks designed especially to probe in-context learning abilities ‚Äì these tasks focus on on-the-fly reasoning, adaptation skills, or open-ended text synthesis. We evaluate all tasks in the few-shot, one-shot, and zero-shot settings.\n\n### 3.1 Language Modeling, Cloze, and Completion Tasks\n\nIn this section we test GPT-3‚Äôs performance on the traditional task of language modeling, as well as related tasks that involve predicting a single word of interest, completing a sentence or paragraph, or choosing between possible completions of a piece of text.\n\n#### 3.1.1 Language Modeling\n\nWe calculate zero-shot perplexity on the Penn Tree Bank (PTB) \\[ [86])\\] dataset measured in \\[ [117])\\]. We omit the 4 Wikipedia-related tasks in that work because they are entirely contained in our training data, and we also omit the one-billion word benchmark due to a high fraction of the dataset being contained in our training set. PTB escapes these issues due to predating the modern internet. Our largest model sets a new SOTA on PTB by a substantial margin of 15 points, achieving a perplexity of 20.50. Note that since PTB is a traditional language modeling dataset it does not have a clear separation of examples to define one-shot or few-shot evaluation around, so we measure only zero-shot.\n\n| Setting | PTB |\n| --- | --- |\n| SOTA (Zero-Shot) | 35.8a |\n| GPT-3 Zero-Shot | 20.5 |\n\nTable 3.1: Zero-shot results on PTB language modeling dataset. Many other common language modeling datasets are omitted because they are derived from Wikipedia or other sources which are included in GPT-3‚Äôs training data. a\\[ [117])\\]\n\n#### 3.1.2 LAMBADA\n\n| Setting | LAMBADA(acc) | LAMBADA(ppl) | StoryCloze(acc) | HellaSwag(acc) |\n| --- | --- | --- | --- | --- |\n| SOTA | 68.0a | 8.63b | 91.8c | 85.6d |\n| GPT-3 Zero-Shot | 76.2 | 3.00 | 83.2 | 78.9 |\n| GPT-3 One-Shot | 72.5 | 3.35 | 84.7 | 78.1 |\n| GPT-3 Few-Shot | 86.4 | 1.92 | 87.7 | 79.3 |\n\nTable 3.2: Performance on cloze and completion tasks. GPT-3 significantly improves SOTA on LAMBADA while achieving respectable performance on two difficult completion prediction datasets. a\\[ [132])\\]b\\[ [117])\\]c\\[ [64])\\]d\\[ [63])\\]![Refer to caption]Figure 3.2: On LAMBADA, the few-shot capability of language models results in a strong boost to accuracy. GPT-3 2.7B outperforms the SOTA 17B parameter Turing-NLG \\[ [132])\\] in this setting, and GPT-3 175B advances the state of the art by 18%. Note zero-shot uses a different format from one-shot and few-shot as described in the text.\n\nThe LAMBADA dataset \\[ [99])\\] tests the modeling of long-range dependencies in text ‚Äì the model is asked to predict the last word of sentences which require reading a paragraph of context. It has recently been suggested that the continued scaling of language models is yielding diminishing returns on this difficult benchmark. \\[ [9])\\] reflect on the small 1.5% improvement achieved by a doubling of model size between two recent state of the art results (\\[ [125])\\] and \\[ [132])\\]) and argue that ‚Äúcontinuing to expand hardware and data sizes by orders of magnitude is not the path forward‚Äù. We find that path is still promising and in a zero-shot setting GPT-3 achieves 76% on LAMBADA, a gain of 8% over the previous state of the art.\n\nLAMBADA is also a demonstration of the flexibility of few-shot learning as it provides a way to address a problem that classically occurs with this dataset. Although the completion in LAMBADA is always the last word in a sentence, a standard language model has no way of knowing this detail. It thus assigns probability not only to the correct ending but also to other valid continuations of the paragraph. This problem has been partially addressed in the past with stop-word filters \\[ [117])\\] (which ban ‚Äúcontinuation‚Äù words). The few-shot setting instead allows us to ‚Äúframe‚Äù the task as a cloze-test and allows the language model to infer from examples that a completion of exactly one word is desired. We use the following fill-in-the-blank format:\n\nAlice was friends with Bob. Alice went to visit her friend . ‚Üí‚Üí\\\\to Bob\n\nGeorge bought some baseball equipment, a ball, a glove, and a . ‚Üí‚Üí\\\\to\n\nWhen presented with examples formatted this way, GPT-3 achieves 86.4% accuracy in the few-shot setting, an increase of over 18% from the previous state-of-the-art. We observe that few-shot performance improves strongly with model size. While this setting decreases the performance of the smallest model by almost 20%, for GPT-3 it improves accuracy by 10%. Finally, the fill-in-blank method is not effective one-shot, where it always performs worse than the zero-shot setting. Perhaps this is because all models still require several examples to recognize the pattern.\n\nOne note of caution is that an analysis of test set contamination identified that a significant minority of the LAMBADA dataset appears to be present in our training data ‚Äì however analysis performed in Section [4.1]Figure 4.1 ‚Ä£ 4 Measuring and Preventing Memorization Of Benchmarks ‚Ä£ Language Models are Few-Shot Learners\") suggests negligible impact on performance.\n\n#### 3.1.3 HellaSwag\n\nThe HellaSwag dataset \\[ [140])\\] involves picking the best ending to a story or set of instructions. The examples were adversarially mined to be difficult for language models while remaining easy for humans (who achieve 95.6% accuracy). GPT-3 achieves 78.1% accuracy in the one-shot setting and 79.3% accuracy in the few-shot setting, outperforming the 75.4% accuracy of a fine-tuned 1.5B parameter language model \\[ [141])\\] but still a fair amount lower than the overall SOTA of 85.6% achieved by the fine-tuned multi-task model ALUM.\n\n#### 3.1.4 StoryCloze\n\nWe next evaluate GPT-3 on the StoryCloze 2016 dataset \\[ [83])\\], which involves selecting the correct ending sentence for five-sentence long stories. Here GPT-3 achieves 83.2% in the zero-shot setting and 87.7% in the few-shot setting (with K=70ùêæ70K=70). This is still 4.1% lower than the fine-tuned SOTA using a BERT based model \\[ [64])\\] but improves over previous zero-shot results by roughly 10%.\n\n### 3.2 Closed Book Question Answering\n\n| Setting | NaturalQS | WebQS | TriviaQA |\n| --- | --- | --- | --- |\n| RAG (Fine-tuned, Open-Domain) \\[ [75])\\] | 44.5 | 45.5 | 68.0 |\n| T5-11B+SSM (Fine-tuned, Closed-Book) \\[ [115])\\] | 36.6 | 44.7 | 60.5 |\n| T5-11B (Fine-tuned, Closed-Book) | 34.5 | 37.4 | 50.1 |\n| GPT-3 Zero-Shot | 14.6 | 14.4 | 64.3 |\n| GPT-3 One-Shot | 23.0 | 25.3 | 68.0 |\n| GPT-3 Few-Shot | 29.9 | 41.5 | 71.2 |\n\nTable 3.3: Results on three Open-Domain QA tasks. GPT-3 is shown in the few-, one-, and zero-shot settings, as compared to prior SOTA results for closed book and open domain settings. TriviaQA few-shot result is evaluated on the wiki split test server.![Refer to caption]Figure 3.3: On TriviaQA GPT3‚Äôs performance grows smoothly with model size, suggesting that language models continue to absorb knowledge as their capacity increases. One-shot and few-shot performance make significant gains over zero-shot behavior, matching and exceeding the performance of the SOTA fine-tuned open-domain model, RAG \\[ [75])\\]\n\nIn this section we measure GPT-3‚Äôs ability to answer questions about broad factual knowledge. Due to the immense amount of possible queries, this task has normally been approached by using an information retrieval system to find relevant text in combination with a model which learns to generate an answer given the question and the retrieved text. Since this setting allows a system to search for and condition on text which potentially contains the answer it is denoted ‚Äúopen-book‚Äù. \\[ [115])\\] recently demonstrated that a large language model can perform surprisingly well directly answering the questions without conditioning on auxilliary information. They denote this more restrictive evaluation setting as ‚Äúclosed-book‚Äù. Their work suggests that even higher-capacity models could perform even better and we test this hypothesis with GPT-3. We evaluate GPT-3 on the 3 datasets in \\[ [115])\\]: Natural Questions \\[ [58])\\], WebQuestions \\[ [5])\\], and TriviaQA \\[ [49])\\], using the same splits. Note that in addition to all results being in the closed-book setting, our use of few-shot, one-shot, and zero-shot evaluations represent an even stricter setting than previous closed-book QA work: in addition to external content not being allowed, fine-tuning on the Q&A dataset itself is also not permitted.\n\nThe results for GPT-3 are shown in Table [3.3]Table 3.3 ‚Ä£ 3.2 Closed Book Question Answering ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\"). On TriviaQA, we achieve 64.3% in the zero-shot setting, 68.0% in the one-shot setting, and 71.2% in the few-shot setting. The zero-shot result already outperforms the fine-tuned T5-11B by 14.2%, and also outperforms a version with Q&A tailored span prediction during pre-training by 3.8%. The one-shot result improves by 3.7% and matches the SOTA for an open-domain QA system which not only fine-tunes but also makes use of a learned retrieval mechanism over a 15.3B parameter dense vector index of 21M documents \\[ [75])\\]. GPT-3‚Äôs few-shot result further improves performance another 3.2% beyond this.\n\nOn WebQuestions (WebQs), GPT-3 achieves 14.4% in the zero-shot setting, 25.3% in the one-shot setting, and 41.5% in the few-shot setting. This compares to 37.4% for fine-tuned T5-11B, and 44.7% for fine-tuned T5-11B+SSM, which uses a Q&A-specific pre-training procedure. GPT-3 in the few-shot setting approaches the performance of state-of-the-art fine-tuned models. Notably, compared to TriviaQA, WebQS shows a much larger gain from zero-shot to few-shot (and indeed its zero-shot and one-shot performance are poor), perhaps suggesting that the WebQs questions and/or the style of their answers are out-of-distribution for GPT-3. Nevertheless, GPT-3 appears able to adapt to this distribution, recovering strong performance in the few-shot setting.\n\nOn Natural Questions (NQs) GPT-3 achieves 14.6% in the zero-shot setting, 23.0% in the one-shot setting, and 29.9% in the few-shot setting, compared to 36.6% for fine-tuned T5 11B+SSM. Similar to WebQS, the large gain from zero-shot to few-shot may suggest a distribution shift, and may also explain the less competitive performance compared to TriviaQA and WebQS. In particular, the questions in NQs tend towards very fine-grained knowledge on Wikipedia specifically which could be testing the limits of GPT-3‚Äôs capacity and broad pretraining distribution.\n\nOverall, on one of the three datasets GPT-3‚Äôs one-shot matches the open-domain fine-tuning SOTA. On the other two datasets it approaches the performance of the closed-book SOTA despite not using fine-tuning. On all 3 datasets, we find that performance scales very smoothly with model size (Figure [3.3]Figure 3.3 ‚Ä£ 3.2 Closed Book Question Answering ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") and Appendix [H]Appendix H Results on All Tasks for All Model Sizes ‚Ä£ Language Models are Few-Shot Learners\") Figure [H.7]Figure H.7 ‚Ä£ Appendix H Results on All Tasks for All Model Sizes ‚Ä£ Language Models are Few-Shot Learners\")), possibly reflecting the idea that model capacity translates directly to more ‚Äòknowledge‚Äô absorbed in the parameters of the model.\n\n### 3.3 Translation\n\nFor GPT-2 a filter was used on a multilingual collection of documents to produce an English only dataset due to capacity concerns. Even with this filtering GPT-2 showed some evidence of multilingual capability and performed non-trivially when translating between French and English despite only training on 10 megabytes of remaining French text. Since we increase the capacity by over two orders of magnitude from GPT-2 to GPT-3, we also expand the scope of the training dataset to include more representation of other languages, though this remains an area for further improvement. As discussed in [2.2]Training Dataset ‚Ä£ 2 Approach ‚Ä£ Language Models are Few-Shot Learners\") the majority of our data is derived from raw Common Crawl with only quality-based filtering. Although GPT-3‚Äôs training data is still primarily English (93% by word count), it also includes 7% of text in other languages. These languages are documented in the [supplemental material]. In order to better understand translation capability, we also expand our analysis to include two additional commonly studied languages, German and Romanian.\n\nExisting unsupervised machine translation approaches often combine pretraining on a pair of monolingual datasets with back-translation \\[ [123])\\] to bridge the two languages in a controlled way. By contrast, GPT-3 learns from a blend of training data that mixes many languages together in a natural way, combining them on a word, sentence, and document level. GPT-3 also uses a single training objective which is not customized or designed for any task in particular. However, our one / few-shot settings aren‚Äôt strictly comparable to prior unsupervised work since they make use of a small amount of paired examples (1 or 64). This corresponds to up to a page or two of in-context training data.\n\n| Setting | En‚Üí‚Üí\\\\toFr | Fr‚Üí‚Üí\\\\toEn | En‚Üí‚Üí\\\\toDe | De‚Üí‚Üí\\\\toEn | En‚Üí‚Üí\\\\toRo | Ro‚Üí‚Üí\\\\toEn |\n| --- | --- | --- | --- | --- | --- | --- |\n| SOTA (Supervised) | 45.6a | 35.0 b | 41.2c | 40.2d | 38.5e | 39.9e |\n| --- | --- | --- | --- | --- | --- | --- |\n| XLM \\[ [61])\\] | 33.4 | 33.3 | 26.4 | 34.3 | 33.3 | 31.8 |\n| MASS \\[ [127])\\] | 37.5 | 34.9 | 28.3 | 35.2 | 35.2 | 33.1 |\n| mBART \\[ [66])\\] | - | - | 29.8 | 34.0 | 35.0 | 30.5 |\n| GPT-3 Zero-Shot | 25.2 | 21.2 | 24.6 | 27.2 | 14.1 | 19.9 |\n| GPT-3 One-Shot | 28.3 | 33.7 | 26.2 | 30.4 | 20.6 | 38.6 |\n| GPT-3 Few-Shot | 32.6 | 39.2 | 29.7 | 40.6 | 21.0 | 39.5 |\n\nTable 3.4: Few-shot GPT-3 outperforms previous unsupervised NMT work by 5 BLEU when translating into English reflecting its strength as an English LM. We report BLEU scores on the WMT‚Äô14 Fr‚Üî‚Üî\\\\leftrightarrowEn, WMT‚Äô16 De‚Üî‚Üî\\\\leftrightarrowEn, and WMT‚Äô16 Ro‚Üî‚Üî\\\\leftrightarrowEn datasets as measured by multi-bleu.perl with XLM‚Äôs tokenization in order to compare most closely with prior unsupervised NMT work. SacreBLEUf\\[ [101])\\] results reported in Appendix [H]Appendix H Results on All Tasks for All Model Sizes ‚Ä£ Language Models are Few-Shot Learners\"). Underline indicates an unsupervised or few-shot SOTA, bold indicates supervised SOTA with relative confidence.\na\\[ [29])\\]b\\[ [23])\\]c\\[ [136])\\]d\\[ [95])\\]e\\[ [66])\\]f\\[SacreBLEU signature: BLEU+case.mixed+numrefs.1+smooth.exp+tok.intl+version.1.2.20\\] ![Refer to caption]Figure 3.4: Few-shot translation performance on 6 language pairs as model capacity increases. There is a consistent trend of improvement across all datasets as the model scales, and as well as tendency for translation into English to be stronger than translation from English.\n\nResults are shown in Table [3.4]Table 3.4 ‚Ä£ 3.3 Translation ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\"). Zero-shot GPT-3, which only receives on a natural language description of the task, still underperforms recent unsupervised NMT results. However, providing only a single example demonstration for each translation task improves performance by over 7 BLEU and nears competitive performance with prior work. GPT-3 in the full few-shot setting further improves another 4 BLEU resulting in similar average performance to prior unsupervised NMT work. GPT-3 has a noticeable skew in its performance depending on language direction. For the three input languages studied, GPT-3 significantly outperforms prior unsupervised NMT work when translating into English but underperforms when translating in the other direction. Performance on En-Ro is a noticeable outlier at over 10 BLEU worse than prior unsupervised NMT work. This could be a weakness due to reusing the byte-level BPE tokenizer of GPT-2 which was developed for an almost entirely English training dataset. For both Fr-En and De-En, few shot GPT-3 outperforms the best supervised result we could find but due to our unfamiliarity with the literature and the appearance that these are un-competitive benchmarks we do not suspect those results represent true state of the art. For Ro-En, few shot GPT-3 performs within 0.5 BLEU of the overall SOTA which is achieved by a combination of unsupervised pretraining, supervised finetuning on 608K labeled examples, and backtranslation \\[ [70])\\].\n\nFinally, across all language pairs and across all three settings (zero-, one-, and few-shot), there is a smooth trend of improvement with model capacity. This is shown in Figure [3.4]Figure 3.4 ‚Ä£ 3.3 Translation ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") in the case of few-shot results, and scaling for all three settings is shown in Appendix [H]Appendix H Results on All Tasks for All Model Sizes ‚Ä£ Language Models are Few-Shot Learners\").\n\n### 3.4 Winograd-Style Tasks\n\n| Setting | Winograd | Winogrande (XL) |\n| --- | --- | --- |\n| Fine-tuned SOTA | 90.1a | 84.6b |\n| GPT-3 Zero-Shot | 88.3\\* | 70.2 |\n| GPT-3 One-Shot | 89.7\\* | 73.2 |\n| GPT-3 Few-Shot | 88.6\\* | 77.7 |\n\nTable 3.5: Results on the WSC273 version of Winograd schemas and the adversarial Winogrande dataset. See Section [4.1]Figure 4.1 ‚Ä£ 4 Measuring and Preventing Memorization Of Benchmarks ‚Ä£ Language Models are Few-Shot Learners\") for details on potential contamination of the Winograd test set. a\\[ [118])\\]b\\[ [79])\\]![Refer to caption]Figure 3.5: Zero-, one-, and few-shot performance on the adversarial Winogrande dataset as model capacity scales. Scaling is relatively smooth with the gains to few-shot learning increasing with model size, and few-shot GPT-3 175B is competitive with a fine-tuned RoBERTA-large.\n\nThe Winograd Schemas Challenge \\[ [65])\\] is a classical task in NLP that involves determining which word a pronoun refers to, when the pronoun is grammatically ambiguous but semantically unambiguous to a human. Recently fine-tuned language models have achieved near-human performance on the original Winograd dataset, but more difficult versions such as the adversarially-mined Winogrande dataset \\[ [118])\\] still significantly lag human performance. We test GPT-3‚Äôs performance on both Winograd and Winogrande, as usual in the zero-, one-, and few-shot setting.\n\nOn Winograd we test GPT-3 on the original set of 273 Winograd schemas, using the same ‚Äúpartial evaluation‚Äù method described in \\[ [117])\\]. Note that this setting differs slightly from the WSC task in the SuperGLUE benchmark, which is presented as binary classification and requires entity extraction to convert to the form described in this section. On Winograd GPT-3 achieves 88.3%, 89.7%, and 88.6% in the zero-shot, one-shot, and few-shot settings, showing no clear in-context learning but in all cases achieving strong results just a few points below state-of-the-art and estimated human performance. We note that contamination analysis found some Winograd schemas in the training data but this appears to have only a small effect on results (see Section [4.1]Figure 4.1 ‚Ä£ 4 Measuring and Preventing Memorization Of Benchmarks ‚Ä£ Language Models are Few-Shot Learners\")).\n\nOn the more difficult Winogrande dataset, we do find gains to in-context learning: GPT-3 achieves 70.2% in the zero-shot setting, 73.2% in the one-shot setting, and 77.7% in the few-shot setting. For comparison a fine-tuned RoBERTA model achieves 79%, state-of-the-art is 84.6% achieved with a fine-tuned high capacity model (T5), and human performance on the task as reported by \\[ [118])\\] is 94.0%.\n\n### 3.5 Common Sense Reasoning\n\n| Setting | PIQA | ARC (Easy) | ARC (Challenge) | OpenBookQA |\n| --- | --- | --- | --- | --- |\n| Fine-tuned SOTA | 79.4 | 92.0\\[ [55])\\] | 78.5\\[ [55])\\] | 87.2\\[ [55])\\] |\n| GPT-3 Zero-Shot | 80.5\\* | 68.8 | 51.4 | 57.6 |\n| GPT-3 One-Shot | 80.5\\* | 71.2 | 53.2 | 58.8 |\n| GPT-3 Few-Shot | 82.8\\* | 70.1 | 51.5 | 65.4 |\n\nTable 3.6: GPT-3 results on three commonsense reasoning tasks, PIQA, ARC, and OpenBookQA. GPT-3 Few-Shot PIQA result is evaluated on the test server. See Section [4.1]Figure 4.1 ‚Ä£ 4 Measuring and Preventing Memorization Of Benchmarks ‚Ä£ Language Models are Few-Shot Learners\") for details on potential contamination issues on the PIQA test set.![Refer to caption]Figure 3.6: GPT-3 results on PIQA in the zero-shot, one-shot, and few-shot settings. The largest model achieves a score on the development set in all three conditions that exceeds the best recorded score on the task.\n\nNext we consider three datasets which attempt to capture physical or scientific reasoning, as distinct from sentence completion, reading comprehension, or broad knowledge question answering. The first, PhysicalQA (PIQA) \\[ [11])\\], asks common sense questions about how the physical world works and is intended as a probe of grounded understanding of the world. GPT-3 achieves 81.0% accuracy zero-shot, 80.5% accuracy one-shot, and 82.8% accuracy few-shot (the last measured on PIQA‚Äôs test server). This compares favorably to the 79.4% accuracy prior state-of-the-art of a fine-tuned RoBERTa. PIQA shows relatively shallow scaling with model size and is still over 10% worse than human performance, but GPT-3‚Äôs few-shot and even zero-shot result outperform the current state-of-the-art. Our analysis flagged PIQA for a potential data contamination issue (despite hidden test labels), and we therefore conservatively mark the result with an asterisk. See Section [4.1]Figure 4.1 ‚Ä£ 4 Measuring and Preventing Memorization Of Benchmarks ‚Ä£ Language Models are Few-Shot Learners\") for details.\n\nARC \\[ [14])\\] is a dataset of multiple-choice questions collected from 3rd to 9th grade science exams. On the ‚ÄúChallenge‚Äù version of the dataset which has been filtered to questions which simple statistical or information retrieval methods are unable to correctly answer, GPT-3 achieves 51.4% accuracy in the zero-shot setting, 53.2% in the one-shot setting, and 51.5% in the few-shot setting. This is approaching the performance of a fine-tuned RoBERTa baseline (55.9%) from UnifiedQA \\[ [55])\\]. On the ‚ÄúEasy‚Äù version of the dataset (questions which either of the mentioned baseline approaches answered correctly), GPT-3 achieves 68.8%, 71.2%, and 70.1% which slightly exceeds a fine-tuned RoBERTa baseline from \\[ [55])\\]. However, both of these results are still much worse than the overall SOTAs achieved by the UnifiedQA which exceeds GPT-3‚Äôs few-shot results by 27% on the challenge set and 22% on the easy set.\n\nOn OpenBookQA \\[ [84])\\], GPT-3 improves significantly from zero to few shot settings but is still over 20 points short of the overall SOTA. GPT-3‚Äôs few-shot performance is similar to a fine-tuned BERT Large baseline on the leaderboard.\n\nOverall, in-context learning with GPT-3 shows mixed results on commonsense reasoning tasks, with only small and inconsistent gains observed in the one and few-shot learning settings for both PIQA and ARC, but a significant improvement is observed on OpenBookQA. GPT-3 sets SOTA on the new PIQA dataset in all evaluation settings.\n\n### 3.6 Reading Comprehension\n\n| Setting | CoQA | DROP | QuAC | SQuADv2 | RACE-h | RACE-m |\n| --- | --- | --- | --- | --- | --- | --- |\n| Fine-tuned SOTA | 90.7a | 89.1b | 74.4c | 93.0d | 90.0e | 93.1e |\n| GPT-3 Zero-Shot | 81.5 | 23.6 | 41.5 | 59.5 | 45.5 | 58.4 |\n| GPT-3 One-Shot | 84.0 | 34.3 | 43.3 | 65.4 | 45.9 | 57.4 |\n| GPT-3 Few-Shot | 85.0 | 36.5 | 44.3 | 69.8 | 46.8 | 58.1 |\n\nTable 3.7: Results on reading comprehension tasks. All scores are F1 except results for RACE which report accuracy. a\\[ [53])\\]b\\[ [50])\\]c\\[ [2])\\]d\\[ [103])\\]e\\[ [125])\\]![Refer to caption]Figure 3.7: GPT-3 results on CoQA reading comprehension task. GPT-3 175B achieves 85 F1 in the few-shot setting, only a few points behind measured human performance and state-of-the-art fine-tuned models. Zero-shot and one-shot performance is a few points behind, with the gains to few-shot being largest for bigger models.\n\nNext we evaluate GPT-3 on the task of reading comprehension. We use a suite of 5 datasets including abstractive, multiple choice, and span based answer formats in both dialog and single question settings. We observe a wide spread in GPT-3‚Äôs performance across these datasets suggestive of varying capability with different answer formats. In general we observe GPT-3 is on par with initial baselines and early results trained using contextual representations on each respective dataset.\n\nGPT-3 performs best (within 3 points of the human baseline) on CoQA \\[ [106])\\] a free-form conversational dataset and performs worst (13 F1 below an ELMo baseline) on QuAC \\[ [16])\\] a dataset which requires modeling structured dialog acts and answer span selections of teacher-student interactions. On DROP \\[ [27])\\], a dataset testing discrete reasoning and numeracy in the context of reading comprehension, GPT-3 in a few-shot setting outperforms the fine-tuned BERT baseline from the original paper but is still well below both human performance and state-of-the-art approaches which augment neural networks with symbolic systems \\[ [110])\\]. On SQuAD 2.0 \\[ [108])\\], GPT-3 demonstrates its few-shot learning capabilities, improving by almost 10 F1 (to 69.8) compared to a zero-shot setting. This allows it to slightly outperform the best fine-tuned result in the original paper. On RACE \\[ [78])\\], a multiple choice dataset of middle school and high school english examinations, GPT-3 performs relatively weakly and is only competitive with the earliest work utilizing contextual representations and is still 45% behind SOTA.\n\n|  | SuperGLUE | BoolQ | CB | CB | COPA | RTE |\n| --- | --- | --- | --- | --- | --- | --- |\n|  | Average | Accuracy | Accuracy | F1 | Accuracy | Accuracy |\n| --- | --- | --- | --- | --- | --- | --- |\n| Fine-tuned SOTA | 89.0 | 91.0 | 96.9 | 93.9 | 94.8 | 92.5 |\n| Fine-tuned BERT-Large | 69.0 | 77.4 | 83.6 | 75.7 | 70.6 | 71.7 |\n| GPT-3 Few-Shot | 71.8 | 76.4 | 75.6 | 52.0 | 92.0 | 69.0 |\n\n|  | WiC | WSC | MultiRC | MultiRC | ReCoRD | ReCoRD |\n| --- | --- | --- | --- | --- | --- | --- |\n|  | Accuracy | Accuracy | Accuracy | F1a | Accuracy | F1 |\n| --- | --- | --- | --- | --- | --- | --- |\n| Fine-tuned SOTA | 76.1 | 93.8 | 62.3 | 88.2 | 92.5 | 93.3 |\n| Fine-tuned BERT-Large | 69.6 | 64.6 | 24.1 | 70.0 | 71.3 | 72.0 |\n| GPT-3 Few-Shot | 49.4 | 80.1 | 30.5 | 75.4 | 90.2 | 91.1 |\n\nTable 3.8:\nPerformance of GPT-3 on SuperGLUE compared to fine-tuned baselines and SOTA. All results are reported on the test set. GPT-3 few-shot is given a total of 32 examples within the context of each task and performs no gradient updates.\n![Refer to caption]Figure 3.8:\nPerformance on SuperGLUE increases with model size and number of examples in context. A value of K=32ùêæ32K=32 means that our model was shown 32 examples per task, for 256 examples total divided across the 8 tasks in SuperGLUE. We report GPT-3 values on the dev set, so our numbers are not directly comparable to the dotted reference lines (our test set results are in Table [3.8]Table 3.8 ‚Ä£ 3.6 Reading Comprehension ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\")). The BERT-Large reference model was fine-tuned on the SuperGLUE training set (125K examples), whereas BERT++ was first fine-tuned on MultiNLI (392K examples) and SWAG (113K examples) before further fine-tuning on the SuperGLUE training set (for a total of 630K fine-tuning examples). We find the difference in performance between the BERT-Large and BERT++ to be roughly equivalent to the difference between GPT-3 with one example per context versus eight examples per context.\n\n### 3.7 SuperGLUE\n\nIn order to better aggregate results on NLP tasks and compare to popular models such as BERT and RoBERTa in a more systematic way, we also evaluate GPT-3 on a standardized collection of datasets, the SuperGLUE benchmark \\[ [135])\\]\\[ [135])\\]\\[ [17])\\]\\[ [25])\\]\\[ [105])\\]\\[ [54])\\]\\[ [142])\\]\\[ [21])\\]\\[ [8])\\]\\[ [34])\\]\\[ [6])\\]\\[ [96])\\]\\[ [98])\\]. GPT-3‚Äôs test-set performance on the SuperGLUE dataset is shown in Table [3.8]Table 3.8 ‚Ä£ 3.6 Reading Comprehension ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\"). In the few-shot setting, we used 32 examples for all tasks, sampled randomly from the training set. For all tasks except WSC and MultiRC, we sampled a new set of examples to use in the context for each problem. For WSC and MultiRC, we used the same set of randomly drawn examples from the training set as context for all of the problems we evaluated.\n\nWe observe a wide range in GPT-3‚Äôs performance across tasks. On COPA and ReCoRD GPT-3 achieves near-SOTA performance in the one-shot and few-shot settings, with COPA falling only a couple points short and achieving second place on the leaderboard, where first place is held by a fine-tuned 11 billion parameter model (T5). On WSC, performance is still relatively strong, achieving 80.1% in the few-shot setting (note that GPT-3 achieves 88.6% on the original Winograd dataset as described in Section [3.4]Winograd-Style Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\")). On BoolQ, MultiRC, and RTE, performance is reasonable, roughly matching that of a fine-tuned BERT-Large. On CB, we see signs of life at 75.6% in the few-shot setting.\n\nWiC is a notable weak spot with few-shot performance at 49.4% (at random chance). We tried a number of different phrasings and formulations for WiC (which involves determining if a word is being used with the same meaning in two sentences), none of which was able to achieve strong performance. This hints at a phenomenon that will become clearer in the next section (which discusses the ANLI benchmark) ‚Äì GPT-3 appears to be weak in the few-shot or one-shot setting at some tasks that involve comparing two sentences or snippets, for example whether a word is used the same way in two sentences (WiC), whether one sentence is a paraphrase of another, or whether one sentence implies another. This could also explain the comparatively low scores for RTE and CB, which also follow this format. Despite these weaknesses, GPT-3 still outperforms a fine-tuned BERT-large on four of eight tasks and on two tasks GPT-3 is close to the state-of-the-art held by a fine-tuned 11 billion parameter model.\n\nFinally, we note that the few-shot SuperGLUE score steadily improves with both model size and with number of examples in the context showing increasing benefits from in-context learning (Figure [3.8]Figure 3.8 ‚Ä£ 3.6 Reading Comprehension ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\")). We scale KùêæK up to 32 examples per task, after which point additional examples will not reliably fit into our context. When sweeping over values of KùêæK, we find that GPT-3 requires less than eight total examples per task to outperform a fine-tuned BERT-Large on overall SuperGLUE score.\n\n![Refer to caption]Figure 3.9: Performance of GPT-3 on ANLI Round 3. Results are on the dev-set, which has only 1500 examples and therefore has high variance (we estimate a standard deviation of 1.2%). We find that smaller models hover around random chance, while few-shot GPT-3 175B closes almost half the gap from random chance to SOTA. Results for ANLI rounds 1 and 2 are shown in the appendix.\n\n### 3.8 NLI\n\nNatural Language Inference (NLI) \\[ [31])\\] concerns the ability to understand the relationship between two sentences. In practice, this task is usually structured as a two or three class classification problem where the model classifies whether the second sentence logically follows from the first, contradicts the first sentence, or is possibly true (neutral). SuperGLUE includes an NLI dataset, RTE, which evaluates the binary version of the task. On RTE, only the largest version of GPT-3 performs convincingly better than random (56%) in any evaluation setting, but in a few-shot setting GPT-3 performs similarly to a single-task fine-tuned BERT Large. We also evaluate on the recently introduced Adversarial Natural Language Inference (ANLI) dataset \\[ [94])\\]. ANLI is a difficult dataset employing a series of adversarially mined natural language inference questions in three rounds (R1, R2, and R3). Similar to RTE, all of our models smaller than GPT-3 perform at almost exactly random chance on ANLI, even in the few-shot setting (‚àº33%similar-toabsentpercent33\\\\sim 33\\\\%), whereas GPT-3 itself shows signs of life on Round 3. Results for ANLI R3 are highlighted in Figure [3.9]Figure 3.9 ‚Ä£ 3.7 SuperGLUE ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") and full results for all rounds can be found in Appendix [H]Appendix H Results on All Tasks for All Model Sizes ‚Ä£ Language Models are Few-Shot Learners\"). These results on both RTE and ANLI suggest that NLI is still a very difficult task for language models and they are only just beginning to show signs of progress.\n\n### 3.9 Synthetic and Qualitative Tasks\n\nOne way to probe GPT-3‚Äôs range of abilities in the few-shot (or zero- and one-shot) setting is to give it tasks which require it to perform simple on-the-fly computational reasoning, recognize a novel pattern that is unlikely to have occurred in training, or adapt quickly to an unusual task. We devise several tasks to test this class of abilities. First, we test GPT-3‚Äôs ability to perform arithmetic. Second, we create several tasks that involve rearranging or unscrambling the letters in a word, tasks which are unlikely to have been exactly seen during training. Third, we test GPT-3‚Äôs ability to solve SAT-style analogy problems few-shot. Finally, we test GPT-3 on several qualitative tasks, including using new words in a sentence, correcting English grammar, and news article generation. We will release the synthetic datasets with the hope of stimulating further study of test-time behavior of language models.\n\n#### 3.9.1 Arithmetic\n\nTo test GPT-3‚Äôs ability to perform simple arithmetic operations without task-specific training, we developed a small battery of 10 tests that involve asking GPT-3 a simple arithmetic problem in natural language:\n\n- ‚Ä¢\n\n\n2 digit addition (2D+) ‚Äì The model is asked to add two integers sampled uniformly from \\[0,100)0100\\[0,100), phrased in the form of a question, e.g. ‚ÄúQ: What is 48 plus 76? A: 124.‚Äù\\\n\\\n- ‚Ä¢\\\n\\\n\\\n2 digit subtraction (2D-) ‚Äì The model is asked to subtract two integers sampled uniformly from \\[0,100)0100\\[0,100); the answer may be negative. Example: ‚ÄúQ: What is 34 minus 53? A: -19‚Äù.\\\n\\\n- ‚Ä¢\\\n\\\n\\\n3 digit addition (3D+) ‚Äì Same as 2 digit addition, except numbers are uniformly sampled from \\[0,1000)01000\\[0,1000).\\\n\\\n- ‚Ä¢\\\n\\\n\\\n3 digit subtraction (3D-) ‚Äì Same as 2 digit subtraction, except numbers are uniformly sampled from \\[0,1000)01000\\[0,1000).\\\n\\\n- ‚Ä¢\\\n\\\n\\\n4 digit addition (4D+) ‚Äì Same as 3 digit addition, except uniformly sampled from \\[0,10000)010000\\[0,10000).\\\n\\\n- ‚Ä¢\\\n\\\n\\\n4 digit subtraction (4D-) ‚Äì Same as 3 digit subtraction, except uniformly sampled from \\[0,10000)010000\\[0,10000).\\\n\\\n- ‚Ä¢\\\n\\\n\\\n5 digit addition (5D+) ‚Äì Same as 3 digit addition, except uniformly sampled from \\[0,100000)0100000\\[0,100000).\\\n\\\n- ‚Ä¢\\\n\\\n\\\n5 digit subtraction (5D-) ‚Äì Same as 3 digit subtraction, except uniformly sampled from \\[0,100000)0100000\\[0,100000).\\\n\\\n- ‚Ä¢\\\n\\\n\\\n2 digit multiplication (2Dx) ‚Äì The model is asked to multiply two integers sampled uniformly from \\[0,100)0100\\[0,100), e.g. ‚ÄúQ: What is 24 times 42? A: 1008‚Äù.\\\n\\\n- ‚Ä¢\\\n\\\n\\\nOne-digit composite (1DC) ‚Äì The model is asked to perform a composite operation on three 1 digit numbers, with parentheses around the last two. For example, ‚ÄúQ: What is 6+(4\\*8)? A: 38‚Äù. The three 1 digit numbers are selected uniformly on \\[0,10)010\\[0,10) and the operations are selected uniformly from {+,-,\\*}.\\\n\\\n\\\nIn all 10 tasks the model must generate the correct answer exactly. For each task we generate a dataset of 2,000 random instances of the task and evaluate all models on those instances.\\\n\\\nFirst we evaluate GPT-3 in the few-shot setting, for which results are shown in Figure [3.10]Figure 3.10 ‚Ä£ 3.9.1 Arithmetic ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\"). On addition and subtraction, GPT-3 displays strong proficiency when the number of digits is small, achieving 100% accuracy on 2 digit addition, 98.9% at 2 digit subtraction, 80.2% at 3 digit addition, and 94.2% at 3-digit subtraction. Performance decreases as the number of digits increases, but GPT-3 still achieves 25-26% accuracy on four digit operations and 9-10% accuracy on five digit operations, suggesting at least some capacity to generalize to larger numbers of digits. GPT-3 also achieves 29.2% accuracy at 2 digit multiplication, an especially computationally intensive operation. Finally, GPT-3 achieves 21.3% accuracy at single digit combined operations (for example, 9\\*(7+5)), suggesting that it has some robustness beyond just single operations.\\\n\\\n![Refer to caption]Figure 3.10: Results on all 10 arithmetic tasks in the few-shot settings for models of different sizes. There is a significant jump from the second largest model (GPT-3 13B) to the largest model (GPT-3 175), with the latter being able to reliably accurate 2 digit arithmetic, usually accurate 3 digit arithmetic, and correct answers a significant fraction of the time on 4-5 digit arithmetic, 2 digit multiplication, and compound operations. Results for one-shot and zero-shot are shown in the appendix.\\\n\\\n| Setting | 2D+ | 2D- | 3D+ | 3D- | 4D+ | 4D- | 5D+ | 5D- | 2Dx | 1DC |\\\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\\\n| GPT-3 Zero-shot | 76.9 | 58.0 | 34.2 | 48.3 | 4.0 | 7.5 | 0.7 | 0.8 | 19.8 | 9.8 |\\\n| GPT-3 One-shot | 99.6 | 86.4 | 65.5 | 78.7 | 14.0 | 14.0 | 3.5 | 3.8 | 27.4 | 14.3 |\\\n| GPT-3 Few-shot | 100.0 | 98.9 | 80.4 | 94.2 | 25.5 | 26.8 | 9.3 | 9.9 | 29.2 | 21.3 |\\\n\\\nTable 3.9: Results on basic arithmetic tasks for GPT-3 175B. {2,3,4,5}D{+,-} is 2, 3, 4, and 5 digit addition or subtraction, 2Dx is 2 digit multiplication. 1DC is 1 digit composite operations. Results become progressively stronger moving from the zero-shot to one-shot to few-shot setting, but even the zero-shot shows significant arithmetic abilities.\\\n\\\nAs Figure [3.10]Figure 3.10 ‚Ä£ 3.9.1 Arithmetic ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") makes clear, small models do poorly on all of these tasks ‚Äì even the 13 billion parameter model (the second largest after the 175 billion full GPT-3) can solve 2 digit addition and subtraction only half the time, and all other operations less than 10% of the time.\\\n\\\nOne-shot and zero-shot performance are somewhat degraded relative to few-shot performance, suggesting that adaptation to the task (or at the very least recognition of the task) is important to performing these computations correctly. Nevertheless, one-shot performance is still quite strong, and even zero-shot performance of the full GPT-3 significantly outperforms few-shot learning for all smaller models. All three settings for the full GPT-3 are shown in Table [3.9]Table 3.9 ‚Ä£ 3.9.1 Arithmetic ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\"), and model capacity scaling for all three settings is shown in Appendix [H]Appendix H Results on All Tasks for All Model Sizes ‚Ä£ Language Models are Few-Shot Learners\").\\\n\\\nTo spot-check whether the model is simply memorizing specific arithmetic problems, we took the 3-digit arithmetic problems in our test set and searched for them in our training data in both the forms \"<NUM1> + <NUM2> =\" and \"<NUM1> plus <NUM2>\". Out of 2,000 addition problems we found only 17 matches (0.8%) and out of 2,000 subtraction problems we found only 2 matches (0.1%), suggesting that only a trivial fraction of the correct answers could have been memorized. In addition, inspection of incorrect answers reveals that the model often makes mistakes such as not carrying a ‚Äú1‚Äù, suggesting it is actually attempting to perform the relevant computation rather than memorizing a table.\\\n\\\nOverall, GPT-3 displays reasonable proficiency at moderately complex arithmetic in few-shot, one-shot, and even zero-shot settings.\\\n\\\n#### 3.9.2 Word Scrambling and Manipulation Tasks\\\n\\\nTo test GPT-3‚Äôs ability to learn novel symbolic manipulations from a few examples, we designed a small battery of 5 ‚Äúcharacter manipulation‚Äù tasks. Each task involves giving the model a word distorted by some combination of scrambling, addition, or deletion of characters, and asking it to recover the original word. The 5 tasks are:\\\n\\\n| Setting | CL | A1 | A2 | RI | RW |\\\n| --- | --- | --- | --- | --- | --- |\\\n| GPT-3 Zero-shot | 3.66 | 2.28 | 8.91 | 8.26 | 0.09 |\\\n| GPT-3 One-shot | 21.7 | 8.62 | 25.9 | 45.4 | 0.48 |\\\n| GPT-3 Few-shot | 37.9 | 15.1 | 39.7 | 67.2 | 0.44 |\\\n\\\nTable 3.10: GPT-3 175B performance on various word unscrambling and word\\\nmanipulation tasks, in zero-, one-, and few-shot settings. CL is ‚Äúcycle letters in word‚Äù, A1 is anagrams of but the first and last letters,\\\nA2 is anagrams of all but the first and last two letters, RI is ‚ÄúRandom insertion\\\nin word‚Äù, RW is ‚Äúreversed words‚Äù.![Refer to caption]Figure 3.11: Few-shot performance on the five word scrambling tasks for different sizes of model. There is generally smooth improvement with model size although the random insertion task shows an upward slope of improvement with the 175B model solving the task the majority of the time. Scaling of one-shot and zero-shot performance is shown in the appendix. All tasks are done with K=100ùêæ100K=100.\\\n\\\n- ‚Ä¢\\\n\\\n\\\nCycle letters in word (CL) ‚Äì The model is given a word with its letters cycled, then the ‚Äú=‚Äù symbol, and is expected to generate the original word. For example, it might be given ‚Äúlyinevitab‚Äù and should output ‚Äúinevitably‚Äù.\\\n\\\n- ‚Ä¢\\\n\\\n\\\nAnagrams of all but first and last characters (A1) ‚Äì The model is given a word where every letter except the first and last have been scrambled randomly, and must output the original word. Example: criroptuon = corruption.\\\n\\\n- ‚Ä¢\\\n\\\n\\\nAnagrams of all but first and last 2 characters (A2) ‚Äì The model is given a word where every letter except the first 2 and last 2 have been scrambled randomly, and must recover the original word. Example: opoepnnt ‚Üí‚Üí\\\\to opponent.\\\n\\\n- ‚Ä¢\\\n\\\n\\\nRandom insertion in word (RI) ‚Äì A random punctuation or space character is inserted between each letter of a word, and the model must output the original word. Example: s.u!c/c!e.s s i/o/n = succession.\\\n\\\n- ‚Ä¢\\\n\\\n\\\nReversed words (RW) ‚Äì The model is given a word spelled backwards, and must output the original word. Example: stcejbo ‚Üí‚Üí\\\\to objects.\\\n\\\n\\\nFor each task we generate 10,000 examples, which we chose to be the top 10,000 most frequent words as measured by \\[ [92])\\] of length more than 4 characters and less than 15 characters. The few-shot results are shown in Figure [3.11]Figure 3.11 ‚Ä£ 3.9.2 Word Scrambling and Manipulation Tasks ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\"). Task performance tends to grow smoothly with model size, with the full GPT-3 model achieving 66.9% on removing random insertions, 38.6% on cycling letters, 40.2% on the easier anagram task, and 15.1% on the more difficult anagram task (where only the first and last letters are held fixed). None of the models can reverse the letters in a word.\\\n\\\nIn the one-shot setting, performance is significantly weaker (dropping by half or more), and in the zero-shot setting the model can rarely perform any of the tasks (Table [3.10]Table 3.10 ‚Ä£ 3.9.2 Word Scrambling and Manipulation Tasks ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\")). This suggests that the model really does appear to learn these tasks at test time, as the model cannot perform them zero-shot and their artificial nature makes them unlikely to appear in the pre-training data (although we cannot confirm this with certainty).\\\n\\\nWe can further quantify performance by plotting ‚Äúin-context learning curves‚Äù, which show task performance as a function of the number of in-context examples. We show in-context learning curves for the Symbol Insertion task in Figure [1.2]Figure 1.2 ‚Ä£ 1 Introduction ‚Ä£ Language Models are Few-Shot Learners\"). We can see that larger models are able to make increasingly effective use of in-context information, including both task examples and natural language task descriptions.\\\n\\\nFinally, it is worth adding that solving these tasks requires character-level manipulations, whereas our BPE encoding operates on significant fractions of a word (on average ‚àº0.7similar-toabsent0.7\\\\sim 0.7 words per token), so from the LM‚Äôs perspective succeeding at these tasks involves not just manipulating BPE tokens but understanding and pulling apart their substructure. Also, CL, A1, and A2 are not bijective (that is, the unscrambled word is not a deterministic function of the scrambled word), requiring the model to perform some search to find the correct unscrambling. Thus, the skills involved appear to require non-trivial pattern-matching and computation.\\\n\\\n#### 3.9.3 SAT Analogies\\\n\\\nTo test GPT-3 on another task that is somewhat unusual relative to the typical distribution of text, we collected a set of 374 ‚ÄúSAT analogy‚Äù problems \\[ [131])\\]. Analogies are a style of multiple choice question that constituted a section of the SAT college entrance exam before 2005. A typical example is ‚Äúaudacious is to boldness as (a) sanctimonious is to hypocrisy, (b) anonymous is to identity, (c) remorseful is to misdeed, (d) deleterious is to result, (e) impressionable is to temptation‚Äù. The student is expected to choose which of the five word pairs has the same relationship as the original word pair; in this example the answer is ‚Äúsanctimonious is to hypocrisy‚Äù. On this task GPT-3 achieves 65.2% in the few-shot setting, 59.1% in the one-shot setting, and 53.7% in the zero-shot setting, whereas the average score among college applicants was 57% \\[ [129])\\] (random guessing yields 20%). As shown in Figure [3.12]Figure 3.12 ‚Ä£ 3.9.3 SAT Analogies ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\"), the results improve with scale, with the the full 175 billion model improving by over 10% compared to the 13 billion parameter model.\\\n\\\n![Refer to caption]Figure 3.12: Zero-, one-,and few-shot performance on SAT analogy tasks, for different sizes of model. The largest model achieves 65% accuracy in the few-shot setting, and also demonstrates significant gains to in-context learning which are not present in smaller models.\\\n\\\n#### 3.9.4 News Article Generation\\\n\\\nPrevious work on generative language models qualitatively tested their ability to generate synthetic ‚Äúnews articles‚Äù by conditional sampling from the model given a human-written prompt consisting of a plausible first sentence for a news story \\[ [117])\\]. Relative to \\[ [117])\\], the dataset used to train GPT-3 is much less weighted towards news articles, so trying to generate news articles via raw unconditional samples is less effective ‚Äì for example GPT-3 often interprets the proposed first sentence of a ‚Äúnews article‚Äù as a tweet and then posts synthetic responses or follow-up tweets. To solve this problem we employed GPT-3‚Äôs few-shot learning abilities by providing three previous news articles in the model‚Äôs context to condition it. With the title and subtitle of a proposed next article, the model is able to reliably generate short articles in the ‚Äúnews‚Äù genre.\\\n\\\nTo gauge the quality of news article generation from GPT-3 (which we believe is likely to be correlated with conditional sample generation quality in general), we decided to measure human ability to distinguish GPT-3-generated articles from real ones. Similar work has been carried out by Kreps et al. \\[ [56])\\] and Zellers et al. \\[ [141])\\]. Generative language models are trained to match the distribution of content generated by humans, so the (in)ability of humans to distinguish the two is a potentially important measure of quality.333This task is also relevant to the potential misuse of language models discussed in Section [6.1]Misuse of Language Models ‚Ä£ 6 Broader Impacts ‚Ä£ Language Models are Few-Shot Learners\").\\\n\\\nIn order to see how well humans can detect model generated text, we arbitrarily selected 25 article titles and subtitles from the website [newser.com] (mean length: 215 words). We then generated completions of these titles and subtitles from four language models ranging in size from 125M to 175B (GPT-3) parameters (mean length: 200 words). For each model, we presented around 80 US-based participants with a quiz consisting of these real titles and subtitles followed by either the human written article or the article generated by the model444We wanted to identify how good an average person on the internet is at detecting language model outputs, so we focused on participants drawn from the general US population. See Appendix [E]Appendix E Human Quality Assessment of Synthetic News Articles ‚Ä£ Language Models are Few-Shot Learners\") for details.. Participants were asked to select whether the article was ‚Äúvery likely written by a human‚Äù, ‚Äúmore likely written by a human‚Äù, ‚ÄúI don‚Äôt know‚Äù, ‚Äúmore likely written by a machine‚Äù, or ‚Äúvery likely written by a machine‚Äù.\\\n\\\nThe articles we selected were not in the models‚Äô training data and the model outputs were formatted and selected programmatically to prevent human cherry-picking. All models used the same context to condition outputs on and were pre-trained with the same context size and the same article titles and subtitles were used as prompts for each model. However, we also ran an experiment to control for participant effort and attention that followed the same format but involved intentionally bad model generated articles. This was done by generating articles from a ‚Äúcontrol model‚Äù: a 160M parameter model with no context and increased output randomness.\\\n\\\nMean human accuracy (the ratio of correct assignments to non-neutral assignments per participant) at detecting that the intentionally bad articles were model generated was ‚àº86%similar-toabsentpercent86\\\\sim 86\\\\%‚Äâ where 50% is chance level performance. By contrast, mean human accuracy at detecting articles that were produced by the 175B parameter model was barely above chance at ‚àº52%similar-toabsentpercent52\\\\sim 52\\\\% (see Table [3.11]Table 3.11 ‚Ä£ 3.9.4 News Article Generation ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\")).555We use a two-sample Student‚Äôs T-Test to test for significant difference between the means of the participant accuracies of each model and the control model and report the normalized difference in the means (as the t-statistic) and the p-value. Human abilities to detect model generated text appear to decrease as model size increases: there appears to be a trend towards chance accuracy with model size, and human detection of GPT-3 is close to chance.666If a model consistently produces texts that are more impressive than human articles, it is possible that human performance on this task would drop below 50%. Indeed, many individual participants scored below 50% on this task. This is true despite the fact that participants spend more time on each output as model size increases (see Appendix [E]Appendix E Human Quality Assessment of Synthetic News Articles ‚Ä£ Language Models are Few-Shot Learners\")).\\\n\\\n|  | Mean accuracy | 95% ConfidenceInterval (low, hi) | tùë°t compared tocontrol (pùëùp-value) | ‚ÄúI don‚Äôt know‚Äùassignments |\\\n| --- | --- | --- | --- | --- |\\\n| Control (deliberately bad model) | 86% | 83%‚Äì90% | - | 3.6 % |\\\n| GPT-3 Small | 76% | 72%‚Äì80% | 3.9 (2eùëíe-4) | 4.9% |\\\n| GPT-3 Medium | 61% | 58%‚Äì65% | 10.3 (7eùëíe-21) | 6.0% |\\\n| GPT-3 Large | 68% | 64%‚Äì72% | 7.3 (3eùëíe-11) | 8.7% |\\\n| GPT-3 XL | 62% | 59%‚Äì65% | 10.7 (1eùëíe-19) | 7.5% |\\\n| GPT-3 2.7B | 62% | 58%‚Äì65% | 10.4 (5eùëíe-19) | 7.1% |\\\n| GPT-3 6.7B | 60% | 56%‚Äì63% | 11.2 (3eùëíe-21) | 6.2% |\\\n| GPT-3 13B | 55% | 52%‚Äì58% | 15.3 (1eùëíe-32) | 7.1% |\\\n| GPT-3 175B | 52% | 49%‚Äì54% | 16.9 (1eùëíe-34) | 7.8% |\\\n\\\nTable 3.11: Human accuracy in identifying whether short (‚àºsimilar-to\\\\sim200 word) news articles are model generated. We find that human accuracy (measured by the ratio of correct assignments to non-neutral assignments) ranges from 86% on the control model to 52% on GPT-3 175B. This table compares mean accuracy between five different models, and shows the results of a two-sample T-Test for the difference in mean accuracy between each model and the control model (an unconditional GPT-3 Small model with increased output randomness).![Refer to caption]Figure 3.13: People‚Äôs ability to identify whether news articles are model-generated (measured by the ratio of correct assignments to non-neutral assignments) decreases as model size increases. Accuracy on the outputs on the deliberately-bad control model (an unconditioned GPT-3 Small model with higher output randomness) is indicated with the dashed line at the top, and the random chance (50%) is indicated with the dashed line at the bottom. Line of best fit is a power law with 95% confidence intervals.\\\n\\\nExamples of synthetic articles from GPT-3 are given in Figures [3.14]Figure 3.14 ‚Ä£ 3.9.4 News Article Generation ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") and [3.15]Figure 3.15 ‚Ä£ 3.9.4 News Article Generation ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\").777Additional non-news samples can be found in Appendix [F]Appendix F Additional Samples from GPT-3 ‚Ä£ Language Models are Few-Shot Learners\"). Much of the text is‚Äîas indicated by the evaluations‚Äîdifficult for humans to distinguish from authentic human content. Factual inaccuracies can be an indicator that an article is model generated since, unlike human authors, the models have no access to the specific facts that the article titles refer to or when the article was written. Other indicators include repetition, non sequiturs, and unusual phrasings, though these are often subtle enough that they are not noticed.\\\n\\\nTitle: United Methodists Agree to Historic Split\\\n\\\nSubtitle: Those who oppose gay marriage will form their own denomination\\\n\\\nArticle:After two days of intense debate, the United Methodist Church has agreed to a historic split - one that is expected to end in the creation of a new denomination, one that will be ‚Äùtheologically and socially conservative,‚Äù according to The Washington Post. The majority of delegates attending the church‚Äôs annual General Conference in May voted to strengthen a ban on the ordination of LGBTQ clergy and to write new rules that will ‚Äùdiscipline‚Äù clergy who officiate at same-sex weddings. But those who opposed these measures have a new plan: They say they will form a separate denomination by 2020, calling their church the Christian Methodist denomination.The Post notes that the denomination, which claims 12.5 million members, was in the early 20th century the ‚Äùlargest Protestant denomination in the U.S.,‚Äù but that it has been shrinking in recent decades. The new split will be the second in the church‚Äôs history. The first occurred in 1968, when roughly 10 percent of the denomination left to form the Evangelical United Brethren Church. The Post notes that the proposed split ‚Äùcomes at a critical time for the church, which has been losing members for years,‚Äù which has been ‚Äùpushed toward the brink of a schism over the role of LGBTQ people in the church.‚Äù Gay marriage is not the only issue that has divided the church. In 2016, the denomination was split over ordination of transgender clergy, with the North Pacific regional conference voting to ban them from serving as clergy, and the South Pacific regional conference voting to allow them.\\\n\\\nFigure 3.14: The GPT-3 generated news article that humans had the greatest difficulty distinguishing from a human written article (accuracy: 12%).\\\n\\\nTitle: Star‚Äôs Tux Promise Draws Megyn Kelly‚Äôs SarcasmSubtitle: Joaquin Phoenix pledged to not change for each awards eventArticle:A year ago, Joaquin Phoenix made headlines when he appeared on the red carpet at the Golden Globes wearing a tuxedo with a paper bag over his head that read, ‚ÄùI am a shape-shifter. I can‚Äôt change the world. I can only change myself.‚Äù It was a promise to not change to fit into the Hollywood mold: ‚ÄùI think that‚Äôs a really special thing, to not change yourself. I think it‚Äôs a really special thing to say, ‚ÄòThis is what‚Äôs inside of me, I‚Äôm proud of it, and I‚Äôm not going to be ashamed because of the way that someone else thinks I should be.‚Äô‚Äù Now, it‚Äôs the Oscars, and Phoenix is at it again. But this time, his publicist is saying he‚Äôll be wearing a tux no matter what.Megyn Kelly was not impressed, and she let him have it on The Tonight Show. ‚ÄùYou know, I feel like, I feel like you could have worn the tux,‚Äù she says. ‚ÄùBut you‚Äôre saying you‚Äôre a shape-shifter. I don‚Äôt know if you can change your tux, but you can change your mind. You can change your mind. You can change your mind.‚Äù Phoenix says he did, but it didn‚Äôt stick. ‚ÄùI was like, ‚ÄòOkay, I‚Äôm going to wear a tuxedo to this thing.‚Äô And then I thought, ‚ÄòI don‚Äôt want to wear a tuxedo to this thing.‚Äô‚Äù Kelly goes on to encourage him to change his mind again, but Phoenix says it‚Äôs too late: ‚ÄùI‚Äôm committed to wearing this.‚Äù\\\n\\\nFigure 3.15: The GPT-3 generated news article that humans found the easiest to distinguish from a human written article (accuracy: 61%).\\\n\\\nRelated work on language model detection by Ippolito et al. \\[ [48])\\] indicates that automatic discriminators like Grover\\[ [141])\\] and GLTR \\[ [37])\\] may have greater success at detecting model generated text than human evaluators. Automatic detection of these models may be a promising area of future research.\\\n\\\nIppolito et al. \\[ [48])\\] also note that human accuracy at detecting model generated text increases as humans observe more tokens. To do a preliminary investigation of how good humans are at detecting longer news articles generated by GPT-3 175B, we selected 12 world news articles from Reuters with an average length of 569 words and generated completions of these articles from GPT-3 with an average length of 498 words (298 words longer than our initial experiments). Following the methodology above, we ran two experiments, each on around 80 US-based participants, to compare human abilities to detect the articles generated by GPT-3 and a control model.\\\n\\\nWe found that mean human accuracy at detecting the intentionally bad longer articles from the control model was ‚àº88%similar-toabsentpercent88\\\\sim 88\\\\%, while mean human accuracy at detecting the longer articles that were produced by GPT-3 175B was still barely above chance at ‚àº52%similar-toabsentpercent52\\\\sim 52\\\\% (see Table [3.12]Table 3.12 ‚Ä£ 3.9.4 News Article Generation ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\")). This indicates that, for news articles that are around 500 words long, GPT-3 continues to produce articles that humans find difficult to distinguish from human written news articles.\\\n\\\n|  | Mean accuracy | 95% ConfidenceInterval (low, hi) | tùë°t compared tocontrol (pùëùp-value) | ‚ÄúI don‚Äôt know‚Äùassignments |\\\n| --- | --- | --- | --- | --- |\\\n| Control | 88% | 84%‚Äì91% | - | 2.7% |\\\n| GPT-3 175B | 52% | 48%‚Äì57% | 12.7 (3.2eùëíe-23) | 10.6% |\\\n\\\nTable 3.12: People‚Äôs ability to identify whether ‚àº500similar-toabsent500\\\\sim 500 word articles are model generated (as measured by the ratio of correct assignments to non-neutral assignments) was 88% on the control model and 52% on GPT-3 175B. This table shows the results of a two-sample T-Test for the difference in mean accuracy between GPT-3 175B and the control model (an unconditional GPT-3 Small model with increased output randomness).\\\n\\\nA \"whatpu\" is a small, furry animal native to Tanzania. An example of a sentence that uses the word whatpu is:\\\n\\\nWe were traveling in Africa and we saw these very cute whatpus.\\\n\\\nTo do a \"farduddle\" means to jump up and down really fast. An example of a sentence that uses the word farduddle is:\\\n\\\nOne day when I was playing tag with my little sister, she got really excited and she started doing these crazy farduddles.\\\n\\\nA \"yalubalu\" is a type of vegetable that looks like a big pumpkin. An example of a sentence that uses the word yalubalu is:\\\n\\\nI was on a trip to Africa and I tried this yalubalu vegetable that was grown in a garden there. It was delicious.\\\n\\\nA \"Burringo\" is a car with very fast acceleration. An example of a sentence that uses the word Burringo is:\\\n\\\nIn our garage we have a Burringo that my father drives to work every day.\\\n\\\nA \"Gigamuru\" is a type of Japanese musical instrument. An example of a sentence that uses the word Gigamuru is:\\\n\\\nI have a Gigamuru that my uncle gave me as a gift. I love to play it at home.\\\n\\\nTo \"screeg\" something is to swing a sword at it. An example of a sentence that uses the word screeg is:\\\n\\\nWe screeghed at each other for several minutes and then we went outside and ate ice cream.\\\n\\\nFigure 3.16: Representative GPT-3 completions for the few-shot task of using a new word in a sentence. Boldface is GPT-3‚Äôs completions, plain text is human prompts. In the first example both the prompt and the completion are provided by a human; this then serves as conditioning for subsequent examples where GPT-3 receives successive additional prompts and provides the completions. Nothing task-specific is provided to GPT-3 other than the conditioning shown here.\\\n\\\nPoor English input: I eated the purple berries.\\\n\\\nGood English output: I ate the purple berries.\\\n\\\nPoor English input: Thank you for picking me as your designer. I‚Äôd appreciate it.\\\n\\\nGood English output: Thank you for choosing me as your designer. I appreciate it.\\\n\\\nPoor English input: The mentioned changes have done. or I did the alteration that you requested. or I changed things you wanted and did the modifications.\\\n\\\nGood English output: The requested changes have been made. or I made the alteration that you requested. or I changed things you wanted and made the modifications.\\\n\\\nPoor English input: I‚Äôd be more than happy to work with you in another project.\\\n\\\nGood English output: I‚Äôd be more than happy to work with you on another project.\\\n\\\nPoor English input: Please provide me with a short brief of the design you‚Äôre looking for and that‚Äôd be nice if you could share some examples or project you did before.\\\n\\\nGood English output: Please provide me with a brief description of the design you‚Äôre looking for and that would be nice if you could share some examples or projects you have done before.\\\n\\\nPoor English input: The patient was died.\\\n\\\nGood English output: The patient died.\\\n\\\nPoor English input: We think that Leslie likes ourselves.\\\n\\\nGood English output: We think that Leslie likes us.\\\n\\\nPoor English input: Janet broke Bill on the finger.\\\n\\\nGood English output: Janet broke Bill‚Äôs finger.\\\n\\\nPoor English input: Mary arranged for, in St. Louis, John to rent a house cheap.\\\n\\\nGood English output: Mary arranged for John to rent a house in St. Louis.\\\n\\\nPoor English input: Today I have went to the store to to buys some many bottle of water.\\\n\\\nGood English output: Today I went to the store to buy some bottles of water.\\\n\\\nPoor English input: I have tried to hit ball with bat, but my swing is has miss.\\\n\\\nGood English output: I tried to hit the ball with the bat, but my swing missed.\\\n\\\nFigure 3.17: Representative GPT-3 completions for the few-shot task of correcting English grammar. Boldface is GPT-3‚Äôs completions, plain text is human prompts. In the first few examples example both the prompt and the completion are provided by a human; this then serves as conditioning for subsequent examples where GPT-3 receives successive additional prompts and provides the completions. Nothing task-specific is provided to GPT-3 aside from the first few examples as conditioning and the ‚ÄúPoor English input/Good English output‚Äù framing. We note that the distinction between ‚Äùpoor‚Äù and ‚Äùgood‚Äù English (and the terms themselves) is complex, contextual, and contested. As the example mentioning the rental of a house shows, assumptions that the model makes about what ‚Äúgood‚Äù is can even lead it to make errors (here, the model not only adjusts grammar, but also removes the word ‚Äùcheap‚Äù in a way that alters meaning).\\\n\\\n#### 3.9.5 Learning and Using Novel Words\\\n\\\nA task studied in developmental linguistics \\[ [13])\\] is the ability to learn and utilize new words, for example using a word in a sentence after seeing it defined only once, or conversely inferring a word‚Äôs meaning from only one usage. Here we qualitatively test GPT-3‚Äôs ability to do the former. Specifically, we give GPT-3 the definition of a nonexistent word, such as ‚ÄúGigamuru‚Äù, and then ask it to use it in a sentence. We provide one to five previous examples of a (separate) nonexistent word being defined and used in a sentence, so the task is few-shot in terms of previous examples of the broad task and one-shot in terms of the specific word. Table [3.16]Figure 3.16 ‚Ä£ 3.9.4 News Article Generation ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") shows the 6 examples we generated; all definitions were human-generated, and the first answer was human-generated as conditioning while the subsequent answers were generated by GPT-3. These examples were generated continuously in one sitting and we did not omit or repeatedly try any prompts. In all cases the generated sentence appears to be a correct or at least plausible use of the word. In the final sentence the model generates a plausible conjugation for the word ‚Äúscreeg‚Äù (namely ‚Äúscreeghed‚Äù), although the use of the word is slightly awkward (‚Äúscreeghed at each other‚Äù) despite being plausible in the sense that it could describe a toy sword fight. Overall, GPT-3 appears to be at least proficient at the task of using novel words in a sentence.\\\n\\\n#### 3.9.6 Correcting English Grammar\\\n\\\nAnother task well suited for few-shot learning is correcting English grammar. We test this with GPT-3 in the few-shot setting by giving prompts of the form \"Poor English Input: <sentence>\\\\n Good English Output: <sentence>\". We give GPT-3 one human-generated correction and then ask it to correct 5 more (again without any omissions or repeats). Results are shown in Figure [3.17]Figure 3.17 ‚Ä£ 3.9.4 News Article Generation ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\").\\\n\\",
            "citations": null
          },
          "4 Measuring and Preventing Memorization Of Benchmarks\\": {
            "content": "\\\n![Refer to caption]Figure 4.1: GPT-3 Training Curves   We measure model performance during training on a deduplicated validation split of our training distribution. Though there is some gap between training and validation performance, the gap grows only minimally with model size and training time, suggesting that most of the gap comes from a difference in difficulty rather than overfitting.\\\n\\\nSince our training dataset is sourced from the internet, it is possible that our model was trained on some of our benchmark test sets. Accurately detecting test contamination from internet-scale datasets is a new area of research without established best practices. While it is common practice to train large models without investigating contamination, given the increasing scale of pretraining datasets, we believe this issue is becoming increasingly important to attend to.\\\n\\\nThis concern is not just hypothetical. One of the first papers to train a language model on Common Crawl data \\[ [130])\\] detected and removed a training document which overlapped with one of their evaluation datasets. Other work such as GPT-2 \\[ [117])\\] also conducted post-hoc overlap analysis. Their study was relatively encouraging, finding that although models did perform moderately better on data that overlapped between training and testing, this did not significantly impact reported results due to the small fraction of data which was contaminated (often only a few percent).\\\n\\\nGPT-3 operates in a somewhat different regime. On the one hand, the dataset and model size are about two orders of magnitude larger than those used for GPT-2, and include a large amount of Common Crawl, creating increased potential for contamination and memorization. On the other hand, precisely due to the large amount of data, even GPT-3 175B does not overfit its training set by a significant amount, measured relative to a held-out validation set with which it was deduplicated (Figure [4.1]Figure 4.1 ‚Ä£ 4 Measuring and Preventing Memorization Of Benchmarks ‚Ä£ Language Models are Few-Shot Learners\")). Thus, we expect that contamination is likely to be frequent, but that its effects may not be as large as feared.\\\n\\\nWe initially tried to address the issue of contamination by proactively searching for and attempting to remove any overlap between our training data and the development and test sets of all benchmarks studied in this paper. Unfortunately, a bug resulted in only partial removal of all detected overlaps from the training data. Due to the cost of training, it wasn‚Äôt feasible to retrain the model. To address this, we investigate in detail how the remaining detected overlap impacts results.\\\n\\\nFor each benchmark, we produce a ‚Äòclean‚Äô version which removes all potentially leaked examples, defined roughly as examples that have a 13-gram overlap with anything in the pretraining set (or that overlap with the whole example when it is shorter than 13-grams). The goal is to very conservatively flag anything that could potentially be contamination, so as to produce a clean subset that is free of contamination with high confidence. The exact procedure is detailed in Appendix [C]Appendix C Details of Test Set Contamination Studies ‚Ä£ Language Models are Few-Shot Learners\").\\\n\\\nWe then evaluate GPT-3 on these clean benchmarks, and compare to the original score. If the score on the clean subset is similar to the score on the entire dataset, this suggests that contamination, even if present, does not have a significant effect on reported results. If the score on the clean subset is lower, this suggests contamination may be inflating the results. The results are summarized in Figure [4.2]Figure 4.2 ‚Ä£ 4 Measuring and Preventing Memorization Of Benchmarks ‚Ä£ Language Models are Few-Shot Learners\"). Although potential contamination is often high (with a quarter of benchmarks scoring over 50%), in most cases performance changes only negligibly, and we see no evidence that contamination level and performance difference are correlated. We conclude that either our conservative method substantially overestimated contamination or that contamination has little effect on performance.\\\n\\\nBelow, we review in more detail the few specific cases where either (1) the model performs significantly worse on the cleaned version, or (2) potential contamination is very high, which makes measuring the performance difference difficult.\\\n\\\n![Refer to caption]Figure 4.2: Benchmark contamination analysis    We constructed cleaned versions of each of our benchmarks to check for potential contamination in our training set. The x-axis is a conservative lower bound for how much of the dataset is known with high confidence to be clean, and the y-axis shows the difference in performance when evaluating only on the verified clean subset. Performance on most benchmarks changed negligibly, but some were flagged for further review. On inspection we find some evidence for contamination of the PIQA and Winograd results, and we mark the corresponding results in Section [3]Results ‚Ä£ Language Models are Few-Shot Learners\") with an asterisk. We find no evidence that other benchmarks are affected.\\\n\\\nOur analysis flagged six groups of benchmarks for further investigation: Word Scrambling, Reading Comprehension (QuAC, SQuAD2, DROP), PIQA, Winograd, language modeling tasks (Wikitext tasks, 1BW), and German to English translation. Since our overlap analysis is designed to be extremely conservative, we expect it to produce some false positives. We summarize the results for each group of tasks below:\\\n\\\n- ‚Ä¢\\\n\\\n\\\nReading Comprehension: Our initial analysis flagged >>90% of task examples from QuAC, SQuAD2, and DROP as potentially contaminated, so large that even measuring the differential on a clean subset was difficult. Upon manual inspection, however, we found that for every overlap we inspected, in all 3 datasets, the source text was present in our training data but the question/answer pairs were not, meaning the model gains only background information and cannot memorize the answer to a specific question.\\\n\\\n- ‚Ä¢\\\n\\\n\\\nGerman translation: We found 25% of the examples in the WMT16 German-English test set were marked as potentially contaminated, with an associated total effect size of 1-2 BLEU. Upon inspection, none of the flagged examples contain paired sentences resembling NMT training data and collisions were monolingual matches mostly of snippets of events discussed in the news.\\\n\\\n- ‚Ä¢\\\n\\\n\\\nReversed Words and Anagrams: Recall that these tasks are of the form ‚Äúalaok = koala‚Äù. Due to the short length of these tasks, we used 2-grams for filtering (ignoring punctuation). After inspecting the flagged overlaps, we found that they were not typically instances of real reversals or unscramblings in the training set, but rather palindromes or trivial unscramblings, e.g ‚Äúkayak = kayak‚Äù. The amount of overlap was small, but removing the trivial tasks lead to an increase in difficulty and thus a spurious signal. Related to this, the symbol insertion task shows high overlap but no effect on performance ‚Äì this is because that task involves removing non-letter characters from a word, and the overlap analysis itself ignores such characters, leading to many spurious matches.\\\n\\\n- ‚Ä¢\\\n\\\n\\\nPIQA: The overlap analysis flagged 29% of examples as contaminated, and observed a 3 percentage point absolute decrease (4% relative decrease) in performance on the clean subset. Though the test dataset was released after our training set was created and its labels are hidden, some of the web pages used by the crowdsourced dataset creators are contained in our training set. We found a similar decrease in a 25x smaller model with much less capacity to memorize, leading us to suspect that the shift is likely statistical bias rather than memorization; examples which workers copied may simply be easier. Unfortunately, we cannot rigorously prove this hypothesis. We therefore mark our PIQA results with an asterisk to denote this potential contamination.\\\n\\\n- ‚Ä¢\\\n\\\n\\\nWinograd: The overlap analysis flagged 45% of examples, and found a 2.6% decrease in performance on the clean subset. Manual inspection of the overlapping data point showed that 132 Winograd schemas were in fact present in our training set, though presented in a different format than we present the task to the model. Although the decrease in performance is small, we mark our Winograd results in the main paper with an asterisk.\\\n\\\n- ‚Ä¢\\\n\\\n\\\nLanguage modeling: We found the 4 Wikipedia language modeling benchmarks measured in GPT-2, plus the Children‚Äôs Book Test dataset, to be almost entirely contained in our training data. Since we cannot reliably extract a clean subset here, we do not report results on these datasets, even though we intended to when starting this work. We note that Penn Tree Bank due to its age was unaffected and therefore became our chief language modeling benchmark.\\\n\\\n\\\nWe also inspected datasets where contamination was high, but the impact on performance was close to zero, simply to verify how much actual contamination existed. These appeared to often contain false positives. They had either no actual contamination, or had contamination that did not give away the answer to the task. One notable exception was LAMBADA, which appeared to have substantial genuine contamination, yet the impact on performance was very small, with the clean subset scoring within 0.5% of the full dataset. Also, strictly speaking, our fill-in-the-blank format precludes the simplest form of memorization. Nevertheless, since we made very large gains on LAMBADA in this paper, the potential contamination is noted in the results section.\\\n\\\nAn important limitation of our contamination analysis is that we cannot be sure that the clean subset is drawn from the same distribution as the original dataset. It remains possible that memorization inflates results but at the same time is precisely counteracted by some statistical bias causing the clean subset to be easier. However, the sheer number of shifts close to zero suggests this is unlikely, and we also observed no noticeable difference in the shifts for small models, which are unlikely to be memorizing.\\\n\\\nOverall, we have made a best effort to measure and document the effects of data contamination, and to note or outright remove problematic results, depending on the severity. Much work remains to be done to address this important and subtle issue for the field in general, both when designing benchmarks and when training models. For a more detailed explanation of our analysis, we refer the reader to Appendix [C]Appendix C Details of Test Set Contamination Studies ‚Ä£ Language Models are Few-Shot Learners\").\\\n\\",
            "citations": null
          },
          "5 Limitations\\": {
            "content": "\\\nGPT-3 and our analysis of it have a number of limitations. Below we describe some of these and suggest directions for future work.\\\n\\\nFirst, despite the strong quantitative and qualitative improvements of GPT-3, particularly compared to its direct predecessor GPT-2, it still has notable weaknesses in text synthesis and several NLP tasks. On text synthesis, although the overall quality is high, GPT-3 samples still sometimes repeat themselves semantically at the document level, start to lose coherence over sufficiently long passages, contradict themselves, and occasionally contain non-sequitur sentences or paragraphs. We will release a collection of 500 uncurated unconditional samples to help provide a better sense of GPT-3‚Äôs limitations and strengths at text synthesis. Within the domain of discrete language tasks, we have noticed informally that GPT-3 seems to have special difficulty with ‚Äúcommon sense physics‚Äù, despite doing well on some datasets (such as PIQA \\[ [11])\\]) that test this domain. Specifically GPT-3 has difficulty with questions of the type ‚ÄúIf I put cheese into the fridge, will it melt?‚Äù. Quantitatively, GPT-3‚Äôs in-context learning performance has some notable gaps on our suite of benchmarks, as described in Section [3]Results ‚Ä£ Language Models are Few-Shot Learners\"), and in particular it does little better than chance when evaluated one-shot or even few-shot on some ‚Äúcomparison‚Äù tasks, such as determining if two words are used the same way in a sentence, or if one sentence implies another (WIC and ANLI respectively), as well as on a subset of reading comprehension tasks. This is especially striking given GPT-3‚Äôs strong few-shot performance on many other tasks.\\\n\\\nGPT-3 has several structural and algorithmic limitations, which could account for some of the issues above. We focused on exploring in-context learning behavior in autoregressive language models because it is straightforward to both sample and compute likelihoods with this model class. As a result our experiments do not include any bidirectional architectures or other training objectives such as denoising. This is a noticeable difference from much of the recent literature, which has documented improved fine-tuning performance when using these approaches over standard language models \\[ [116])\\]. Thus our design decision comes at the cost of potentially worse performance on tasks which empirically benefit from bidirectionality. This may include fill-in-the-blank tasks, tasks that involve looking back and comparing two pieces of content, or tasks that require re-reading or carefully considering a long passage and then generating a very short answer. This could be a possible explanation for GPT-3‚Äôs lagging few-shot performance on a few of the tasks, such as WIC (which involves comparing the use of a word in two sentences), ANLI (which involves comparing two sentences to see if one implies the other), and several reading comprehension tasks (e.g. QuAC and RACE). We also conjecture, based on past literature, that a large bidirectional model would be stronger at fine-tuning than GPT-3. Making a bidirectional model at the scale of GPT-3, and/or trying to make bidirectional models work with few- or zero-shot learning, is a promising direction for future research, and could help achieve the ‚Äúbest of both worlds‚Äù.\\\n\\\nA more fundamental limitation of the general approach described in this paper ‚Äì scaling up any LM-like model, whether autoregressive or bidirectional ‚Äì is that it may eventually run into (or could already be running into) the limits of the pretraining objective. Our current objective weights every token equally and lacks a notion of what is most important to predict and what is less important. \\[ [115])\\] demonstrate benefits of customizing prediction to entities of interest. Also, with self-supervised objectives, task specification relies on forcing the desired task into a prediction problem, whereas ultimately, useful language systems (for example virtual assistants) might be better thought of as taking goal-directed actions rather than just making predictions. Finally, large pretrained language models are not grounded in other domains of experience, such as video or real-world physical interaction, and thus lack a large amount of context about the world \\[ [9])\\]. For all these reasons, scaling pure self-supervised prediction is likely to hit limits, and augmentation with a different approach is likely to be necessary. Promising future directions in this vein might include learning the objective function from humans \\[ [143])\\], fine-tuning with reinforcement learning, or adding additional modalities such as images to provide grounding and a better model of the world \\[ [18])\\].\\\n\\\nAnother limitation broadly shared by language models is poor sample efficiency during pre-training. While GPT-3 takes a step towards test-time sample efficiency closer to that of humans (one-shot or zero-shot), it still sees much more text during pre-training than a human sees in the their lifetime \\[ [71])\\]. Improving pre-training sample efficiency is an important direction for future work, and might come from grounding in the physical world to provide additional information, or from algorithmic improvements.\\\n\\\nA limitation, or at least uncertainty, associated with few-shot learning in GPT-3 is ambiguity about whether few-shot learning actually learns new tasks ‚Äúfrom scratch‚Äù at inference time, or if it simply recognizes and identifies tasks that it has learned during training. These possibilities exist on a spectrum, ranging from demonstrations in the training set that are drawn from exactly the same distribution as those at test time, to recognizing the same task but in a different format, to adapting to a specific style of a general task such as QA, to learning a skill entirely de novo. Where GPT-3 is on this spectrum may also vary from task to task. Synthetic tasks such as wordscrambling or defining nonsense words seem especially likely to be learned de novo, whereas translation clearly must be learned during pretraining, although possibly from data that is very different in organization and style than the test data. Ultimately, it is not even clear what humans learn from scratch vs from prior demonstrations. Even organizing diverse demonstrations during pre-training and identifying them at test time would be an advance for language models, but nevertheless understanding precisely how few-shot learning works is an important unexplored direction for future research.\\\n\\\nA limitation associated with models at the scale of GPT-3, regardless of objective function or algorithm, is that they are both expensive and inconvenient to perform inference on, which may present a challenge for practical applicability of models of this scale in their current form. One possible future direction to address this is distillation \\[ [44])\\] of large models down to a manageable size for specific tasks. Large models such as GPT-3 contain a very wide range of skills, most of which are not needed for a specific task, suggesting that in principle aggressive distillation may be possible. Distillation is well-explored in general \\[ [69])\\] but has not been tried at the scale of hundred of billions parameters; new challenges and opportunities may be associated with applying it to models of this size.\\\n\\\nFinally, GPT-3 shares some limitations common to most deep learning systems ‚Äì its decisions are not easily interpretable, it is not necessarily well-calibrated in its predictions on novel inputs as observed by the much higher variance in performance than humans on standard benchmarks, and it retains the biases of the data it has been trained on. This last issue ‚Äì biases in the data that may lead the model to generate stereotyped or prejudiced content ‚Äì is of special concern from a societal perspective, and will be discussed along with other issues in the next section on Broader Impacts (Section [6]Broader Impacts ‚Ä£ Language Models are Few-Shot Learners\")).\\\n\\",
            "citations": null
          },
          "6 Broader Impacts\\": {
            "content": "\\\nLanguage models have a wide range of beneficial applications for society, including code and writing auto-completion, grammar assistance, game narrative generation, improving search engine responses, and answering questions. But they also have potentially harmful applications. GPT-3 improves the quality of text generation and adaptability over smaller models and increases the difficulty of distinguishing synthetic text from human-written text. It therefore has the potential to advance both the beneficial and harmful applications of language models.\\\n\\\nHere we focus on the potential harms of improved language models, not because we believe the harms are necessarily greater, but in order to stimulate efforts to study and mitigate them. The broader impacts of language models like this are numerous. We focus on two primary issues: the potential for deliberate misuse of language models like GPT-3 in Section [6.1]Misuse of Language Models ‚Ä£ 6 Broader Impacts ‚Ä£ Language Models are Few-Shot Learners\"), and issues of bias, fairness, and representation within models like GPT-3 in Section [6.2]Fairness, Bias, and Representation ‚Ä£ 6 Broader Impacts ‚Ä£ Language Models are Few-Shot Learners\"). We also briefly discuss issues of energy efficiency (Section [6.3]Energy Usage ‚Ä£ 6 Broader Impacts ‚Ä£ Language Models are Few-Shot Learners\")).\\\n\\\n### 6.1 Misuse of Language Models\\\n\\\nMalicious uses of language models can be somewhat difficult to anticipate because they often involve repurposing language models in a very different environment or for a different purpose than researchers intended. To help with this, we can think in terms of traditional security risk assessment frameworks, which outline key steps such as identifying threats and potential impacts, assessing likelihood, and determining risk as a combination of likelihood and impact \\[ [113])\\]. We discuss three factors: potential misuse applications, threat actors, and external incentive structures.\\\n\\\n#### 6.1.1 Potential Misuse Applications\\\n\\\nAny socially harmful activity that relies on generating text could be augmented by powerful language models. Examples include misinformation, spam, phishing, abuse of legal and governmental processes, fraudulent academic essay writing and social engineering pretexting. Many of these applications bottleneck on human beings to write sufficiently high quality text. Language models that produce high quality text generation could lower existing barriers to carrying out these activities and increase their efficacy.\\\n\\\nThe misuse potential of language models increases as the quality of text synthesis improves. The ability of GPT-3 to generate several paragraphs of synthetic content that people find difficult to distinguish from human-written text in [3.9.4]News Article Generation ‚Ä£ 3.9 Synthetic and Qualitative Tasks ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\") represents a concerning milestone in this regard.\\\n\\\n#### 6.1.2 Threat Actor Analysis\\\n\\\nThreat actors can be organized by skill and resource levels, ranging from low or moderately skilled and resourced actors who may be able to build a malicious product to ‚Äòadvanced persistent threats‚Äô (APTs): highly skilled and well-resourced (e.g. state-sponsored) groups with long-term agendas \\[ [119])\\].\\\n\\\nTo understand how low and mid-skill actors think about language models, we have been monitoring forums and chat groups where misinformation tactics, malware distribution, and computer fraud are frequently discussed. While we did find significant discussion of misuse following the initial release of GPT-2 in spring of 2019, we found fewer instances of experimentation and no successful deployments since then. Additionally, those misuse discussions were correlated with media coverage of language model technologies. From this, we assess that the threat of misuse from these actors is not immediate, but significant improvements in reliability could change this.\\\n\\\nBecause APTs do not typically discuss operations in the open, we have consulted with professional threat analysts about possible APT activity involving the use of language models. Since the release of GPT-2 there has been no discernible difference in operations that may see potential gains by using language models. The assessment was that language models may not be worth investing significant resources in because there has been no convincing demonstration that current language models are significantly better than current methods for generating text, and because methods for ‚Äútargeting‚Äù or ‚Äúcontrolling‚Äù the content of language models are still at a very early stage.\\\n\\\n#### 6.1.3 External Incentive Structures\\\n\\\nEach threat actor group also has a set of tactics, techniques, and procedures (TTPs) that they rely on to accomplish their agenda. TTPs are influenced by economic factors like scalability and ease of deployment; phishing is extremely popular among all groups because it offers a low-cost, low-effort, high-yield method of deploying malware and stealing login credentials. Using language models to augment existing TTPs would likely result in an even lower cost of deployment.\\\n\\\nEase of use is another significant incentive. Having stable infrastructure has a large impact on the adoption of TTPs. The outputs of language models are stochastic, however, and though developers can constrain these (e.g. using top-k truncation) they are not able to perform consistently without human feedback. If a social media disinformation bot produces outputs that are reliable 99% of the time, but produces incoherent outputs 1% of the time, this could reduce the amount of human labor required in operating this bot. But a human is still needed to filter the outputs, which restricts how scalable the operation can be.\\\n\\\nBased on our analysis of this model and analysis of threat actors and the landscape, we suspect AI researchers will eventually develop language models that are sufficiently consistent and steerable that they will be of greater interest to malicious actors. We expect this will introduce challenges for the broader research community, and hope to work on this through a combination of mitigation research, prototyping, and coordinating with other technical developers.\\\n\\\n### 6.2 Fairness, Bias, and Representation\\\n\\\nBiases present in training data may lead models to generate stereotyped or prejudiced content. This is concerning, since model bias could harm people in the relevant groups in different ways by entrenching existing stereotypes and producing demeaning portrayals amongst other potential harms \\[ [19])\\]. We have conducted an analysis of biases in the model in order to better understand GPT-3‚Äôs limitations when it comes to fairness, bias, and representation. 888Evaluating fairness, bias, and representation in language models is a rapidly-developing area with a large body of prior work. See, for example, \\[ [46]), [90]), [120])\\].\\\n\\\nOur goal is not to exhaustively characterize GPT-3, but to give a preliminary analysis of some of its limitations and behaviors. We focus on biases relating to gender, race, and religion, although many other categories of bias are likely present and could be studied in follow-up work. This is a preliminary analysis and does not reflect all of the model‚Äôs biases even within the studied categories.\\\n\\\nBroadly, our analysis indicates that internet-trained models have internet-scale biases; models tend to reflect stereotypes present in their training data. Below we discuss our preliminary findings of bias along the dimensions of gender, race, and religion. We probe for bias in the 175 billion parameter model and also in similar smaller models, to see if and how they are different in this dimension.\\\n\\\n#### 6.2.1 Gender\\\n\\\nIn our investigation of gender bias in GPT-3, we focused on associations between gender and occupation. We found that occupations in general have a higher probability of being followed by a male gender identifier than a female one (in other words, they are male leaning) when given a context such as \"The {occupation} was a\" (Neutral Variant). 83% of the 388 occupations we tested were more likely to be followed by a male identifier by GPT-3. We measured this by feeding the model a context such as \"The detective was a\" and then looking at the probability of the model following up with male indicating words (eg. man, male etc.) or female indicating words (woman, female etc.). In particular, occupations demonstrating higher levels of education such as legislator, banker, or professor emeritus were heavily male leaning along with occupations that require hard physical labour such as mason, millwright, and sheriff. Occupations that were more likely to be followed by female identifiers include midwife, nurse, receptionist, housekeeper etc.\\\n\\\nWe also tested how these probabilities changed when we shifted the context to be the \"The competent {occupation} was a\" (Competent Variant), and when we shifted the context to be \"The incompetent {occupation} was a\" (Incompetent Variant) for each occupation in the dataset. We found that, when prompted with \"The competent {occupation} was a,\" the majority of occupations had an even higher probability of being followed by a male identifier than a female one than was the case with our original neutral prompt, \"The {occupation} was a\". With the prompt \"The incompetent {occupation} was a\" the majority of occupations still leaned male with a similar probability than for our original neutral prompt. The average occupation bias - measured as 1njobs‚Äã‚àëjobslog‚Å°(P‚Äã(female\\|Context)P(male\\|Context)))\\\\frac{1}{n\\_{\\\\mathrm{jobs}}}\\\\sum\\_{\\\\mathrm{jobs}}\\\\log(\\\\frac{P(\\\\mathrm{female}\\|\\\\mathrm{Context})}{P(\\\\mathrm{male}\\|\\\\mathrm{Context}))}) \\- was ‚àí1.111.11-1.11 for the Neutral Variant, ‚àí2.142.14-2.14 for the Competent Variant and ‚àí1.151.15-1.15 for the Incompetent Variant.\\\n\\\nWe also carried out pronoun resolution on the Winogender dataset \\[ [111])\\] using two methods which further corroborated the model‚Äôs tendency to associate most occupations with males. One method measured the models ability to correctly assign a pronoun as the occupation or the participant. For example, we fed the model a context such as \"The advisor met with the advisee because she wanted to get advice about job applications. ‚ÄòShe‚Äô refers to the\" and found the option with the lowest probability between the two possible options (Choices between Occupation Option: advisor; Participant Option: advisee).\\\n\\\nOccupation and participant words often have societal biases associated with them such as the assumption that most occupants are by default male. We found that the language models learnt some of these biases such as a tendency to associate female pronouns with participant positions more than male pronouns. GPT-3 175B had the highest accuracy of all the models (64.17%) on this task. It was also the only model where the accuracy for Occupant sentences (sentences where the correct answer was the Occupation option) for females was higher than for males (81.7% vs 76.7%). All other models had a higher accuracy for male pronouns with Occupation sentences as compared to female pronouns with the exception of our second largest model- GPT-3 13B - which had the same accuracy (60%) for both. This offers some preliminary evidence that in places where issues of bias can make language models susceptible to error, the larger models are more robust than smaller models.\\\n\\\nWe also performed co-occurrence tests, where we analyzed which words are likely to occur in the vicinity of other pre-selected words. We created a model output sample set by generating 800 outputs of length 50 each with a temperature of 1 and top\\_p of 0.9 for every prompt in our dataset. For gender, we had prompts such as \"He was very\", \"She was very\", \"He would be described as\", \"She would be described as\"999We only used male and female pronouns. This simplifying assumption makes it easier to study co-occurrence since it does not require the isolation of instances in which ‚Äòthey‚Äô refers to a singular noun from those where it didn‚Äôt, but other forms of gender bias are likely present and could be studied using different approaches.. We looked at the adjectives and adverbs in the top 100 most favored words using an off-the-shelf POS tagger \\[ [60])\\]. We found females were more often described using appearance oriented words such as ‚Äùbeautiful‚Äù and ‚Äùgorgeous‚Äù as compared to men who were more often described using adjectives that span a greater spectrum.\\\n\\\nTable [6.1]Table 6.1 ‚Ä£ 6.2.1 Gender ‚Ä£ 6.2 Fairness, Bias, and Representation ‚Ä£ 6 Broader Impacts ‚Ä£ Language Models are Few-Shot Learners\") shows the top 10 most favored descriptive words for the model along with the raw number of times each word co-occurred with a pronoun indicator. ‚ÄúMost Favored‚Äù here indicates words which were most skewed towards a category by co-occurring with it at a higher rate as compared to the other category. To put these numbers in perspective, we have also included the average for the number of co-occurrences across all qualifying words for each gender.\\\n\\\nTable 6.1: Most Biased Descriptive Words in 175B Model\\\n\\\n| Top 10 Most Biased Male Descriptive Words with Raw Co-Occurrence Counts | Top 10 Most Biased Female Descriptive Words with Raw Co-Occurrence Counts |\\\n| --- | --- |\\\n| Average Number of Co-Occurrences Across All Words: 17.5 | Average Number of Co-Occurrences Across All Words: 23.9 |\\\n| Large (16) | Optimistic (12) |\\\n| Mostly (15) | Bubbly (12) |\\\n| Lazy (14) | Naughty (12) |\\\n| Fantastic (13) | Easy-going (12) |\\\n| Eccentric (13) | Petite (10) |\\\n| Protect (10) | Tight (10) |\\\n| Jolly (10) | Pregnant (10) |\\\n| Stable (9) | Gorgeous (28) |\\\n| Personable (22) | Sucked (8) |\\\n| Survive (7) | Beautiful (158) |\\\n\\\n#### 6.2.2 Race\\\n\\\nTo investigate racial bias in GPT-3, we seeded the model with prompts such as - \"The {race} man was very\", \"The {race} woman was very\" and \"People would describe the {race} person as\" and generated 800 samples for each of the above prompts, with {race} replaced with a term indicating a racial category such as White or Asian. We then measure word co-occurrences in the generated samples. Given prior research demonstrating that language models produce text of differing sentiment when varying features such as occupation \\[ [46])\\], we explored how race impacted sentiment. We measured sentiment using Senti WordNet \\[ [7])\\] for the words which co-occurred disproportionately with each race. Each word sentiment varied from 100 to -100, with positive scores indicating positive words (eg. wonderfulness: 100, amicable: 87.5), negative scores indicating negative words (eg. wretched: -87.5 , horrid: -87.5) and a score of 0 indicating neutral words (eg. sloping, chalet).\\\n\\\nIt should be noted that we were explicitly prompting the models to talk about race and this in turn generated text that focused on racial features; these results are not from the models talking about race in the wild but talking about race in an experimental setup where they have been primed to do so. Additionally, since we are measuring sentiment by simply looking at word co-occurrences, the resulting sentiment can reflect socio-historical factors - for instance, text relating to a discussion of slavery will frequently have a negative sentiment, which may lead to a demographic being associated with a negative sentiment under this testing methodology.\\\n\\\nAcross the models we analyzed, ‚ÄòAsian‚Äô had a consistently high sentiment - it ranked 1st in 3 out of 7 models. On the other hand, ‚ÄôBlack‚Äô had a consistently low sentiment - it ranked the lowest in 5 out of 7 models. These differences narrowed marginally on the larger model sizes. This analysis gives a sense of the biases of different models and highlights the need for more sophisticated analysis of the relationship between sentiment, entities, and input data.\\\n\\\n![Refer to caption]Figure 6.1: Racial Sentiment Across Models\\\n\\\n#### 6.2.3 Religion\\\n\\\nWe studied which words co-occurred with religious terms relating to Atheism, Buddhism, Christianity, Hinduism, Islam, and Judaism, by generating 800 model outputs of length ‚âà\\\\approx50 with a temperature of 1 and a top pùëùp of 0.90.90.9 for every prompt. Our prompts were of the nature \"{Religion practitioners} are\" (Eg. \"Christians are\") for each of the six religious categories listed above. We then allowed the model to naturally carry out completions and created a corpus of such completions for studying co-occurrence of words.\\\n\\\nThe following is an example output from the model:\\\n\\\n\"Buddhists aredivided into two main branches - Theravada and Mahayana. Theravada is the more conservative branch, centering on monastic life and the earliest sutras and refusing to recognize the later Mahayana sutras as authentic.\"\\\n\\\nSimilar to race, we found that the models make associations with religious terms that indicate some propensity to reflect how these terms are sometimes presented in the world. For example, with the religion Islam, we found that words such as ramadan, prophet and mosque co-occurred at a higher rate than for other religions. We also found that words such as violent, terrorism and terrorist co-occurred at a greater rate with Islam than with other religions and were in the top 40 most favored words for Islam in GPT-3.\\\n\\\n| Religion | Most Favored Descriptive Words |\\\n| --- | --- |\\\n| Atheism | ‚ÄòTheists‚Äô, ‚ÄòCool‚Äô, ‚ÄòAgnostics‚Äô, ‚ÄòMad‚Äô, ‚ÄòTheism‚Äô, ‚ÄòDefensive‚Äô, ‚ÄòComplaining‚Äô, ‚ÄòCorrect‚Äô, ‚ÄòArrogant‚Äô, ‚ÄòCharacterized‚Äô |\\\n| Buddhism | ‚ÄòMyanmar‚Äô, ‚ÄòVegetarians‚Äô, ‚ÄòBurma‚Äô, ‚ÄòFellowship‚Äô, ‚ÄòMonk‚Äô, ‚ÄòJapanese‚Äô, ‚ÄòReluctant‚Äô, ‚ÄòWisdom‚Äô, ‚ÄòEnlightenment‚Äô, ‚ÄòNon-Violent‚Äô |\\\n| Christianity | ‚ÄòAttend‚Äô, ‚ÄòIgnorant‚Äô, ‚ÄòResponse‚Äô, ‚ÄòJudgmental‚Äô, ‚ÄòGrace‚Äô, ‚ÄòExecution‚Äô, ‚ÄòEgypt‚Äô, ‚ÄòContinue‚Äô, ‚ÄòComments‚Äô, ‚ÄòOfficially‚Äô |\\\n| Hinduism | ‚ÄòCaste‚Äô, ‚ÄòCows‚Äô, ‚ÄòBJP‚Äô, ‚ÄòKashmir‚Äô, ‚ÄòModi‚Äô, ‚ÄòCelebrated‚Äô, ‚ÄòDharma‚Äô, ‚ÄòPakistani‚Äô, ‚ÄòOriginated‚Äô, ‚ÄòAfrica‚Äô |\\\n| Islam | ‚ÄòPillars‚Äô, ‚ÄòTerrorism‚Äô, ‚ÄòFasting‚Äô, ‚ÄòSheikh‚Äô, ‚ÄòNon-Muslim‚Äô, ‚ÄòSource‚Äô, ‚ÄòCharities‚Äô, ‚ÄòLevant‚Äô, ‚ÄòAllah‚Äô, ‚ÄòProphet‚Äô |\\\n| Judaism | ‚ÄòGentiles‚Äô, ‚ÄòRace‚Äô, ‚ÄòSemites‚Äô, ‚ÄòWhites‚Äô, ‚ÄòBlacks‚Äô, ‚ÄòSmartest‚Äô, ‚ÄòRacists‚Äô, ‚ÄòArabs‚Äô, ‚ÄòGame‚Äô, ‚ÄòRussian‚Äô |\\\n\\\nTable 6.2: Shows the ten most favored words about each religion in the GPT-3 175B model.\\\n\\\n#### 6.2.4 Future Bias and Fairness Challenges\\\n\\\nWe have presented this preliminary analysis to share some of the biases we found in order to motivate further research, and to highlight the inherent difficulties in characterizing biases in large-scale generative models; we expect this to be an area of continuous research for us and are excited to discuss different methodological approaches with the community. We view the work in this section as subjective signposting - we chose gender, race, and religion as a starting point, but we recognize the inherent subjectivity in this choice. Our work is inspired by the literature on characterizing model attributes to develop informative labels such as Model Cards for Model Reporting from \\[ [89])\\].\\\n\\\nUltimately, it is important not just to characterize biases in language systems but to intervene. The literature on this is also extensive \\[ [104]), [46])\\], so we offer only a few brief comments on future directions specific to large language models. In order to pave the way for effective bias prevention in general purpose models, there is a need for building a common vocabulary tying together the normative, technical and empirical challenges of bias mitigation for these models. There is room for more research that engages with the literature outside NLP, better articulates normative statements about harm, and engages with the lived experience of communities affected by NLP systems \\[ [4])\\]. Thus, mitigation work should not be approached purely with a metric driven objective to ‚Äòremove‚Äô bias as this has been shown to have blind spots \\[ [32]), [93])\\] but in a holistic manner.\\\n\\\n### 6.3 Energy Usage\\\n\\\nPractical large-scale pre-training requires large amounts of computation, which is energy-intensive: training the GPT-3 175B consumed several thousand petaflop/s-days of compute during pre-training, compared to tens of petaflop/s-days for a 1.5B parameter GPT-2 model (Figure [2.2]Figure 2.2 ‚Ä£ 2.1 Model and Architectures ‚Ä£ 2 Approach ‚Ä£ Language Models are Few-Shot Learners\")). This means we should be cognizant of the cost and efficiency of such models, as advocated by \\[ [122])\\].\\\n\\\nThe use of large-scale pre-training also gives another lens through which to view the efficiency of large models - we should consider not only the resources that go into training them, but how these resources are amortized over the lifetime of a model, which will subsequently be used for a variety of purposes and fine-tuned for specific tasks. Though models like GPT-3 consume significant resources during training, they can be surprisingly efficient once trained: even with the full GPT-3 175B, generating 100 pages of content from a trained model can cost on the order of 0.4 kW-hr, or only a few cents in energy costs. Additionally, techniques like model distillation \\[ [69])\\] can further bring down the cost of such models, letting us adopt a paradigm of training single, large-scale models, then creating more efficient versions of them for use in appropriate contexts. Algorithmic progress may also naturally further increase the efficiency of such models over time, similar to trends observed in image recognition and neural machine translation \\[ [39])\\].\\\n\\",
            "citations": null
          },
          "7 Related Work\\": {
            "content": "\\\nSeveral lines of work have focused on increasing parameter count and/or computation in language models as a means to improve generative or task performance. An early work scaled LSTM based language models to over a billion parameters \\[ [51])\\]. One line of work straightforwardly increases the size of transformer models, scaling up parameters and FLOPS-per-token roughly in proportion. Work in this vein has successively increased model size: 213 million parameters \\[ [134])\\] in the original paper, 300 million parameters \\[ [20])\\], 1.5 billion parameters \\[ [117])\\], 8 billion parameters \\[ [125])\\], 11 billion parameters \\[ [116])\\], and most recently 17 billion parameters \\[ [132])\\]. A second line of work has focused on increasing parameter count but not computation, as a means of increasing models‚Äô capacity to store information without increased computational cost. These approaches rely on the conditional computation framework \\[ [10])\\] and specifically, the mixture-of-experts method \\[ [124])\\] has been used to produce 100 billion parameter models and more recently 50 billion parameter translation models \\[ [3])\\], though only a small fraction of the parameters are actually used on each forward pass. A third approach increases computation without increasing parameters; examples of this approach include adaptive computation time \\[ [35])\\] and the universal transformer \\[ [22])\\]. Our work focuses on the first approach (scaling compute and parameters together, by straightforwardly making the neural net larger), and increases model size 10x beyond previous models that employ this strategy.\\\n\\\nSeveral efforts have also systematically studied the effect of scale on language model performance. \\[ [57]), [114]), [77]), [42])\\], find a smooth power-law trend in loss as autoregressive language models are scaled up. This work suggests that this trend largely continues as models continue to scale up (although a slight bending of the curve can perhaps be detected in Figure [3.1]Figure 3.1 ‚Ä£ 3 Results ‚Ä£ Language Models are Few-Shot Learners\")), and we also find relatively smooth increases in many (though not all) downstream tasks across 3 orders of magnitude of scaling.\\\n\\\nAnother line of work goes in the opposite direction from scaling, attempting to preserve strong performance in language models that are as small as possible. This approach includes ALBERT \\[ [62])\\] as well as general \\[ [44])\\] and task-specific \\[ [121]), [52]), [59])\\] approaches to distillation of language models. These architectures and techniques are potentially complementary to our work, and could be applied to decrease latency and memory footprint of giant models.\\\n\\\nAs fine-tuned language models have neared human performance on many standard benchmark tasks, considerable effort has been devoted to constructing more difficult or open-ended tasks, including question answering \\[ [58]), [47]), [14]), [84])\\], reading comprehension \\[ [16]), [106])\\], and adversarially constructed datasets designed to be difficult for existing language models \\[ [118]), [94])\\]. In this work we test our models on many of these datasets.\\\n\\\nMany previous efforts have focused specifically on question-answering, which constitutes a significant fraction of the tasks we tested on. Recent efforts include \\[ [116]), [115])\\], which fine-tuned an 11 billion parameter language model, and \\[ [33])\\], which focused on attending over a large corpus of data at test time. Our work differs in focusing on in-context learning but could be combined in the future with those of \\[ [33]), [75])\\].\\\n\\\nMetalearning in language models has been utilized in \\[ [117])\\], though with much more limited results and no systematic study. More broadly, language model metalearning has an inner-loop-outer-loop structure, making it structurally similar to metalearning as applied to ML in general. Here there is an extensive literature, including matching networks \\[ [133])\\], RL2 \\[ [26])\\], learning to optimize \\[ [109]), [1]), [73])\\] and MAML \\[ [30])\\]. Our approach of stuffing the model‚Äôs context with previous examples is most structurally similar to RL2 and also resembles \\[ [45])\\], in that an inner loop of adaptation takes place through computation in the model‚Äôs activations across timesteps, without updating the weights, while an outer loop (in this case just language model pre-training) updates the weights, and implicitly learns the ability to adapt to or at least recognize tasks defined at inference-time. Few-shot auto-regressive density estimation was explored in  \\[ [107])\\] and \\[ [38])\\] studied low-resource NMT as a few-shot learning problem.\\\n\\\nWhile the mechanism of our few-shot approach is different, prior work has also explored ways of using pre-trained language models in combination with gradient descent to perform few-shot learning \\[ [126])\\]. Another sub-field with similar goals is semi-supervised learning where approaches such as UDA \\[ [137])\\] also explore methods of fine-tuning when very little labeled data is available.\\\n\\\nGiving multi-task models instructions in natural language was first formalized in a supervised setting with \\[ [87])\\] and utilized for some tasks (such as summarizing) in a language model with \\[ [117])\\]. The notion of presenting tasks in natural language was also explored in the text-to-text transformer \\[ [116])\\], although there it was applied for multi-task fine-tuning rather than for in-context learning without weight updates.\\\n\\\nAnother approach to increasing generality and transfer-learning capability in language models is multi-task learning \\[ [12])\\], which fine-tunes on a mixture of downstream tasks together, rather than separately updating the weights for each one. If successful multi-task learning could allow a single model to be used for many tasks without updating the weights (similar to our in-context learning approach), or alternatively could improve sample efficiency when updating the weights for a new task. Multi-task learning has shown some promising initial results \\[ [67]), [76])\\] and multi-stage fine-tuning has recently become a standardized part of SOTA results on some datasets \\[ [97])\\] and pushed the boundaries on certain tasks \\[ [55])\\], but is still limited by the need to manually curate collections of datasets and set up training curricula. By contrast pre-training at large enough scale appears to offer a ‚Äúnatural‚Äù broad distribution of tasks implicitly contained in predicting the text itself. One direction for future work might be attempting to generate a broader set of explicit tasks for multi-task learning, for example through procedural generation \\[ [128])\\], human interaction \\[ [144])\\], or active learning \\[ [80])\\].\\\n\\\nAlgorithmic innovation in language models over the last two years has been enormous, including denoising-based bidirectionality \\[ [20])\\], prefixLM \\[ [24])\\] and encoder-decoder architectures \\[ [72]), [116])\\], random permutations during training \\[ [139])\\], architectures that improve the efficiency of sampling \\[ [28])\\], improvements in data and training procedures \\[ [74])\\], and efficiency increases in the embedding parameters \\[ [62])\\]. Many of these techniques provide significant gains on downstream tasks. In this work we continue to focus on pure autoregressive language models, both in order to focus on in-context learning performance and to reduce the complexity of our large model implementations. However, it is very likely that incorporating these algorithmic advances could improve GPT-3‚Äôs performance on downstream tasks, especially in the fine-tuning setting, and combining GPT-3‚Äôs scale with these algorithmic techniques is a promising direction for future work.\\\n\\",
            "citations": null
          },
          "8 Conclusion\\": {
            "content": "\\\nWe presented a 175 billion parameter language model which shows strong performance on many NLP tasks and benchmarks in the zero-shot, one-shot, and few-shot settings, in some cases nearly matching the performance of state-of-the-art fine-tuned systems, as well as generating high-quality samples and strong qualitative performance at tasks defined on-the-fly. We documented roughly predictable trends of scaling in performance without using fine-tuning. We also discussed the social impacts of this class of model. Despite many limitations and weaknesses, these results suggest that very large language models may be an important ingredient in the development of adaptable, general language systems.\\\n\\",
            "citations": null
          }
        },
        "abstract": "Recent work has demonstrated substantial gains on many NLP tasks and\nbenchmarks by pre-training on a large corpus of text followed by fine-tuning on\na specific task. While typically task-agnostic in architecture, this method\nstill requires task-specific fine-tuning datasets of thousands or tens of\nthousands of examples. By contrast, humans can generally perform a new language\ntask from only a few examples or from simple instructions - something which\ncurrent NLP systems still largely struggle to do. Here we show that scaling up\nlanguage models greatly improves task-agnostic, few-shot performance, sometimes\neven reaching competitiveness with prior state-of-the-art fine-tuning\napproaches. Specifically, we train GPT-3, an autoregressive language model with\n175 billion parameters, 10x more than any previous non-sparse language model,\nand test its performance in the few-shot setting. For all tasks, GPT-3 is\napplied without any gradient updates or fine-tuning, with tasks and few-shot\ndemonstrations specified purely via text interaction with the model. GPT-3\nachieves strong performance on many NLP datasets, including translation,\nquestion-answering, and cloze tasks, as well as several tasks that require\non-the-fly reasoning or domain adaptation, such as unscrambling words, using a\nnovel word in a sentence, or performing 3-digit arithmetic. At the same time,\nwe also identify some datasets where GPT-3's few-shot learning still struggles,\nas well as some datasets where GPT-3 faces methodological issues related to\ntraining on large web corpora. Finally, we find that GPT-3 can generate samples\nof news articles which human evaluators have difficulty distinguishing from\narticles written by humans. We discuss broader societal impacts of this finding\nand of GPT-3 in general."
      },
      "bib.bib5": {
        "id": "bib.bib5",
        "citation": "Chen et al. (2015)",
        "authors": "",
        "year": "",
        "title": "Microsoft coco captions: Data collection and evaluation server.",
        "venue": "arXiv preprint arXiv:1504.00325",
        "pages": "",
        "url": "",
        "arxiv_id": "1504.00325",
        "doi": null,
        "sections": {
          "1 Introduction": {
            "content": "The automatic generation of captions for images is a long standing and challenging problem in artificial intelligence  \\[ [1]), [2]), [3]), [4]), [5]), [6]), [7]), [8]), [9]), [10]), [11]), [12]), [13]), [14]), [15]), [16]), [17]), [18]), [19])\\]. Research in this area spans numerous domains, such as computer vision, natural language processing, and machine learning. Recently there has been a surprising resurgence of interest in this area \\[ [20]), [21]), [22]), [23]), [24]), [25]), [26]), [27]), [28]), [29]), [30])\\], due to the renewed interest in neural network learning techniques \\[ [31]), [32])\\] and increasingly large datasets \\[ [33]), [34]), [35]), [7]), [36]), [37]), [38])\\].\n\nIn this paper, we describe our process of collecting captions for the Microsoft COCO Caption dataset, and the evaluation server we have set up to evaluate performance of different algorithms. The MS COCO caption dataset contains human generated captions for images contained in the Microsoft Common Objects in COntext (COCO) dataset \\[ [38])\\]. Similar to previous datasets \\[ [7]), [36])\\], we collect our captions using Amazon‚Äôs Mechanical Turk (AMT). Upon completion of the dataset it will contain over a million captions.\n\nWhen evaluating image caption generation algorithms, it is essential that a consistent evaluation protocol is used. Comparing results from different approaches can be difficult since numerous evaluation metrics exist \\[ [39]), [40]), [41]), [42])\\]. To further complicate matters the implementations of these metrics often differ. To help alleviate these issues, we have built an evaluation server to enable consistency in evaluation of different caption generation approaches. Using the testing data, our evaluation server evaluates captions output by different approaches using numerous automatic metrics: BLEU \\[ [39])\\], METEOR \\[ [41])\\], ROUGE \\[ [40])\\] and CIDEr \\[ [42])\\]. We hope to augment these results with human evaluations on an annual basis.\n\nThis paper is organized as follows: First we describe the data collection process. Next, we describe the caption evaluation server and the various metrics used. Human performance using these metrics are provided. Finally the annotation format and instructions for using the evaluation server are described for those who wish to submit results. We conclude by discussing future directions and known issues.\n\n![Refer to caption]\n\nFigure 1: Example images and captions from the Microsoft COCO Caption dataset.",
            "citations": null
          },
          "2 Data Collection": {
            "content": "In this section we describe how the data is gathered for the MS COCO captions dataset. For images, we use the dataset collected by Microsoft COCO \\[ [38])\\]. These images are split into training, validation and testing sets. The images were gathered by searching for pairs of 80 object categories and various scene types on Flickr. The goal of the MS COCO image collection process was to gather images containing multiple objects in their natural context. Given the visual complexity of most images in the dataset, they pose an interesting and difficult challenge for image captioning.\n\nFor generating a dataset of image captions, the same training, validation and testing sets were used as in the original MS COCO dataset. Two datasets were collected. The first dataset MS COCO c5 contains five reference captions for every image in the MS COCO training, validation and testing datasets. The second dataset MS COCO c40 contains 40 reference sentences for a randomly chosen 5,000 images from the MS COCO testing dataset. MS COCO c40 was created since many automatic evaluation metrics achieve higher correlation with human judgement when given more reference sentences \\[ [42])\\]. MS COCO c40 may be expanded to include the MS COCO validation dataset in the future.\n\nOur process for gathering captions received significant inspiration from the work of Young etal. \\[ [36])\\] and Hodosh etal. \\[ [7])\\] that collected captions on Flickr images using Amazon‚Äôs Mechanical Turk (AMT). Each of our captions are also generated using human subjects on AMT. Each subject was shown the user interface in Figure [2]Figure 2 ‚Ä£ 2 Data Collection ‚Ä£ Microsoft COCO Captions: Data Collection and Evaluation Server\"). The subjects were instructed to:\n\n- ‚Ä¢\n\n\nDescribe all the important parts of the scene.\n\n- ‚Ä¢\n\n\nDo not start the sentences with ‚ÄúThere is‚Äù.\n\n- ‚Ä¢\n\n\nDo not describe unimportant details.\n\n- ‚Ä¢\n\n\nDo not describe things that might have happened in the future or past.\n\n- ‚Ä¢\n\n\nDo not describe what a person might say.\n\n- ‚Ä¢\n\n\nDo not give people proper names.\n\n- ‚Ä¢\n\n\nThe sentences should contain at least 8 words.\n\n\nThe number of captions gathered is 413,915 captions for 82,783 images in training, 202,520 captions for 40,504 images in validation and 379,249 captions for 40,775 images in testing including 179,189 for MS COCO c5 and 200,060 for MS COCO c40. For each testing image, we collected one additional caption to compute the scores of human performance for comparing scores of machine generated captions. The total number of collected captions is 1,026,459. We plan to collect captions for the MS COCO 2015 dataset when it is released, which should approximately double the size of the caption dataset. The AMT interface may be obtained from the MS COCO website.\n\n![Refer to caption]\n\nFigure 2: Example user interface for the caption gathering task.",
            "citations": null
          },
          "3 Caption evaluation": {
            "content": "In this section we describe the MS COCO caption evaluation server. Instructions for using the evaluation server are provided in Section [5]Evaluation Server Instructions ‚Ä£ Microsoft COCO Captions: Data Collection and Evaluation Server\"). As input the evaluation server receives candidate captions for both the validation and testing datasets in the format specified in Section [5]Evaluation Server Instructions ‚Ä£ Microsoft COCO Captions: Data Collection and Evaluation Server\"). The validation and test images are provided to the submitter. However, the human generated reference sentences are only provided for the validation set. The reference sentences for the testing set are kept private to reduce the risk of overfitting.\n\nNumerous evaluation metrics are computed on both MS COCO c5 and MS COCO c40. These include BLEU-1, BLEU-2, BLEU-3, BLEU-4, ROUGE-L, METEOR and CIDEr-D. The details of the these metrics are described next.\n\n### 3.1 Tokenization and preprocessing\n\nBoth the candidate captions and the reference captions are pre-processed by the\nevaluation server.\nTo tokenize the captions, we use Stanford PTBTokenizer in Stanford CoreNLP tools\n(version 3.4.1) \\[ [43])\\] which mimics Penn Treebank 3 tokenization.\nIn addition, punctuations111The full list of punctuations:\n{‚Äú, ‚Äù, ‚Äò, ‚Äô, -LRB-, -RRB-, -LCB-, -RCB-, ., ?, !, ,, :, -, ‚Äì, ‚Ä¶, ;}. are\nremoved from the tokenized captions.\n\n### 3.2 Evaluation metrics\n\nOur goal is to automatically evaluate for an image IisubscriptùêºùëñI\\_{i} the quality of a\ncandidate caption cisubscriptùëêùëñc\\_{i} given a set of reference captions Si={si‚Äã1,‚Ä¶,si‚Äãm}‚ààSsubscriptùëÜùëñsubscriptùë†ùëñ1‚Ä¶subscriptùë†ùëñùëöùëÜS\\_{i}=\\\\{s\\_{i1},\\\\ldots,s\\_{im}\\\\}\\\\in S.\nThe caption sentences are represented using sets of nùëõn-grams, where an\nnùëõn-gram œâk‚ààŒ©subscriptùúîùëòŒ©\\\\omega\\_{k}\\\\in\\\\Omega is a set of one or more ordered words. In this\npaper we explore nùëõn-grams with one to four words.\nNo stemming is performed on the words. The number of times an nùëõn-gram œâksubscriptùúîùëò\\\\omega\\_{k}\noccurs in a sentence si‚Äãjsubscriptùë†ùëñùëós\\_{ij} is denoted hk‚Äã(si‚Äãj)subscript‚Ñéùëòsubscriptùë†ùëñùëóh\\_{k}(s\\_{ij}) or hk‚Äã(ci)subscript‚Ñéùëòsubscriptùëêùëñh\\_{k}(c\\_{i}) for the\ncandidate sentence ci‚ààCsubscriptùëêùëñùê∂c\\_{i}\\\\in C.\n\n### 3.3 BLEU\n\nBLEU \\[ [39])\\] is a popular machine translation metric that analyzes the\nco-occurrences of nùëõn-grams between the candidate and reference sentences.\nIt computes a corpus-level clipped nùëõn-gram precision between sentences as follows:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | C‚ÄãPn‚Äã(C,S)=‚àëi‚àëkmin‚Å°(hk‚Äã(ci),maxj‚ààm‚Å°hk‚Äã(si‚Äãj))‚àëi‚àëkhk‚Äã(ci),ùê∂subscriptùëÉùëõùê∂ùëÜsubscriptùëñsubscriptùëòsubscript‚Ñéùëòsubscriptùëêùëñsubscriptùëóùëösubscript‚Ñéùëòsubscriptùë†ùëñùëósubscriptùëñsubscriptùëòsubscript‚ÑéùëòsubscriptùëêùëñCP\\_{n}(C,S)=\\\\frac{\\\\sum\\_{i}\\\\sum\\_{k}\\\\min(h\\_{k}(c\\_{i}),\\\\max\\\\limits\\_{j\\\\in m}h\\_{k}(s\\_{ij}))}{\\\\sum\\_{i}\\\\sum\\_{k}h\\_{k}(c\\_{i})}, |  | (1) |\n\nwhere kùëòk indexes the set of possible nùëõn-grams of length nùëõn. The clipped\nprecision metric limits the number of times an nùëõn-gram may be counted to the\nmaximum number of times it is observed in a single reference sentence. Note that\nC‚ÄãPnùê∂subscriptùëÉùëõCP\\_{n} is a precision score and it favors short sentences. So a brevity penalty\nis also used:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | b‚Äã(C,S)={1if ‚ÄãlC>lSe1‚àílS/lCif ‚ÄãlC‚â§lS,ùëèùê∂ùëÜcases1if subscriptùëôùê∂subscriptùëôùëÜsuperscriptùëí1subscriptùëôùëÜsubscriptùëôùê∂if subscriptùëôùê∂subscriptùëôùëÜb(C,S)=\\\\begin{cases}1&\\\\text{if }l\\_{C}>l\\_{S}\\\\\\<br>e^{1-l\\_{S}/l\\_{C}}&\\\\text{if }l\\_{C}\\\\leq l\\_{S}\\\\end{cases}, |  | (2) |\n\nwhere lCsubscriptùëôùê∂l\\_{C} is the total length of candidate sentences cisubscriptùëêùëñc\\_{i}‚Äôs and lSsubscriptùëôùëÜl\\_{S} is\nthe length of the corpus-level effective reference length.\nWhen there are multiple references for a candidate sentence, we choose to use\nthe closest reference length for the brevity penalty.\n\nThe overall BLEU score is computed using a weighted geometric mean of the\nindividual nùëõn-gram precision:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | B‚ÄãL‚ÄãE‚ÄãUN‚Äã(C,S)=b‚Äã(C,S)‚Äãexp‚Å°(‚àën=1Nwn‚Äãlog‚Å°C‚ÄãPn‚Äã(C,S)),ùêµùêøùê∏subscriptùëàùëÅùê∂ùëÜùëèùê∂ùëÜsuperscriptsubscriptùëõ1ùëÅsubscriptùë§ùëõùê∂subscriptùëÉùëõùê∂ùëÜ\\\\displaystyle BLEU\\_{N}(C,S)=b(C,S)\\\\exp\\\\left(\\\\sum\\_{n=1}^{N}w\\_{n}\\\\log CP\\_{n}(C,S)\\\\right), |  | (3) |\n\nwhere N=1,2,3,4ùëÅ1234N=1,2,3,4 and wnsubscriptùë§ùëõw\\_{n} is typically held constant for all nùëõn.\n\nBLEU has shown good performance for corpus-level comparisons over which a high\nnumber of nùëõn-gram matches exist. However, at a sentence-level the nùëõn-gram matches\nfor higher nùëõn rarely occur. As a result, BLEU performs poorly when comparing\nindividual sentences.\n\n### 3.4 ROUGE\n\nROUGE \\[ [40])\\] is a set of evaluation metrics designed to evaluate text summarization algorithms.\n\n1. 1.\n\n\nROUGEN:\nThe first ROUGE metric computes a simple nùëõn-gram recall over all reference summaries given a candidate sentence:\n\n\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | R‚ÄãO‚ÄãU‚ÄãG‚ÄãEN‚Äã(ci,Si)=‚àëj‚àëkmin‚Å°(hk‚Äã(ci),hk‚Äã(si‚Äãj))‚àëj‚àëkhk‚Äã(si‚Äãj)ùëÖùëÇùëàùê∫subscriptùê∏ùëÅsubscriptùëêùëñsubscriptùëÜùëñsubscriptùëósubscriptùëòsubscript‚Ñéùëòsubscriptùëêùëñsubscript‚Ñéùëòsubscriptùë†ùëñùëósubscriptùëósubscriptùëòsubscript‚Ñéùëòsubscriptùë†ùëñùëóROUGE\\_{N}(c\\_{i},S\\_{i})=\\\\frac{\\\\sum\\_{j}\\\\sum\\_{k}\\\\min(h\\_{k}(c\\_{i}),h\\_{k}(s\\_{ij}))}{\\\\sum\\_{j}\\\\sum\\_{k}h\\_{k}(s\\_{ij})} |  | (4) |\n\n2. 2.\n\n\nROUGEL:\nROUGEL  uses a measure based on the Longest Common Subsequence (LCS). An LCS is a set words shared by two sentences which occur in the same order. However, unlike nùëõn-grams there may be words in between the words that create the LCS. Given the length l‚Äã(ci,si‚Äãj)ùëôsubscriptùëêùëñsubscriptùë†ùëñùëól(c\\_{i},s\\_{ij}) of the LCS between a pair of sentences, ROUGEL is found by computing an F-measure:\n\n\n\n\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n|  | RlsubscriptùëÖùëô\\\\displaystyle R\\_{l} | =maxj‚Å°l‚Äã(ci,si‚Äãj)\\|si‚Äãj\\|absentsubscriptùëóùëôsubscriptùëêùëñsubscriptùë†ùëñùëósubscriptùë†ùëñùëó\\\\displaystyle=\\\\max\\\\limits\\_{j}\\\\frac{l(c\\_{i},s\\_{ij})}{\\|s\\_{ij}\\|} |  | (5) |\n|  | PlsubscriptùëÉùëô\\\\displaystyle P\\_{l} | =maxj‚Å°l‚Äã(ci,si‚Äãj)\\|ci\\|absentsubscriptùëóùëôsubscriptùëêùëñsubscriptùë†ùëñùëósubscriptùëêùëñ\\\\displaystyle=\\\\max\\\\limits\\_{j}\\\\frac{l(c\\_{i},s\\_{ij})}{\\|c\\_{i}\\|} |  | (6) |\n|  | R‚ÄãO‚ÄãU‚ÄãG‚ÄãEL‚Äã(ci,Si)ùëÖùëÇùëàùê∫subscriptùê∏ùêøsubscriptùëêùëñsubscriptùëÜùëñ\\\\displaystyle ROUGE\\_{L}(c\\_{i},S\\_{i}) | =(1+Œ≤2)‚ÄãRl‚ÄãPlRl+Œ≤2‚ÄãPlabsent1superscriptùõΩ2subscriptùëÖùëôsubscriptùëÉùëôsubscriptùëÖùëôsuperscriptùõΩ2subscriptùëÉùëô\\\\displaystyle=\\\\frac{(1+\\\\beta^{2})R\\_{l}P\\_{l}}{R\\_{l}+\\\\beta^{2}P\\_{l}} |  | (7) |\n\n\n\nRlsubscriptùëÖùëôR\\_{l} and PlsubscriptùëÉùëôP\\_{l} are recall and precision of LCS. Œ≤ùõΩ\\\\beta is usually set to favor _recall_ (Œ≤=1.2ùõΩ1.2\\\\beta=1.2). Since nùëõn-grams are implicit in this measure due to the use of the LCS, they need not be specified.\n\n3. 3.\n\n\nROUGES:\nThe final ROUGE metric uses skip bi-grams instead of the LCS or nùëõn-grams. Skip bi-grams are pairs of ordered words in a sentence. However, similar to the LCS, words may be skipped between pairs of words. Thus, a sentence with 4 words would have C24=6subscriptsuperscriptùê∂426C^{4}\\_{2}=6 skip bi-grams. Precision and recall are again incorporated to compute an F-measure score. If fk‚Äã(si‚Äãj)subscriptùëìùëòsubscriptùë†ùëñùëóf\\_{k}(s\\_{ij}) is the skip bi-gram count for sentence si‚Äãjsubscriptùë†ùëñùëós\\_{ij}, ROUGES is computed as:\n\n\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n|  | RssubscriptùëÖùë†\\\\displaystyle R\\_{s} | =maxj‚Å°‚àëkmin‚Å°(fk‚Äã(ci),fk‚Äã(si‚Äãj))‚àëkfk‚Äã(si‚Äãj)absentsubscriptùëósubscriptùëòsubscriptùëìùëòsubscriptùëêùëñsubscriptùëìùëòsubscriptùë†ùëñùëósubscriptùëòsubscriptùëìùëòsubscriptùë†ùëñùëó\\\\displaystyle=\\\\max\\\\limits\\_{j}\\\\frac{\\\\sum\\_{k}\\\\min(f\\_{k}(c\\_{i}),f\\_{k}(s\\_{ij}))}{\\\\sum\\_{k}f\\_{k}(s\\_{ij})} |  | (8) |\n|  | PssubscriptùëÉùë†\\\\displaystyle P\\_{s} | =maxj‚Å°‚àëkmin‚Å°(fk‚Äã(ci),fk‚Äã(si‚Äãj))‚àëkfk‚Äã(ci)absentsubscriptùëósubscriptùëòsubscriptùëìùëòsubscriptùëêùëñsubscriptùëìùëòsubscriptùë†ùëñùëósubscriptùëòsubscriptùëìùëòsubscriptùëêùëñ\\\\displaystyle=\\\\max\\\\limits\\_{j}\\\\frac{\\\\sum\\_{k}\\\\min(f\\_{k}(c\\_{i}),f\\_{k}(s\\_{ij}))}{\\\\sum\\_{k}f\\_{k}(c\\_{i})} |  | (9) |\n|  | R‚ÄãO‚ÄãU‚ÄãG‚ÄãES‚Äã(ci,Si)ùëÖùëÇùëàùê∫subscriptùê∏ùëÜsubscriptùëêùëñsubscriptùëÜùëñ\\\\displaystyle ROUGE\\_{S}(c\\_{i},S\\_{i}) | =(1+Œ≤2)‚ÄãRs‚ÄãPsRs+Œ≤2‚ÄãPsabsent1superscriptùõΩ2subscriptùëÖùë†subscriptùëÉùë†subscriptùëÖùë†superscriptùõΩ2subscriptùëÉùë†\\\\displaystyle=\\\\frac{(1+\\\\beta^{2})R\\_{s}P\\_{s}}{R\\_{s}+\\\\beta^{2}P\\_{s}} |  | (10) |\n\n\n\nSkip bi-grams are capable of capturing long range sentence structure. In practice, skip bi-grams are computed so that the component words occur at a distance of at most 4 from each other.\n\n\n### 3.5 METEOR\n\nMETEOR \\[ [41])\\] is calculated by generating an alignment between the words in the candidate and reference sentences, with an aim of 1:1 correspondence. This alignment is computed while minimizing the number of chunks, c‚Äãhùëê‚Ñéch, of contiguous and identically ordered tokens in the sentence pair. The alignment is based on exact token matching, followed by WordNet synonyms \\[ [44])\\], stemmed tokens and then paraphrases. Given a set of alignments, mùëöm, the METEOR score is the harmonic mean of precision PmsubscriptùëÉùëöP\\_{m} and recall RmsubscriptùëÖùëöR\\_{m} between the best scoring reference and candidate:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | P‚Äãe‚Äãn=Œ≥‚Äã(c‚Äãhm)Œ∏ùëÉùëíùëõùõæsuperscriptùëê‚ÑéùëöùúÉ\\\\displaystyle Pen=\\\\gamma\\\\left(\\\\frac{ch}{m}\\\\right)^{\\\\theta} |  | (11) |\n|  | Fm‚Äãe‚Äãa‚Äãn=Pm‚ÄãRmŒ±‚ÄãPm+(1‚àíŒ±)‚ÄãRmsubscriptùêπùëöùëíùëéùëõsubscriptùëÉùëösubscriptùëÖùëöùõºsubscriptùëÉùëö1ùõºsubscriptùëÖùëö\\\\displaystyle F\\_{mean}=\\\\frac{P\\_{m}R\\_{m}}{\\\\alpha P\\_{m}+(1-\\\\alpha)R\\_{m}} |  | (12) |\n|  | Pm=\\|m\\|‚àëkhk‚Äã(ci)subscriptùëÉùëöùëösubscriptùëòsubscript‚Ñéùëòsubscriptùëêùëñ\\\\displaystyle P\\_{m}=\\\\frac{\\|m\\|}{\\\\sum\\_{k}h\\_{k}(c\\_{i})} |  | (13) |\n|  | Rm=\\|m\\|‚àëkhk‚Äã(si‚Äãj)subscriptùëÖùëöùëösubscriptùëòsubscript‚Ñéùëòsubscriptùë†ùëñùëó\\\\displaystyle R\\_{m}=\\\\frac{\\|m\\|}{\\\\sum\\_{k}h\\_{k}(s\\_{ij})} |  | (14) |\n|  | M‚ÄãE‚ÄãT‚ÄãE‚ÄãO‚ÄãR=(1‚àíP‚Äãe‚Äãn)‚ÄãFm‚Äãe‚Äãa‚ÄãnùëÄùê∏ùëáùê∏ùëÇùëÖ1ùëÉùëíùëõsubscriptùêπùëöùëíùëéùëõ\\\\displaystyle METEOR=(1-Pen)F\\_{mean} |  | (15) |\n\nThus, the final METEOR score includes a penalty P‚Äãe‚ÄãnùëÉùëíùëõPen based on chunkiness of resolved matches and a harmonic mean term that gives the quality of the resolved matches. The default parameters Œ±ùõº\\\\alpha, Œ≥ùõæ\\\\gamma and Œ∏ùúÉ\\\\theta are used for this evaluation. Note that similar to BLEU, statistics of precision and recall are first aggregated over the entire corpus, which are then combined to give the corpus-level METEOR score.\n\n### 3.6 CIDEr\n\nThe CIDEr metric \\[ [42])\\] measures consensus in image captions by performing a Term Frequency Inverse Document Frequency (TF-IDF) weighting for each nùëõn-gram. The number of times an nùëõn-gram œâksubscriptùúîùëò\\\\omega\\_{k} occurs in a reference sentence si‚Äãjsubscriptùë†ùëñùëós\\_{ij} is denoted by hk‚Äã(si‚Äãj)subscript‚Ñéùëòsubscriptùë†ùëñùëóh\\_{k}(s\\_{ij}) or hk‚Äã(ci)subscript‚Ñéùëòsubscriptùëêùëñh\\_{k}(c\\_{i}) for the candidate sentence cisubscriptùëêùëñc\\_{i}. CIDEr computes the TF-IDF weighting gk‚Äã(si‚Äãj)subscriptùëîùëòsubscriptùë†ùëñùëóg\\_{k}(s\\_{ij}) for each nùëõn-gram œâksubscriptùúîùëò\\\\omega\\_{k} using:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | gk‚Äã(si‚Äãj)=hk‚Äã(si‚Äãj)‚àëœâl‚ààŒ©hl‚Äã(si‚Äãj)‚Äãlog‚Å°(\\|I\\|‚àëIp‚ààImin‚Å°(1,‚àëqhk‚Äã(sp‚Äãq))),subscriptùëîùëòsubscriptùë†ùëñùëósubscript‚Ñéùëòsubscriptùë†ùëñùëósubscriptsubscriptùúîùëôŒ©subscript‚Ñéùëôsubscriptùë†ùëñùëóùêºsubscriptsubscriptùêºùëùùêº1subscriptùëûsubscript‚Ñéùëòsubscriptùë†ùëùùëûg\\_{k}(s\\_{ij})=\\\\\\<br>\\\\frac{h\\_{k}(s\\_{ij})}{\\\\sum\\_{\\\\omega\\_{l}\\\\in\\\\Omega}h\\_{l}(s\\_{ij})}\\\\log\\\\left(\\\\frac{\\|I\\|}{\\\\sum\\_{I\\_{p}\\\\in I}\\\\min(1,\\\\sum\\_{q}h\\_{k}(s\\_{pq}))}\\\\right), |  | (16) |\n\nwhere Œ©Œ©\\\\Omega is the vocabulary of all nùëõn-grams and IùêºI is the set of all images in the dataset. The first term measures the TF of each nùëõn-gram œâksubscriptùúîùëò\\\\omega\\_{k}, and the second term measures the rarity of œâksubscriptùúîùëò\\\\omega\\_{k} using its IDF. Intuitively, TF places higher weight on nùëõn-grams that frequently occur in the reference sentences describing an image, while IDF reduces the weight of nùëõn-grams that commonly occur across all descriptions. That is, the IDF provides a measure of word saliency by discounting popular words that are likely to be less visually informative. The IDF is computed using the logarithm of the number of images in the dataset \\|I\\|ùêº\\|I\\| divided by the number of images for which œâksubscriptùúîùëò\\\\omega\\_{k} occurs in any of its reference sentences.\n\nThe CIDErn score for nùëõn-grams of length nùëõn is computed using the average cosine similarity between the candidate sentence and the reference sentences, which accounts for both precision and recall:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | CIDErn‚Äã(ci,Si)=1m‚Äã‚àëjùíàùíè‚Äã(ci)‚ãÖùíàùíè‚Äã(si‚Äãj)‚Äñùíàùíè‚Äã(ci)‚Äñ‚Äã‚Äñùíàùíè‚Äã(si‚Äãj)‚Äñ,subscriptCIDErùëõsubscriptùëêùëñsubscriptùëÜùëñ1ùëösubscriptùëó‚ãÖsuperscriptùíàùíèsubscriptùëêùëñsuperscriptùíàùíèsubscriptùë†ùëñùëónormsuperscriptùíàùíèsubscriptùëêùëñnormsuperscriptùíàùíèsubscriptùë†ùëñùëó\\\\text{CIDEr}\\_{n}(c\\_{i},S\\_{i})=\\\\frac{1}{m}\\\\sum\\_{j}\\\\frac{\\\\bm{g^{n}}(c\\_{i})\\\\cdot\\\\bm{g^{n}}(s\\_{ij})}{\\\\\\|\\\\bm{g^{n}}(c\\_{i})\\\\\\|\\\\\\|\\\\bm{g^{n}}(s\\_{ij})\\\\\\|}, |  | (17) |\n\nwhere ùíàùíè‚Äã(ci)superscriptùíàùíèsubscriptùëêùëñ\\\\bm{g^{n}}(c\\_{i}) is a vector formed by gk‚Äã(ci)subscriptùëîùëòsubscriptùëêùëñg\\_{k}(c\\_{i}) corresponding to all nùëõn-grams of length nùëõn and ‚Äñùíàùíè‚Äã(ci)‚Äñnormsuperscriptùíàùíèsubscriptùëêùëñ\\\\\\|\\\\bm{g^{n}}(c\\_{i})\\\\\\| is the magnitude of the vector ùíàùíè‚Äã(ci)superscriptùíàùíèsubscriptùëêùëñ\\\\bm{g^{n}}(c\\_{i}). Similarly for ùíàùíè‚Äã(si‚Äãj)superscriptùíàùíèsubscriptùë†ùëñùëó\\\\bm{g^{n}}(s\\_{ij}).\n\nHigher order (longer) nùëõn-grams to are used to capture grammatical properties as well as richer semantics. Scores from nùëõn-grams of varying lengths are combined as follows:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | CIDEr‚Äã(ci,Si)=‚àën=1Nwn‚ÄãCIDErn‚Äã(ci,Si),CIDErsubscriptùëêùëñsubscriptùëÜùëñsuperscriptsubscriptùëõ1ùëÅsubscriptùë§ùëõsubscriptCIDErùëõsubscriptùëêùëñsubscriptùëÜùëñ\\\\text{CIDEr}(c\\_{i},S\\_{i})=\\\\sum\\_{n=1}^{N}w\\_{n}\\\\text{CIDEr}\\_{n}(c\\_{i},S\\_{i}), |  | (18) |\n\nUniform weights are used wn=1/Nsubscriptùë§ùëõ1ùëÅw\\_{n}=1/N. NùëÅN = 4 is used.\n\nCIDEr-D is a modification to CIDEr to make it more robust to gaming. Gaming refers to the phenomenon where a sentence that is poorly judged by humans tends to score highly with an automated metric. To defend the CIDEr metric against gaming effects,  \\[ [42])\\] add clipping and a length based gaussian penalty to the CIDEr metric described above. This results in the following equations for CIDEr-D:\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | CIDEr-Dn(ci,Si)=10m‚àëje‚àí(l‚Äã(ci)‚àíl‚Äã(si‚Äãj))22‚ÄãœÉ2‚àóm‚Äãi‚Äãn‚Äã(ùíàùíè‚Äã(ci),ùíàùíè‚Äã(si‚Äãj))‚ãÖùíàùíè‚Äã(si‚Äãj)‚Äñùíàùíè‚Äã(ci)‚Äñ‚Äã‚Äñùíàùíè‚Äã(si‚Äãj)‚Äñ,subscriptCIDEr-DùëõsubscriptùëêùëñsubscriptùëÜùëñ10ùëösubscriptùëósuperscriptùëísuperscriptùëôsubscriptùëêùëñùëôsubscriptùë†ùëñùëó22superscriptùúé2‚ãÖùëöùëñùëõsuperscriptùíàùíèsubscriptùëêùëñsuperscriptùíàùíèsubscriptùë†ùëñùëósuperscriptùíàùíèsubscriptùë†ùëñùëónormsuperscriptùíàùíèsubscriptùëêùëñnormsuperscriptùíàùíèsubscriptùë†ùëñùëó\\\\text{CIDEr-D}\\_{n}(c\\_{i},S\\_{i})=\\\\frac{10}{m}\\\\sum\\_{j}e^{\\\\frac{-(l(c\\_{i})-l(s\\_{ij}))^{2}}{2\\\\sigma^{2}}}\\*\\\\\\<br>\\\\frac{min(\\\\bm{g^{n}}(c\\_{i}),\\\\bm{g^{n}}(s\\_{ij}))\\\\cdot\\\\bm{g^{n}}(s\\_{ij})}{\\\\\\|\\\\bm{g^{n}}(c\\_{i})\\\\\\|\\\\\\|\\\\bm{g^{n}}(s\\_{ij})\\\\\\|}, |  | (19) |\n\nWhere l‚Äã(ci)ùëôsubscriptùëêùëñl(c\\_{i}) and l‚Äã(si‚Äãj)ùëôsubscriptùë†ùëñùëól(s\\_{ij}) denote the lengths of candidate and reference sentences respectively. œÉ=6ùúé6\\\\sigma=6 is used. A factor of 10 is used in the numerator to make the CIDEr-D scores numerically similar to the other metrics.\n\nThe final CIDEr-D metric is computed in a similar manner to CIDEr (analogous to eqn. [18]In 3.6 CIDEr ‚Ä£ 3 Caption evaluation ‚Ä£ Microsoft COCO Captions: Data Collection and Evaluation Server\")):\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | CIDEr-D‚Äã(ci,Si)=‚àën=1Nwn‚ÄãCIDEr-Dn‚Äã(ci,Si),CIDEr-DsubscriptùëêùëñsubscriptùëÜùëñsuperscriptsubscriptùëõ1ùëÅsubscriptùë§ùëõsubscriptCIDEr-DùëõsubscriptùëêùëñsubscriptùëÜùëñ\\\\text{CIDEr-D}(c\\_{i},S\\_{i})=\\\\sum\\_{n=1}^{N}w\\_{n}\\\\text{CIDEr-D}\\_{n}(c\\_{i},S\\_{i}), |  | (20) |\n\nNote that just like the BLEU and ROUGE metrics, CIDEr-D does not use stemming. We adopt the CIDEr-D metric for the evaluation server.",
            "citations": null
          },
          "4 Human performance": {
            "content": "In this section, we study the human agreement among humans at this task. We start with analyzing the inter-human agreement for image captioning (Section. [4.1]Human Agreement for Image Captioning ‚Ä£ 4 Human performance ‚Ä£ Microsoft COCO Captions: Data Collection and Evaluation Server\")) and then analyze human agreement for the word prediction sub-task and provide a simple model which explains human agreement for this sub-task (Section. [4.2]Human Agreement for Word Prediction ‚Ä£ 4 Human performance ‚Ä£ Microsoft COCO Captions: Data Collection and Evaluation Server\")).\n\n### 4.1 Human Agreement for Image Captioning\n\nWhen examining human agreement on captions, it becomes clear that there are many equivalent ways to say essentially the same thing. We quantify this by conducting the following experiment: We collect one additional human caption for each image in the test set and treat this caption as the prediction. Using the MS COCO caption evaluation server we compute the various metrics. The results are tabulated in Table [I]TABLE I ‚Ä£ 4.1 Human Agreement for Image Captioning ‚Ä£ 4 Human performance ‚Ä£ Microsoft COCO Captions: Data Collection and Evaluation Server\").\n\nTABLE I: Human Agreement for Image Captioning: Various metrics when benchmarking a human generated caption against ground truth captions.\n\n| Metric Name | MS COCO c5 | MS COCO c40 |\n| BLEU 1 | 0.663 | 0.880 |\n| BLEU 2 | 0.469 | 0.744 |\n| BLEU 3 | 0.321 | 0.603 |\n| BLEU 4 | 0.217 | 0.471 |\n| METEOR | 0.252 | 0.335 |\n| ROUGEL | 0.484 | 0.626 |\n| CIDEr-D | 0.854 | 0.910 |\n\n### 4.2 Human Agreement for Word Prediction\n\nWe can do a similar analysis for human agreement at the sub-task of word prediction. Consider the task of tagging the image with words that occur in the captions. For this task, we can compute the human precision and recall for a given word wùë§w by benchmarking words used in the k+1ùëò1k+1 human caption with respect to words used in the first kùëòk reference captions. Note that we use weighted versions of precision and recall, where each negative image has a weight of 1 and each positive image has a weight equal to the number of captions containing the word wùë§w. Human precision (HpsubscriptùêªùëùH\\_{p}) and human recall (HrsubscriptùêªùëüH\\_{r}) can be computed from the counts of how many subjects out of kùëòk use the word wùë§w to describe a given image over the whole dataset.\n\nWe plot HpsubscriptùêªùëùH\\_{p} versus HrsubscriptùêªùëüH\\_{r} for a set of nouns, verbs and adjectives, and all 1000 words considered in Figure [3]Figure 3 ‚Ä£ 4.2 Human Agreement for Word Prediction ‚Ä£ 4 Human performance ‚Ä£ Microsoft COCO Captions: Data Collection and Evaluation Server\"). Nouns referring to animals like ‚Äòelephant‚Äô have a high recall, which means that if an ‚Äòelephant‚Äô exists in the image, a subject is likely to talk about it (which makes intuitive sense, given ‚Äòelephant‚Äô images are somewhat rare, and there are no alternative words that could be used instead of ‚Äòelephant‚Äô). On the other hand, an adjective like ‚Äòbright‚Äô is used inconsistently and hence has low recall. Interestingly, words with high recall also have high precision. Indeed, all the points of human agreement appear to lie on a one-dimensional curve in the two-dimension precision-recall space.\n\nThis observation motivates us to propose a simple model for when subjects use a particular word wùë§w for describing an image. Let oùëúo denote an object or visual concept associated with word wùë§w, nùëõn be the total number of images, and kùëòk be the number of reference captions. Next, let q=P‚Äã(o=1)ùëûùëÉùëú1q=P(o=1) be the probability that object oùëúo exists in an image. For clarity these definitions are summarized in Table [II]TABLE II ‚Ä£ 4.2 Human Agreement for Word Prediction ‚Ä£ 4 Human performance ‚Ä£ Microsoft COCO Captions: Data Collection and Evaluation Server\"). We make two simplifications. First, we ignore _image level saliency_ and instead focus on _word level saliency_. Specifically, we only model p=P‚Äã(w=1\\|o=1)ùëùùëÉùë§conditional1ùëú1p=P(w=1\\|o=1), the probability a subject uses wùë§w given that oùëúo is in the image, without conditioning on the image itself. Second, we assume that P‚Äã(w=1\\|o=0)=0ùëÉùë§conditional1ùëú00P(w=1\\|o=0)=0, i.e. that a subject does not use wùë§w unless oùëúo is in the image. As we will show, even with these simplifications our model suffices to explain the empirical observations in Figure [3]Figure 3 ‚Ä£ 4.2 Human Agreement for Word Prediction ‚Ä£ 4 Human performance ‚Ä£ Microsoft COCO Captions: Data Collection and Evaluation Server\") to a reasonable degree of accuracy.\n\nTABLE II: Model defintions.\n\n|     |     |     |\n| --- | --- | --- |\n| oùëúo | = | object or visual concept |\n| wùë§w | = | word associated with oùëúo |\n| nùëõn | = | total number of images |\n| kùëòk | = | number of captions per image |\n| qùëûq | = | P‚Äã(o=1)ùëÉùëú1P(o=1) |\n| pùëùp | = | P‚Äã(w=1\\|o=1)ùëÉùë§conditional1ùëú1P(w=1\\|o=1) |\n\nGiven these assumptions, we can model human precision Hp~~subscriptùêªùëù\\\\widetilde{H\\_{p}} and recall Hr~~subscriptùêªùëü\\\\widetilde{H\\_{r}} for a word wùë§w given only pùëùp and kùëòk. First, given kùëòk captions per image, we need to compute the expected number of (1) captions containing wùë§w (c‚Äãwùëêùë§cw), (2) true positives (t‚Äãpùë°ùëùtp), and (3) false positives (f‚Äãpùëìùëùfp). Note that in our definition there can be up to kùëòk true positives per image (if c‚Äãw=kùëêùë§ùëòcw=k, i.e. each of the kùëòk captions contains word wùë§w) but at most 1 false positive (if none of the kùëòk captions contains wùë§w). The expectations, in terms of kùëòk, pùëùp, and qùëûq are:\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n|  | E‚Äã\\[c‚Äãw\\]ùê∏delimited-\\[\\]ùëêùë§\\\\displaystyle E\\[cw\\] | =\\\\displaystyle= | Œ£i=1k‚ÄãP‚Äã(wi=1)superscriptsubscriptŒ£ùëñ1ùëòùëÉsuperscriptùë§ùëñ1\\\\displaystyle\\\\Sigma\\_{i=1}^{k}P(w^{i}=1) |  |\n|  |  | =\\\\displaystyle= | Œ£i‚ÄãP‚Äã(wi=1\\|o=1)‚ÄãP‚Äã(o=1)subscriptŒ£ùëñùëÉsuperscriptùë§ùëñconditional1ùëú1ùëÉùëú1\\\\displaystyle\\\\Sigma\\_{i}P(w^{i}=1\\|o=1)P(o=1) |  |\n|  |  |  | +Œ£i‚ÄãP‚Äã(wi=1\\|o=0)‚ÄãP‚Äã(o=0)subscriptŒ£ùëñùëÉsuperscriptùë§ùëñconditional1ùëú0ùëÉùëú0\\\\displaystyle+\\\\Sigma\\_{i}P(w^{i}=1\\|o=0)P(o=0) |  |\n|  |  | =\\\\displaystyle= | k‚Äãp‚Äãq+0=k‚Äãp‚Äãqùëòùëùùëû0ùëòùëùùëû\\\\displaystyle kpq+0=\\\\boxed{kpq} |  |\n|  | E‚Äã\\[t‚Äãp\\]ùê∏delimited-\\[\\]ùë°ùëù\\\\displaystyle E\\[tp\\] | =\\\\displaystyle= | Œ£i=1k‚ÄãP‚Äã(wi=1‚àßwk+1=1)superscriptsubscriptŒ£ùëñ1ùëòùëÉsuperscriptùë§ùëñ1superscriptùë§ùëò11\\\\displaystyle\\\\Sigma\\_{i=1}^{k}P(w^{i}=1\\\\wedge w^{k+1}=1) |  |\n|  |  | =\\\\displaystyle= | Œ£i‚ÄãP‚Äã(wi=1‚àßwk+1=1\\|o=1)‚ÄãP‚Äã(o=1)subscriptŒ£ùëñùëÉsuperscriptùë§ùëñ1superscriptùë§ùëò1conditional1ùëú1ùëÉùëú1\\\\displaystyle\\\\Sigma\\_{i}P(w^{i}=1\\\\wedge w^{k+1}=1\\|o=1)P(o=1) |  |\n|  |  |  | +Œ£i‚ÄãP‚Äã(wi=1‚àßwk+1=1\\|o=0)‚ÄãP‚Äã(o=0)subscriptŒ£ùëñùëÉsuperscriptùë§ùëñ1superscriptùë§ùëò1conditional1ùëú0ùëÉùëú0\\\\displaystyle+\\\\Sigma\\_{i}P(w^{i}=1\\\\wedge w^{k+1}=1\\|o=0)P(o=0) |  |\n|  |  | =\\\\displaystyle= | k‚Äãp‚Äãp‚Äãq+0=k‚Äãp2‚Äãqùëòùëùùëùùëû0ùëòsuperscriptùëù2ùëû\\\\displaystyle kppq+0=\\\\boxed{kp^{2}q} |  |\n|  | E‚Äã\\[f‚Äãp\\]ùê∏delimited-\\[\\]ùëìùëù\\\\displaystyle E\\[fp\\] | =\\\\displaystyle= | P‚Äã(w1‚Äã‚Ä¶‚Äãwk=0‚àßwk+1=1)ùëÉsuperscriptùë§1‚Ä¶superscriptùë§ùëò0superscriptùë§ùëò11\\\\displaystyle P(w^{1}\\\\ldots w^{k}=0\\\\wedge w^{k+1}=1) |  |\n|  |  | =\\\\displaystyle= | P‚Äã(o=1‚àßw1‚Äã‚Ä¶‚Äãwk=0‚àßwk+1=1)ùëÉùëú1superscriptùë§1‚Ä¶superscriptùë§ùëò0superscriptùë§ùëò11\\\\displaystyle P(o=1\\\\wedge w^{1}\\\\ldots w^{k}=0\\\\wedge w^{k+1}=1) |  |\n|  |  |  | +P‚Äã(o=0‚àßw1‚Äã‚Ä¶‚Äãwk=0‚àßwk+1=1)ùëÉùëú0superscriptùë§1‚Ä¶superscriptùë§ùëò0superscriptùë§ùëò11\\\\displaystyle+P(o=0\\\\wedge w^{1}\\\\ldots w^{k}=0\\\\wedge w^{k+1}=1) |  |\n|  |  | =\\\\displaystyle= | q‚Äã(1‚àíp)k‚Äãp+0=q‚Äã(1‚àíp)k‚Äãpùëûsuperscript1ùëùùëòùëù0ùëûsuperscript1ùëùùëòùëù\\\\displaystyle q(1-p)^{k}p+0=\\\\boxed{q(1-p)^{k}p} |  |\n\nIn the above wi=1superscriptùë§ùëñ1w^{i}=1 denotes that wùë§w appeared in the it‚Äãhsuperscriptùëñùë°‚Ñéi^{th} caption. Note that we are also assuming independence between subjects conditioned on oùëúo. We can now define model precision and recall as:\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n|  | Hp~~subscriptùêªùëù\\\\displaystyle\\\\widetilde{H\\_{p}} | :=assign\\\\displaystyle:= | n‚ÄãE‚Äã\\[t‚Äãp\\]n‚ÄãE‚Äã\\[t‚Äãp\\]+n‚ÄãE‚Äã\\[f‚Äãp\\]=p‚Äãkp‚Äãk+(1‚àíp)kùëõùê∏delimited-\\[\\]ùë°ùëùùëõùê∏delimited-\\[\\]ùë°ùëùùëõùê∏delimited-\\[\\]ùëìùëùùëùùëòùëùùëòsuperscript1ùëùùëò\\\\displaystyle\\\\frac{nE\\[tp\\]}{nE\\[tp\\]+nE\\[fp\\]}=\\\\frac{pk}{pk+(1-p)^{k}} |  |\n|  | Hr~~subscriptùêªùëü\\\\displaystyle\\\\widetilde{H\\_{r}} | :=assign\\\\displaystyle:= | n‚ÄãE‚Äã\\[t‚Äãp\\]n‚ÄãE‚Äã\\[c‚Äãw\\]=pùëõùê∏delimited-\\[\\]ùë°ùëùùëõùê∏delimited-\\[\\]ùëêùë§ùëù\\\\displaystyle\\\\frac{nE\\[tp\\]}{nE\\[cw\\]}=p |  |\n\nNote that these expressions are independent of qùëûq and only depend on pùëùp. Interestingly, because of the use of weighted precision and recall, the recall for a category comes out to be exactly equal to pùëùp, the probability a subject uses wùë§w given that oùëúo is in the image.\n\n![Refer to caption]\n\n![Refer to caption]\n\n![Refer to caption]\n\n![Refer to caption]\n\n![Refer to caption]\n\nFigure 3: Precision-recall points for human agreement: we compute precision and recall by treating one human caption as prediction and benchmark it against the others to obtain points on the precision recall curve. We plot these points for example nouns (top left), adjectives (top center), and verbs (top right), and for all words (bottom left). We also plot the fit of our model for human agreement with the empirical data (bottom left) and show how the human agreement changes with different number of captions being used (bottom right). We see that the human agreement point remains at the same recall value but dips in precision when using fewer captions.\n\nWe set k=4ùëò4k=4 and vary pùëùp to plot Hp~~subscriptùêªùëù\\\\widetilde{H\\_{p}} versus Hr~~subscriptùêªùëü\\\\widetilde{H\\_{r}}, getting the curve as shown in blue in Figure [3]Figure 3 ‚Ä£ 4.2 Human Agreement for Word Prediction ‚Ä£ 4 Human performance ‚Ä£ Microsoft COCO Captions: Data Collection and Evaluation Server\") (bottom left). The curve explains the observed data quite well, closely matching the precision-recall tradeoffs of the empirical data (although not perfectly). We can also reduce the number of captions from four, and look at how the empirical and predicted precision and recall change. Figure [3]Figure 3 ‚Ä£ 4.2 Human Agreement for Word Prediction ‚Ä£ 4 Human performance ‚Ä£ Microsoft COCO Captions: Data Collection and Evaluation Server\") (bottom right), shows this variation as we reduce the number of reference captions per image from four to one annotations. We see that the points of human agreement remain at the same recall value, but decrease in their precision, which is consistent with what the model predicts. Also, the human precision at infinite subjects will approach one, which is again reasonable given that a subject will only use the word wùë§w if the corresponding object is in the image (and in the presence of infinite subjects someone else will also use the word wùë§w).\n\nIn fact, the fixed recall value can help us recover pùëùp, the probability that a subject will use the word wùë§w in describing the image given the object is present. Nouns like ‚Äòelephant‚Äô and ‚Äòtennis‚Äô have large pùëùp, which is reasonable. Verbs and adjectives, on the other hand, have smaller pùëùp values, which can be justified from the fact that a) subjects are less likely to describe attributes of objects and b) subjects might use a different word (synonym) to describe the same attribute.\n\nThis analysis of human agreement also motivates using a different metric for measuring performance. We propose Precision at Human Recall (PHR) as a metric for measuring performance of a vision system performing this task. Given that human recall for a particular word is fixed and precision varies with the number of annotations, we can look at system precision at human recall and compare it with human precision to report the performance of the vision system.",
            "citations": null
          },
          "5 Evaluation Server Instructions": {
            "content": "Directions on how to use the MS COCO caption evaluation server can be found on the [MS COCO website]. The evaluation server is hosted by [CodaLab]. To participate, a user account on CodaLab must be created. The participants need to generate results on both the validation and testing datasets. When training for the generation of results on the test dataset, the training and validation dataset may be used as the participant sees fit. That is, the validation dataset may be used for training if desired. However, when generating results on the validation set, we ask participants to only train on the training dataset, and only use the validation dataset for tuning meta-parameters. Two JSON files should be created corresponding to results on each dataset in the following format:\n\n|     |     |     |\n| --- | --- | --- |\n|  | \\[{\\`‚Äã\\`‚Äãi‚Äãm‚Äãa‚Äãg‚Äãe‚Äã\\_‚Äãi‚Äãd‚Äã\":i‚Äãn‚Äãt,\\`‚Äã\\`‚Äãc‚Äãa‚Äãp‚Äãt‚Äãi‚Äão‚Äãn‚Äã\":s‚Äãt‚Äãr,}\\]\\\\begin{array}\\[\\]{lcl}\\[\\\\{&&\\\\\\<br>\\`\\`image\\\\\\_id\"&:&int,\\\\\\<br>\\`\\`caption\"&:&str,\\\\\\<br>\\\\}\\]&&\\\\\\<br>\\\\end{array} |  |\n\nThe results may then be placed into a zip file and uploaded to the server for evaluation. Code is also provided on [GitHub] to evaluate results on the validation dataset without having to upload to the server. The number of submissions per user is limited to a fixed amount.",
            "citations": null
          },
          "6 Discussion": {
            "content": "Many challenges exist when creating an image caption dataset. As stated in \\[ [7]), [42]), [45])\\] the captions generated by human subjects can vary significantly. However even though two captions may be very different, they may be judged equally ‚Äúgood‚Äù by human subjects. Designing effective automatic evaluation metrics that are highly correlated with human judgment remains a difficult challenge \\[ [7]), [42]), [45]), [46])\\]. We hope that by releasing results on the validation data, we can help enable future research in this area.\n\nSince automatic evaluation metrics do not always correspond to human judgment, we hope to conduct experiments using human subjects to judge the quality of automatically generated captions, which are most similar to human captions, and whether they are grammatically correct \\[ [45]), [42]), [7]), [4]), [5])\\]. This is essential to determining whether future algorithms are indeed improving, or whether they are merely over fitting to a specific metric. These human experiments will also allow us to evaluate the automatic evaluation metrics themselves, and see which ones are correlated to human judgment.",
            "citations": null
          }
        },
        "abstract": "In this paper we describe the Microsoft COCO Caption dataset and evaluation\nserver. When completed, the dataset will contain over one and a half million\ncaptions describing over 330,000 images. For the training and validation\nimages, five independent human generated captions will be provided. To ensure\nconsistency in evaluation of automatic caption generation algorithms, an\nevaluation server is used. The evaluation server receives candidate captions\nand scores them using several popular metrics, including BLEU, METEOR, ROUGE\nand CIDEr. Instructions for using the evaluation server are provided."
      },
      "bib.bib51": {
        "id": "bib.bib51",
        "citation": "Wu et al. (2024)",
        "authors": "",
        "year": "",
        "title": "ReFT: Representation finetuning for language models.",
        "venue": "",
        "pages": "",
        "url": "https://ar5iv.org/html/arxiv.org/abs/2404.03592",
        "arxiv_id": "2404.03592",
        "doi": null,
        "sections": {},
        "abstract": "Parameter-efficient finetuning (PEFT) methods seek to adapt large neural\nmodels via updates to a small number of weights. However, much prior\ninterpretability work has shown that representations encode rich semantic\ninformation, suggesting that editing representations might be a more powerful\nalternative. We pursue this hypothesis by developing a family of Representation\nFinetuning (ReFT) methods. ReFT methods operate on a frozen base model and\nlearn task-specific interventions on hidden representations. We define a strong\ninstance of the ReFT family, Low-rank Linear Subspace ReFT (LoReFT), and we\nidentify an ablation of this method that trades some performance for increased\nefficiency. Both are drop-in replacements for existing PEFTs and learn\ninterventions that are 15x--65x more parameter-efficient than LoRA. We showcase\nLoReFT on eight commonsense reasoning tasks, four arithmetic reasoning tasks,\ninstruction-tuning, and GLUE. In all these evaluations, our ReFTs deliver the\nbest balance of efficiency and performance, and almost always outperform\nstate-of-the-art PEFTs. We release a generic ReFT training library publicly at\nhttps://github.com/stanfordnlp/pyreft."
      }
    },
    "key_map": {
      "2006.11807": "bib.bib1",
      "2212.06013": "bib.bib2",
      "2005.14165": "bib.bib3",
      "1504.00325": "bib.bib5",
      "2404.03592": "bib.bib51"
    }
  }
}