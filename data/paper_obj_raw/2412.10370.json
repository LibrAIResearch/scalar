{
  "title": "Computational Explorations of Total Variation Distance",
  "abstract": "We investigate some previously unexplored (or underexplored) computational\naspects of total variation (TV) distance. First, we give a simple deterministic\npolynomial-time algorithm for checking equivalence between mixtures of product\ndistributions, over arbitrary alphabets. This corresponds to a special case,\nwhereby the TV distance between the two distributions is zero. Second, we prove\nthat unless $\\mathsf{NP} \\subseteq \\mathsf{RP}$, it is impossible to\nefficiently estimate the TV distance between arbitrary Ising models, even in a\nbounded-error randomized setting.",
  "paper_id": "http://arxiv.org/abs/2412.10370v1",
  "markdown_content": "# Computational Explorations of Total Variation Distance\n\nArnab Bhattacharyya\n\nUniversity of Warwick\nWork done while the author was affiliated with the National University of Singapore.Sutanu Gayen\n\nIIT Kanpur\nKuldeep S. Meel\n\nUniversity of Toronto\n\nGeorgia Institute of Technology\nDimitrios Myrisiotis\n\nCNRS@CREATE LTD\nA. Pavan\n\nIowa State University\nN. V. Vinodchandran\n\nUniversity of Nebraska-Lincoln\n\n###### Abstract\n\nWe investigate some previously unexplored (or underexplored) computational aspects of total variation (TV) distance.\nFirst, we give a simple deterministic polynomial-time algorithm for checking equivalence between mixtures of product distributions, over arbitrary alphabets.\nThis corresponds to a special case, whereby the TV distance between the two distributions is zero.\nSecond, we prove that unless ùñ≠ùñØ‚äÜùñ±ùñØ\\\\mathsf{NP}\\\\subseteq\\\\mathsf{RP}, it is impossible to efficiently estimate the TV distance between arbitrary Ising models, even in a bounded-error randomized setting.\n\n## 1 Introduction\n\nThe total variation (TV) distance between distributions PP and QQ over a common sample space DD, denoted by dTV‚Äã(P,Q)d\\_{\\\\mathrm{TV}}(P,Q), is defined as\n\n|     |     |     |\n| --- | --- | --- |\n|  | dTV‚Äã(P,Q):=maxS‚äÜD‚Å°(P‚Äã(S)‚àíQ‚Äã(S))=12‚Äã‚àëx‚ààD\\|P‚Äã(x)‚àíQ‚Äã(x)\\|=‚àëx‚ààDmax‚Å°(0,P‚Äã(x)‚àíQ‚Äã(x)).d\\_{\\\\mathrm{TV}}(P,Q):=\\\\max\\_{S\\\\subseteq D}\\\\!\\\\left(P(S)-Q(S)\\\\right)=\\\\frac{1}{2}\\\\sum\\_{x\\\\in D}\\|P(x)-Q(x)\\|=\\\\sum\\_{x\\\\in D}\\\\max\\\\!\\\\left(0,P(x)-Q(x)\\\\right). |  |\n\nThe TV distance satisfies many basic properties, making it a versatile and fundamental measure for quantifying the dissimilarity between probability distributions.\nFirst, it has an explicit probabilistic interpretation:\nThe TV distance between two distributions is the maximum gap between the probabilities assigned to a single event by the two distributions.\nSecond, it satisfies many mathematically desirable properties:\nIt is bounded and lies in \\[0,1\\]\\[0,1\\], it is a metric, and it is invariant with respect to bijections.\nThird, it satisfies some interesting composability property.\nGiven f‚Äã(g1,g2,‚Ä¶,gn)f(g\\_{1},g\\_{2},\\\\dots,g\\_{n}), suppose that we replace g2g\\_{2} with g2‚Ä≤g^{\\\\prime}\\_{2} such that dTV‚Äã(g2,g2‚Ä≤)‚â§Œµd\\_{\\\\mathrm{TV}}(g\\_{2},g^{\\\\prime}\\_{2})\\\\leq\\\\varepsilon.\nThen the TV distance between f‚Äã(g1,g2,‚Ä¶,gn)f(g\\_{1},g\\_{2},\\\\dots,g\\_{n}) and f‚Äã(g1,g2‚Ä≤,‚Ä¶,gn)f(g\\_{1},g^{\\\\prime}\\_{2},\\\\dots,g\\_{n}) is at most Œµ\\\\varepsilon.\nBecause of these reasons, the total variation distance is a central distance measure employed in a wide range of areas including probability and statistics \\[ [MU05](https://ar5iv.org/html/2412.10370#bib.bibx26 \"\")\\], machine learning \\[ [SB14](https://ar5iv.org/html/2412.10370#bib.bibx29 \"\")\\], and information theory \\[ [CT06](https://ar5iv.org/html/2412.10370#bib.bibx7 \"\")\\], cryptography \\[ [Sti95](https://ar5iv.org/html/2412.10370#bib.bibx30 \"\")\\], data privacy \\[ [Dwo06](https://ar5iv.org/html/2412.10370#bib.bibx9 \"\")\\], and pseudorandomness \\[ [Vad12](https://ar5iv.org/html/2412.10370#bib.bibx32 \"\")\\].\n\nLately, the computational aspects of TV distance have attracted a lot of attention.\n\\[ [SV03](https://ar5iv.org/html/2412.10370#bib.bibx31 \"\")\\] established, in a seminal work, that additively approximating the TV distance between two distributions that are samplable by Boolean circuits is hard for ùñ≤ùñπùñ™\\\\mathsf{SZK} (Statistical Zero Knowledge).\nThe complexity class ùñ≤ùñπùñ™\\\\mathsf{SZK} is fundamental to cryptography and is believed to be computationally hard.\nSubsequent works captured variations of this theme \\[ [GSV99](https://ar5iv.org/html/2412.10370#bib.bibx17 \"\"), [Mal15](https://ar5iv.org/html/2412.10370#bib.bibx25 \"\"), [DGPV20](https://ar5iv.org/html/2412.10370#bib.bibx8 \"\")\\]:\nFor example, \\[ [GSV99](https://ar5iv.org/html/2412.10370#bib.bibx17 \"\")\\] showed that the problem of deciding whether a distribution samplable by a Boolean circuit is close or far from the uniform distribution is complete for ùñ≠ùñ®ùñ≤ùñπùñ™\\\\mathsf{NISZK} (Non-Interactive Statistical Zero Knowledge).\nMoreover, \\[ [CMR07](https://ar5iv.org/html/2412.10370#bib.bibx6 \"\"), [LP02](https://ar5iv.org/html/2412.10370#bib.bibx24 \"\"), [Kie18](https://ar5iv.org/html/2412.10370#bib.bibx22 \"\")\\] showed that it is undecidable to check whether the TV distance between two hidden Markov models is greater than a threshold or not, and that it is #‚ÄãùñØ\\\\#\\\\mathsf{P}-hard to additively approximate it.\nFinally, \\[ [BGM+23](https://ar5iv.org/html/2412.10370#bib.bibx2 \"\")\\] showed that (a)(a) exactly computing the TV distance between product distributions is #‚ÄãùñØ\\\\#\\\\mathsf{P}-complete, and (b)(b) multiplicatively approximating the TV distance between Bayes nets is ùñ≠ùñØ\\\\mathsf{NP}-hard.\n\nOn an algorithmic note, \\[ [BGMV20](https://ar5iv.org/html/2412.10370#bib.bibx4 \"\")\\] designed efficient algorithms to additively approximate the TV distance between distributions efficiently samplable and efficiently computable (including the case of _ferromagnetic_ Ising models).\nIn particular, they designed efficient algorithms for additively approximating the TV distance of structured high dimensional distributions such as Bayesian networks, Ising models, and multivariate Gaussians.\nIn a similar vein, \\[ [PM21](https://ar5iv.org/html/2412.10370#bib.bibx28 \"\")\\] studied a related property testing variant of TV distance for distributions encoded by circuits.\nMultiplicative approximation of TV distance has received less attention compared to additive approximation.\nRecently, \\[ [BGM+23](https://ar5iv.org/html/2412.10370#bib.bibx2 \"\")\\] gave an FPTAS for estimating the TV distance between an arbitrary product distribution and a product distribution with a bounded number of distinct marginals.\n\\[ [FGJW23](https://ar5iv.org/html/2412.10370#bib.bibx10 \"\")\\] designed an FPRAS for multiplicatively approximating the TV distance between two arbitrary product distributions and \\[ [FLL24](https://ar5iv.org/html/2412.10370#bib.bibx12 \"\")\\] gave an FPTAS for the same task.\nFinally, \\[ [BGM+24](https://ar5iv.org/html/2412.10370#bib.bibx3 \"\")\\] gave an FPRAS for estimating the TV distance between Bayes nets of small treewidth.\n\nIn this paper we address some previously unexplored (or underexplored) computational aspects of total variation distance relating to mixtures of product distributions and Ising models.\n\n### 1.1 Equivalence Checking for Mixtures of Product Distributions\n\nMixtures of product distributions constitute a natural and important class of distributions that have been studied in the mathematics and computer science literature.\nFor instance, it is a standard observation that any distribution can be described by some (possibly large) mixture of product distributions (see [Àú4](https://ar5iv.org/html/2412.10370#Thmtheorem4 \"Observation 4. ‚Ä£ 2 Preliminaries ‚Ä£ Computational Explorations of Total Variation Distance\")).\n\n\\[ [FM99](https://ar5iv.org/html/2412.10370#bib.bibx13 \"\")\\] gave an efficient algorithm for learning a mixture of two product distributions over the Boolean domain.\nAs part of their analysis, they showed that given two mixtures of two product distributions, their KL divergence can be upper bounded by that of the components and a certain distance between the mixture coefficients.\nHowever, this upper bound does not lead to an equivalence checking algorithm.\n\nA related problem in machine learning is source identification, whereby one is asked to identify the source parameters of a distribution.\n\\[ [GMRS21](https://ar5iv.org/html/2412.10370#bib.bibx15 \"\"), [GS22](https://ar5iv.org/html/2412.10370#bib.bibx16 \"\"), [GJM+23](https://ar5iv.org/html/2412.10370#bib.bibx14 \"\")\\] give algorithms for source identification of a mixture of kk product distributions on nn bits, when given as input approximate values of multilinear moments.\n\nWe focus on the equivalence checking problem regarding mixtures of product distributions.\nNote that while it is easy to check whether two product distributions are equivalent, that is, by checking whether their respective Bernoulli parameters are equal, it is not clear how to do so for the case of mixtures of product distributions.\nThis is so, because there are mixtures of product distributions that are equal (as distributions) but different sets of Bernoulli parameters describe them.\nFor example, consider the case where we have two mixtures over one bit, namely P=1‚ãÖP1+0‚ãÖP2P=1\\\\cdot P\\_{1}+0\\\\cdot P\\_{2} and Q=12‚ãÖQ1+12‚ãÖQ2Q=\\\\frac{1}{2}\\\\cdot Q\\_{1}+\\\\frac{1}{2}\\\\cdot Q\\_{2}, where P1=P2=Bern‚Äã(12)P\\_{1}=P\\_{2}=\\\\mathrm{Bern}(\\\\frac{1}{2}) while Q1=Bern‚Äã(13)Q\\_{1}=\\\\mathrm{Bern}(\\\\frac{1}{3}) and Q2=Bern‚Äã(23)Q\\_{2}=\\\\mathrm{Bern}(\\\\frac{2}{3}).\nIn this case, P=Q=Bern‚Äã(12)P=Q=\\\\mathrm{Bern}(\\\\frac{1}{2}), but the parameters of PP and QQ are different.\n\nWe present a simple deterministic polynomial-time algorithm for checking equivalence between mixtures of product distributions.\n\nLet us first formally define mixtures of product distributions.\nLet w1,‚Ä¶,wkw\\_{1},\\\\dots,w\\_{k} be real numbers (weights) such that 0‚â§wi‚â§10\\\\leq w\\_{i}\\\\leq 1 for all 1‚â§i‚â§k1\\\\leq i\\\\leq k, ‚àëi=1kwi=1\\\\sum\\_{i=1}^{k}w\\_{i}=1, and P1,‚Ä¶,PkP\\_{1},\\\\dots,P\\_{k} are nn-dimensional product distributions over an alphabet Œ£\\\\Sigma.\nThe distribution PP specified by the tuple (w1,‚Ä¶,wk,P1,‚Ä¶,Pk)(w\\_{1},\\\\dots,w\\_{k},P\\_{1},\\\\dots,P\\_{k}) is a mixture of products if for all x‚ààŒ£nx\\\\in\\\\Sigma^{n} it is the case that\nP‚Äã(x)=‚àëi=1kwi‚ÄãPi‚Äã(x)P\\\\!\\\\left(x\\\\right)=\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}\\\\!\\\\left(x\\\\right).\nFor a distribution PP, we denote by P‚â§iP^{\\\\leq i} its marginal on the first ii variables.\n\nWe may now state our first main result.\n\n###### Theorem 1.\n\nThere is a deterministic algorithm EE such that, given two mixtures of product distributions PP and QQ, specified by (w1,‚Ä¶,wk,P1,‚Ä¶,Pk)(w\\_{1},\\\\dots,w\\_{k},P\\_{1},\\\\dots,P\\_{k}) and (v1,‚Ä¶,vk,Q1,‚Ä¶,Qk)(v\\_{1},\\\\dots,v\\_{k},Q\\_{1},\\\\dots,Q\\_{k}), respectively, decides whether P=QP=Q or not.\nMoreover, if P‚â†QP\\\\neq Q, then EE outputs some x‚ààŒ£ix\\\\in\\\\Sigma^{i} (with i‚â§ni\\\\leq n) such that P‚â§i‚Äã(x)‚â†Q‚â§i‚Äã(x)P^{\\\\leq i}\\\\!\\\\left(x\\\\right)\\\\neq Q^{\\\\leq i}\\\\!\\\\left(x\\\\right).\nThe running time of EE is O‚Äã(n‚Äãk4‚Äã\\|Œ£\\|4)O(nk^{4}\\|\\\\Sigma\\|^{4}).\n\n(Note that the algorithm outlined in [TheoremÀú1](https://ar5iv.org/html/2412.10370#Thmtheorem1 \"Theorem 1. ‚Ä£ 1.1 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\") has input size Œ©‚Äã(k‚Äãn‚Äã\\|Œ£\\|)\\\\Omega\\\\!\\\\left(kn\\\\left\\|\\\\Sigma\\\\right\\|\\\\right).)\nThe primary conceptual contribution of our work is a connection between equivalence checking for mixtures of distributions and basis construction over appropriately chosen vector space.\nThe connection lends itself to a construction that makes both the algorithm and the proof accessible to undergraduates.\n\n### 1.2 Hardness of Approximating Total Variation Distance Between Ising Models\n\nThe Ising model \\[ [Isi25](https://ar5iv.org/html/2412.10370#bib.bibx18 \"\"), [Len20](https://ar5iv.org/html/2412.10370#bib.bibx23 \"\")\\], originally developed to describe ferromagnetism in statistical mechanics, serves as a cornerstone in the study of phase transitions and critical phenomena.\nIt consists of discrete variables, known as spins, which can take values of either +1+1 or ‚àí1-1.\nThese spins are arranged on a lattice, and their interactions with nearest neighbors lead to a rich tapestry of behavior, including spontaneous magnetization and phase transitions at critical temperatures.\n\nOne of the most fascinating aspects of the Ising model is its ability to illustrate complex systems using simple rules.\nFor instance, in 2D, it exhibits a second-order phase transition at a critical temperature, where the system changes from a disordered state to an ordered state as temperature decreases.\nThis model has been extensively studied, leading to profound insights not only in physics but also in fields such as biology, sociology, and computer science.\nFor more information, the reader is invited to check the survey by Cipra \\[ [Cip87](https://ar5iv.org/html/2412.10370#bib.bibx5 \"\")\\].\n\nOn another note, the computational study of the Ising model has become increasingly relevant.\nWith its relatively simple structure‚Äîinteracting binary spins on a lattice, the Ising model serves as an ideal platform for exploring computational techniques ranging from Monte Carlo simulations to mean-field approximations.\nMonte Carlo methods, in particular, are widely used to investigate the thermodynamic properties of the Ising model, as they allow for efficient sampling of spin configurations at various temperatures, enabling the computation of quantities like magnetization and susceptibility.\n\nSome notable algorithmic results along these lines are the ones by \\[ [Kas63](https://ar5iv.org/html/2412.10370#bib.bibx21 \"\")\\] and \\[ [Fis66](https://ar5iv.org/html/2412.10370#bib.bibx11 \"\")\\], whereby they showed that the evaluation of the partition function for planar Ising models can be reduced to some appropriate determinant computations.\nMoreover, \\[ [JS93](https://ar5iv.org/html/2412.10370#bib.bibx20 \"\")\\] devised an efficient Monte Carlo approximation algorithm for estimating the partition function of arbitrary ferromagnetic (whereby all wi,jw\\_{i,j}‚Äôs are positive) Ising models.\n\nOn the other hand, there are some works pertaining to the intractability of computing various quantities of interest regarding Ising models \\[ [Wel93](https://ar5iv.org/html/2412.10370#bib.bibx33 \"\")\\], such as the partition function outlined above.\nFor example, \\[ [JS93](https://ar5iv.org/html/2412.10370#bib.bibx20 \"\")\\] show that unless ùñ≠ùñØ=ùñ±ùñØ\\\\mathsf{NP}=\\\\mathsf{RP}, there is no fully polynomial-time randomized approximation scheme (FPRAS) to estimate the partition function of arbitrary Ising models.\nMoreover, \\[ [Ist00](https://ar5iv.org/html/2412.10370#bib.bibx19 \"\")\\] proves that computing the partition function (for various kinds of Ising models) is ùñ≠ùñØ\\\\mathsf{NP}-complete.\n\nThe second part of our work falls in this latter category.\nLet us first fix some notation.\nWe focus on Ising models PP such that for all x‚àà{‚àí1,1}nx\\\\in\\\\left\\\\{-1,1\\\\right\\\\}^{n} it is the case that the probability that the underlying system of spins assumes the configuration xx is\n\n|     |     |     |\n| --- | --- | --- |\n|  | P‚Äã(x)=1Z‚Äãexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)‚àùexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi),P\\\\!\\\\left(x\\\\right)=\\\\frac{1}{Z}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right)\\\\propto\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right), |  |\n\nwhereby\nZ:=‚àëyexp‚Å°(‚àëi,jwi,j‚Äãyi‚Äãyj+‚àëihi‚Äãyi)Z:=\\\\sum\\_{y}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}y\\_{i}y\\_{j}+\\\\sum\\_{i}h\\_{i}y\\_{i}\\\\right)\nis the partition function of PP, and {wi,j}i<j\\\\left\\\\{w\\_{i,j}\\\\right\\\\}\\_{i<j} and {hi}i\\\\left\\\\{h\\_{i}\\\\right\\\\}\\_{i} are the parameters of the system.\n\nWe prove that it is hard to estimate the TV distance between Ising models under the very mild complexity-theoretic assumption ùñ≠ùñØ‚äàùñ±ùñØ\\\\mathsf{NP}\\\\not\\\\subseteq\\\\mathsf{RP}, which states that Boolean formula satisfiability (SAT\\\\mathrm{SAT}) does not admit any one-sided-error randomized polynomial-time algorithm, that is, a randomized polynomial-time algorithm that may output a false positive answer with small probability \\[ [AB09](https://ar5iv.org/html/2412.10370#bib.bibx1 \"\")\\].\n\n###### Theorem 2.\n\nIf ùñ≠ùñØ‚äàùñ±ùñØ\\\\mathsf{NP}\\\\not\\\\subseteq\\\\mathsf{RP}, then there is no FPRAS that estimates the TV distance between any two Ising models.\n\nOur proof draws on the hardness result of \\[ [JS93](https://ar5iv.org/html/2412.10370#bib.bibx20 \"\")\\], and shows that the partition function of Ising models can be reduced to the TV distance between Ising models, by a simple efficient _approximation preserving_ reduction.\nThe main ingredients of this reduction are as follows.\nFirst, we prove that estimating the partition function of any Ising model reduces to estimating any atomic marginal the form ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\] for any variable xkx\\_{k} and any Ising model PP (see [PropositionÀú7](https://ar5iv.org/html/2412.10370#Thmtheorem7 \"Proposition 7. ‚Ä£ 4.1 Reducing the Partition Function to Atomic Marginals ‚Ä£ 4 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\")).\nThen we show that estimating any atomic marginal the form ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\] for any variable xkx\\_{k} and any Ising model PP, can be reduced to estimating the TV distance between the Ising models P,QP,Q, whereby QQ depends on PP (see [PropositionÀú8](https://ar5iv.org/html/2412.10370#Thmtheorem8 \"Proposition 8. ‚Ä£ 4.2 Reducing the Atomic Marginals to TV Distance ‚Ä£ 4 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\")).\n\n### 1.3 Paper Organization\n\nWe give some preliminaries in [SectionÀú2](https://ar5iv.org/html/2412.10370#S2 \"2 Preliminaries ‚Ä£ Computational Explorations of Total Variation Distance\").\nWe prove [TheoremÀú1](https://ar5iv.org/html/2412.10370#Thmtheorem1 \"Theorem 1. ‚Ä£ 1.1 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\") in [SectionÀú3](https://ar5iv.org/html/2412.10370#S3 \"3 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ Computational Explorations of Total Variation Distance\") and [TheoremÀú2](https://ar5iv.org/html/2412.10370#Thmtheorem2 \"Theorem 2. ‚Ä£ 1.2 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\") in [SectionÀú4](https://ar5iv.org/html/2412.10370#S4 \"4 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\").\nWe conclude in [SectionÀú5](https://ar5iv.org/html/2412.10370#S5 \"5 Discussion ‚Ä£ Computational Explorations of Total Variation Distance\") with some interesting open problems.\n\n## 2 Preliminaries\n\nWe require the following folklore result, which is an application of Gaussian elimination.\n\n###### Proposition 3.\n\nThere is a deterministic algorithm GG that gets as input a set of vectors VV, and outputs a maximum-size subset S‚äÜVS\\\\subseteq V of linearly independent vectors.\nThe running time of GG is O‚Äã(\\|V\\|4)O\\\\!\\\\left(\\\\left\\|V\\\\right\\|^{4}\\\\right).\n\nAn nn-dimensional product distribution RR over an alphabet Œ£\\\\Sigma is described by the n‚Äã\\|Œ£\\|n\\\\left\\|\\\\Sigma\\\\right\\| parameters\n\n|     |     |     |\n| --- | --- | --- |\n|  | {ùêèùê´R\\[Xi=y\\]}i‚àà\\[n\\],y‚ààŒ£so thatR‚Äã(x)=‚àèi=1nùêèùê´R\\[Xi=xi\\]for all x‚ààŒ£n.\\\\left\\\\{\\\\operatorname\\*{\\\\bf Pr}\\_{R}\\\\!\\\\left\\[X\\_{i}=y\\\\right\\]\\\\right\\\\}\\_{\\\\begin{subarray}{c}i\\\\in\\[n\\],\\\\\\<br>y\\\\in\\\\Sigma\\\\end{subarray}}\\\\qquad\\\\text{so that}\\\\qquad R\\\\!\\\\left(x\\\\right)=\\\\prod\\_{i=1}^{n}\\\\operatorname\\*{\\\\bf Pr}\\_{R}\\\\!\\\\left\\[X\\_{i}=x\\_{i}\\\\right\\]\\\\qquad\\\\text{for all $x\\\\in\\\\Sigma^{n}$.} |  |\n\nFor nn-dimensional product distribution RR over an alphabet Œ£\\\\Sigma, we denote its marginal over the first 1‚â§j‚â§n1\\\\leq j\\\\leq n coordinates by R‚â§jR^{\\\\leq j}.\nNote that for any x‚ààŒ£jx\\\\in\\\\Sigma^{j} we have\nR‚â§j‚Äã(x)=‚àèi=1jùêèùê´R\\[Xi=xi\\].R^{\\\\leq j}\\\\!\\\\left(x\\\\right)=\\\\prod\\_{i=1}^{j}\\\\operatorname\\*{\\\\bf Pr}\\_{R}\\\\!\\\\left\\[X\\_{i}=x\\_{i}\\\\right\\].\n\nWe require the following observation, regarding the expressibility of mixtures of product distributions.\n\n###### Observation 4.\n\nLet DD be a distribution over Œ£n\\\\Sigma^{n} for some alphabet Œ£\\\\Sigma.\nThen for k:=\\|Œ£n\\|k:=\\\\left\\|\\\\Sigma^{n}\\\\right\\| there exists a mixture of product distributions (w1,‚Ä¶,wk,P1,‚Ä¶,Pk)(w\\_{1},\\\\dots,w\\_{k},P\\_{1},\\\\dots,P\\_{k}) over Œ£n\\\\Sigma^{n} such that for all x‚ààŒ£nx\\\\in\\\\Sigma^{n} it is the case that\n\n|     |     |     |\n| --- | --- | --- |\n|  | D‚Äã(x)=‚àëi=1kwi‚ÄãPi‚Äã(x).D\\\\!\\\\left(x\\\\right)=\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}\\\\!\\\\left(x\\\\right). |  |\n\n###### Proof.\n\nLet x1,‚Ä¶,xkx\\_{1},\\\\dots,x\\_{k} be the elements of Œ£n\\\\Sigma^{n}.\nFor all 1‚â§i‚â§k1\\\\leq i\\\\leq k, let PiP\\_{i} be a product distribution on nn variables such that Pi‚Äã(y)=1P\\_{i}\\\\!\\\\left(y\\\\right)=1 if y=xiy=x\\_{i}, otherwise, Pi‚Äã(y)=0P\\_{i}\\\\!\\\\left(y\\\\right)=0.\nWe can construct such a product distribution PiP\\_{i} as follows.\nFirst, note that Pi‚Äã(y)=‚àèj=1npi,j‚Äã(yj)P\\_{i}\\\\!\\\\left(y\\\\right)=\\\\prod\\_{j=1}^{n}p\\_{i,j}\\\\!\\\\left(y\\_{j}\\\\right), whereby pi,j‚Äã(z)p\\_{i,j}\\\\!\\\\left(z\\\\right) is the probability that the jj-th coordinate of PiP\\_{i} takes the value z‚ààŒ£z\\\\in\\\\Sigma.\nLet xi=xi,1,‚Ä¶,xi,nx\\_{i}=x\\_{i,1},\\\\dots,x\\_{i,n}, whereby xi,j‚ààŒ£x\\_{i,j}\\\\in\\\\Sigma.\nThen for all jj define pi,j‚Äã(z):=1p\\_{i,j}\\\\!\\\\left(z\\\\right):=1 if z=xi,jz=x\\_{i,j}, otherwise, pi,j‚Äã(z):=0p\\_{i,j}(z):=0.\nMoreover, let wi:=D‚Äã(xi)w\\_{i}:=D\\\\!\\\\left(x\\_{i}\\\\right) and note that ‚àëi=1kwi=1\\\\sum\\_{i=1}^{k}w\\_{i}=1.\nThen the desired equality follows by straightforward calculations.\n‚àé\n\nWe shall also require the following notion of approximation algorithm.\n\n###### Definition 5.\n\nA function f:{0,1}‚àó‚Üí‚Ñùf:\\\\left\\\\{0,1\\\\right\\\\}^{\\*}\\\\to\\\\mathbb{R} admits a _fully polynomial-time randomized approximation scheme (FPRAS)_ if there is a randomized algorithm ùíú\\\\mathcal{A} such that for every input xx (of length nn) and parameters Œµ,Œ¥>0\\\\varepsilon,\\\\delta>0, the algorithm ùíú\\\\mathcal{A} outputs a Œµ\\\\varepsilon-multiplicative approximation of f‚Äã(x)f(x), i.e., a value that lies in the interval \\[f‚Äã(x)/(1+Œµ),(1+Œµ)‚Äãf‚Äã(x)\\]\\\\left\\[f(x)/(1+\\\\varepsilon),(1+\\\\varepsilon)f(x)\\\\right\\], with probability at least 1‚àíŒ¥1-\\\\delta.\nThe running time of ùíú\\\\mathcal{A} is polynomial in n,1/Œµ,1/Œ¥n,1/\\\\varepsilon,1/\\\\delta.\n\n## 3 Equivalence Checking for Mixtures of Product Distributions\n\nLet us now prove [TheoremÀú1](https://ar5iv.org/html/2412.10370#Thmtheorem1 \"Theorem 1. ‚Ä£ 1.1 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\").\nFirst, observe that P=QP=Q if and only if P‚â§j=Q‚â§jP^{\\\\leq j}=Q^{\\\\leq j} for all 1‚â§j‚â§n1\\\\leq j\\\\leq n.\nThis is so, since if P=QP=Q, then every marginal of PP matches the respective marginal of QQ (in symbols, P‚â§j=Q‚â§jP^{\\\\leq j}=Q^{\\\\leq j} for all 1‚â§j‚â§n1\\\\leq j\\\\leq n).\nOtherwise, there would be some 1‚â§j‚â§n1\\\\leq j\\\\leq n and y‚ààŒ£jy\\\\in\\\\Sigma^{j} such that P‚â§j‚Äã(y)‚â†Q‚â§j‚Äã(y)P^{\\\\leq j}\\\\!\\\\left(y\\\\right)\\\\neq Q^{\\\\leq j}\\\\!\\\\left(y\\\\right).\nThe latter would then establish the existence of an x:=(y,z)‚ààŒ£nx:=\\\\left(y,z\\\\right)\\\\in\\\\Sigma^{n} (for some z‚ààŒ£n‚àíjz\\\\in\\\\Sigma^{n-j}) such that P‚Äã(x)‚â†Q‚Äã(x)P\\\\!\\\\left(x\\\\right)\\\\neq Q\\\\!\\\\left(x\\\\right).\nOn the other hand, if P‚â§j=Q‚â§jP^{\\\\leq j}=Q^{\\\\leq j} for all 1‚â§j‚â§n1\\\\leq j\\\\leq n, then P‚â§n=Q‚â§nP^{\\\\leq n}=Q^{\\\\leq n} which in particular implies that P=QP=Q.\n\nNote that the condition P‚â§j=Q‚â§jP^{\\\\leq j}=Q^{\\\\leq j} for all 1‚â§j‚â§n1\\\\leq j\\\\leq n is equivalent, by the definitions of PP and QQ, to the condition\n‚àëi=1kwi‚ÄãPi‚â§j=‚àëi=1kvi‚ÄãQi‚â§j\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}=\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\nfor all 1‚â§j‚â§n1\\\\leq j\\\\leq n.\nThus, if P‚â†QP\\\\neq Q, then there is some 1‚â§j‚â§n1\\\\leq j\\\\leq n so that\n‚àëi=1kwi‚ÄãPi‚â§j‚â†‚àëi=1kvi‚ÄãQi‚â§j.\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\neq\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}.\n\nWe will use an inductive argument on 1‚â§j‚â§n1\\\\leq j\\\\leq n to show that these conditions can be efficiently checked (in either case).\n\n#### Base Case.\n\nFor j=1j=1, we can efficiently check whether it is the case that\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§1=‚àëi=1kvi‚ÄãQi‚â§1.\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq 1}=\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq 1}. |  |\n\nThis is done by checking for all x‚ààŒ£x\\\\in\\\\Sigma that\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚Äãùêèùê´Pi\\[X1=x\\]‚àí‚àëi=1kvi‚Äãùêèùê´Qi\\[X1=x\\]=0.\\\\sum\\_{i=1}^{k}w\\_{i}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\]-\\\\sum\\_{i=1}^{k}v\\_{i}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{i}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\]=0. |  |\n\nIf these tests pass, then the algorithm proceeds with the inductive argument outlined below (otherwise, it outputs xx).\nTowards this, we will now find a basis B1B\\_{1} for the set of coefficient vectors of the equations\n\n|     |     |     |\n| --- | --- | --- |\n|  | {‚àëi=1kwi‚Äãùêèùê´Pi\\[X1=x\\]‚Äãzi‚àí‚àëi=1kvi‚Äãùêèùê´Qi\\[X1=x\\]‚Äãzk+i=0}x‚ààŒ£,\\\\left\\\\{\\\\sum\\_{i=1}^{k}w\\_{i}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\]z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{i}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\]z\\_{k+i}=0\\\\right\\\\}\\_{x\\\\in\\\\Sigma}, |  |\n\nover variables z1,‚Ä¶,z2‚Äãkz\\_{1},\\\\dots,z\\_{2k}.\nNote that the size of B1B\\_{1} is at most min‚Å°(2‚Äãk,\\|Œ£\\|)‚â§2‚Äãk\\\\min\\\\!\\\\left(2k,\\|\\\\Sigma\\|\\\\right)\\\\leq 2k.\nWe can find B1B\\_{1} as follows.\nWe appeal to [PropositionÀú3](https://ar5iv.org/html/2412.10370#Thmtheorem3 \"Proposition 3. ‚Ä£ 2 Preliminaries ‚Ä£ Computational Explorations of Total Variation Distance\") and run the algorithm GG outlined there on the set of vectors\n\n|     |     |     |\n| --- | --- | --- |\n|  | {(w1‚Äãùêèùê´P1\\[X1=x\\],‚Ä¶,wk‚Äãùêèùê´Pk\\[X1=x\\],‚àív1‚Äãùêèùê´Q1\\[X1=x\\],‚Ä¶,‚àívk‚Äãùêèùê´Qk\\[X1=x\\])}x‚ààŒ£\\\\left\\\\{\\\\left(w\\_{1}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\],\\\\dots,w\\_{k}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{k}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\],-v\\_{1}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{1}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\],\\\\dots,-v\\_{k}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{k}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\]\\\\right)\\\\right\\\\}\\_{x\\\\in\\\\Sigma} |  |\n\n(in time O‚Äã(\\|Œ£\\|4)O\\\\!\\\\left(\\\\left\\|\\\\Sigma\\\\right\\|^{4}\\\\right)).\nThen, we define B1B\\_{1} to be the set of independent vectors being output by GG.\n\n#### Induction Hypothesis.\n\nAssume that for a j‚â•1j\\\\geq 1 it is the case that\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§j=‚àëi=1kvi‚ÄãQi‚â§j,\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}=\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}, |  |\n\nand we have a basis BjB\\_{j} for the set of coefficient vectors of the following equations\n\n|     |     |     |\n| --- | --- | --- |\n|  | {‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãzk+i=0}x‚ààŒ£j\\\\left\\\\{\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)z\\_{k+i}=0\\\\right\\\\}\\_{x\\\\in\\\\Sigma^{j}} |  |\n\nover variables z1,‚Ä¶,z2‚Äãkz\\_{1},\\\\dots,z\\_{2k}.\nNote that BjB\\_{j} is of size at most min‚Å°(2‚Äãk,\\|Œ£\\|j)‚â§2‚Äãk\\\\min\\\\!\\\\left(2k,\\|\\\\Sigma\\|^{j}\\\\right)\\\\leq 2k.\n\n#### Induction Step.\n\nWe will establish that we can check whether PP and QQ agree up to coordinate j+1j+1 and compute a basis Bj+1B\\_{j+1} for the respective set of coefficient vectors of the equations that capture this equivalence.\n\nTo see whether PP and QQ agree up to coordinate j+1j+1, one needs to check that\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãùêèùê´Pi\\[Xj+1=y\\]‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãùêèùê´Qi\\[Xj+1=y\\]=0\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]=0 |  |\n\nfor all x‚ààŒ£jx\\\\in\\\\Sigma^{j} and y‚ààŒ£y\\\\in\\\\Sigma.\nA crucial observation (that follows from the inductive hypothesis) is that we only need to check whether these equations hold for the assignments xx that correspond to vectors in BjB\\_{j}, and the values y‚ààŒ£y\\\\in\\\\Sigma.\n(Note that each basis vector b‚ààBjb\\\\in B\\_{j} can be specified by an assignment xb‚ààŒ£jx\\_{b}\\\\in\\\\Sigma^{j}. This follows from the way these basis vectors are constructed. See below, the discussion after [Àú6](https://ar5iv.org/html/2412.10370#Thmtheorem6 \"Claim 6. ‚Ä£ Induction Step. ‚Ä£ 3 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ Computational Explorations of Total Variation Distance\").)\nIf any of these tests fails, then the algorithm outputs (x,y)\\\\left(x,y\\\\right); else, it continues as follows.\n\nTo proceed with the induction, it would suffice to show how to construct a basis Bj+1B\\_{j+1} for the set of coefficient vectors of the following equations over variables z1,‚Ä¶,z2‚Äãkz\\_{1},\\\\dots,z\\_{2k}, namely\n\n|     |     |     |\n| --- | --- | --- |\n|  | {‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãùêèùê´Pi\\[Xj+1=y\\]‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãùêèùê´Qi\\[Xj+1=y\\]‚Äãzk+i=0}x‚ààŒ£j,y‚ààŒ£.\\\\left\\\\{\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]z\\_{k+i}=0\\\\right\\\\}\\_{\\\\begin{subarray}{c}x\\\\in\\\\Sigma^{j},\\\\\\<br>y\\\\in\\\\Sigma\\\\end{subarray}}. |  |\n\nLet\nBj={b1=(b1,1,‚Ä¶,b1,2‚Äãk),‚Ä¶,bm=(bm,1,‚Ä¶,bm,2‚Äãk)}B\\_{j}=\\\\left\\\\{b\\_{1}=\\\\left(b\\_{1,1},\\\\dots,b\\_{1,2k}\\\\right),\\\\dots,b\\_{m}=\\\\left(b\\_{m,1},\\\\dots,b\\_{m,2k}\\\\right)\\\\right\\\\}\nwhereby m‚â§2‚Äãkm\\\\leq 2k and C:=‚ãÉi=1mCiC:=\\\\bigcup\\_{i=1}^{m}C\\_{i} is such that\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | C1\\\\displaystyle C\\_{1} | :={(b1,1ùêèùê´P1\\[Xj+1=y\\],‚Ä¶,b1,kùêèùê´Pk\\[Xj+1=y\\],\\\\displaystyle:=\\\\left\\\\{\\\\left(b\\_{1,1}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\],\\\\dots,b\\_{1,k}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{k}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\],\\\\right.\\\\right. |  |\n|  |  | b1,k+1ùêèùê´Q1\\[Xj+1=y\\],‚Ä¶,b1,2‚Äãkùêèùê´Qk\\[Xj+1=y\\])}y‚ààŒ£,\\\\displaystyle\\\\qquad\\\\qquad\\\\left.\\\\left.b\\_{1,k+1}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{1}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\],\\\\dots,b\\_{1,2k}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{k}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]\\\\right)\\\\right\\\\}\\_{y\\\\in\\\\Sigma}, |  |\n|  |  | ‚ãÆ\\\\displaystyle\\ \\ \\\\vdots |  |\n|  | Cm\\\\displaystyle C\\_{m} | :={(bm,1ùêèùê´P1\\[Xj+1=y\\],‚Ä¶,bm,kùêèùê´Pk\\[Xj+1=y\\],\\\\displaystyle:=\\\\left\\\\{\\\\left(b\\_{m,1}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\],\\\\dots,b\\_{m,k}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{k}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\],\\\\right.\\\\right. |  |\n|  |  | bm,k+1ùêèùê´Q1\\[Xj+1=y\\],‚Ä¶,bm,2‚Äãkùêèùê´Qk\\[Xj+1=y\\])}y‚ààŒ£.\\\\displaystyle\\\\qquad\\\\qquad\\\\left.\\\\left.b\\_{m,k+1}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{1}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\],\\\\dots,b\\_{m,2k}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{k}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]\\\\right)\\\\right\\\\}\\_{y\\\\in\\\\Sigma}. |  |\n\nWe require the following claim.\nBelow, we denote the dot product of vectors a,b‚àà‚Ñùsa,b\\\\in\\\\mathbb{R}^{s} by ‚ü®a,b‚ü©\\\\left\\\\langle a,b\\\\right\\\\rangle.\nThat is, ‚ü®a,b‚ü©=‚àëi=1sai‚Äãbi\\\\left\\\\langle a,b\\\\right\\\\rangle=\\\\sum\\_{i=1}^{s}a\\_{i}b\\_{i}.\n\n###### Claim 6.\n\nIt is the case that Bj+1‚äÜCB\\_{j+1}\\\\subseteq C.\n\n[Àú6](https://ar5iv.org/html/2412.10370#Thmtheorem6 \"Claim 6. ‚Ä£ Induction Step. ‚Ä£ 3 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ Computational Explorations of Total Variation Distance\") helps explain how, for any vector b‚ààBj+1b\\\\in B\\_{j+1}, one may extract an assignment xb‚ààŒ£j+1x\\_{b}\\\\in\\\\Sigma^{j+1} that corresponds to bb.\nThis is done by keeping track of the Bernoulli parameters that appear in bb:\nThere is exactly one such parameter for each variable, and it refers to a symbol in Œ£\\\\Sigma.\n\n###### Proof of [Àú6](https://ar5iv.org/html/2412.10370\\#Thmtheorem6 \"Claim 6. ‚Ä£ Induction Step. ‚Ä£ 3 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ Computational Explorations of Total Variation Distance\").\n\nLet y‚ààŒ£y\\\\in\\\\Sigma.\nWe have that\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§j+1‚Äã(x,y)‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j+1‚Äã(x,y)‚Äãzk+i\\\\displaystyle\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j+1}\\\\!\\\\left(x,y\\\\right)z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j+1}\\\\!\\\\left(x,y\\\\right)z\\_{k+i} |  |\n|  | =‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãùêèùê´Pi\\[Xj+1=y\\]‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãùêèùê´Qi\\[Xj+1=y\\]‚Äãzk+i.\\\\displaystyle\\\\qquad=\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]z\\_{k+i}. |  |\n\nLet z:=(z1,‚Ä¶,z2‚Äãk)z:=(z\\_{1},\\\\dots,z\\_{2k}).\nBy the inductive hypothesis, for any x‚ààŒ£jx\\\\in\\\\Sigma^{j},\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãzk+i\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)z\\_{k+i} |  |\n\ncan be written as a linear combination of {‚ü®b‚Ñì,z‚ü©}‚Ñì=1m\\\\left\\\\{\\\\left\\\\langle b\\_{\\\\ell},z\\\\right\\\\rangle\\\\right\\\\}\\_{\\\\ell=1}^{m}.\nConcretely, there exist d1,‚Ä¶,dm‚àà‚Ñùd\\_{1},\\\\dots,d\\_{m}\\\\in\\\\mathbb{R} such that\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãzk+i=‚àë‚Ñì=1md‚Ñì‚Äã‚ü®b‚Ñì,z‚ü©.\\\\displaystyle\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)z\\_{k+i}=\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\left\\\\langle b\\_{\\\\ell},z\\\\right\\\\rangle. |  |\n\nSince the corresponding coefficients of each ziz\\_{i} must be equal between the LHS and the RHS of this equation, we get that for all 1‚â§i‚â§k1\\\\leq i\\\\leq k,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | wi‚ÄãPi‚â§j‚Äã(x)=‚àë‚Ñì=1md‚Ñì‚ãÖb‚Ñì,iandvi‚ÄãQi‚â§j‚Äã(x)=‚àí‚àë‚Ñì=1md‚Ñì‚ãÖb‚Ñì,k+iw\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)=\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\cdot b\\_{\\\\ell,i}\\\\qquad\\\\text{and}\\\\qquad v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)=-\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\cdot b\\_{\\\\ell,k+i} |  | (1) |\n\nfor some d1,‚Ä¶,dmd\\_{1},\\\\dots,d\\_{m}.\nThen it is straightforward to see that for every y‚ààŒ£y\\\\in\\\\Sigma\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãùêèùê´Pi\\[Xj+1=y\\]‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãùêèùê´Qi\\[Xj+1=y\\]‚Äãzk+i=‚àë‚Ñì=1md‚Ñì‚Äã‚ü®c‚Ñì,z‚ü©,\\\\displaystyle\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]z\\_{k+i}=\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\left\\\\langle c\\_{\\\\ell},z\\\\right\\\\rangle, |  |\n\nwhereby c‚Ñìc\\_{\\\\ell} is the vector within the set C‚ÑìC\\_{\\\\ell} that corresponds to the setting where Xj+1=yX\\_{j+1}=y.\nTo see why this equation holds, we will consider the coefficients of each ziz\\_{i} in either side of this equation and show that they are equal.\nLet us consider the case where 1‚â§i‚â§k1\\\\leq i\\\\leq k.\n(The case where k+1‚â§i‚â§2‚Äãkk+1\\\\leq i\\\\leq 2k is similar.)\nIn the LHS, the coefficient of ziz\\_{i} is equal to\n\n|     |     |     |\n| --- | --- | --- |\n|  | wi‚ÄãPi‚â§j‚Äã(x)‚Äãùêèùê´Pi\\[Xj+1=y\\]=‚àë‚Ñì=1md‚Ñì‚ãÖb‚Ñì,i‚ãÖùêèùê´Pi\\[Xj+1=y\\],w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]=\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\cdot b\\_{\\\\ell,i}\\\\cdot\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\], |  |\n\nby [EquationÀú1](https://ar5iv.org/html/2412.10370#S3.E1 \"In Induction Step. ‚Ä£ 3 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ Computational Explorations of Total Variation Distance\"), while in the RHS it is equal to\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àë‚Ñì=1md‚Ñì‚ãÖc‚Ñì,i=‚àë‚Ñì=1md‚Ñì‚ãÖb‚Ñì,i‚ãÖùêèùê´Pi\\[Xj+1=y\\],\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\cdot c\\_{\\\\ell,i}=\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\cdot b\\_{\\\\ell,i}\\\\cdot\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\], |  |\n\nby the definition of c‚Ñìc\\_{\\\\ell}.\nThis shows that Bj+1B\\_{j+1} is a subset of CC, and the proof is complete.\n‚àé\n\nBy [Àú6](https://ar5iv.org/html/2412.10370#Thmtheorem6 \"Claim 6. ‚Ä£ Induction Step. ‚Ä£ 3 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ Computational Explorations of Total Variation Distance\"), we have that Bj+1B\\_{j+1} contains (at most) m‚Äã\\|Œ£\\|=O‚Äã(k‚Äã\\|Œ£\\|)m\\\\left\\|\\\\Sigma\\\\right\\|=O\\\\!\\\\left(k\\\\left\\|\\\\Sigma\\\\right\\|\\\\right) vectors.\nHowever, not all of these O‚Äã(k‚Äã\\|Œ£\\|)O\\\\!\\\\left(k\\\\left\\|\\\\Sigma\\\\right\\|\\\\right) vectors are (necessarily) independent.\nBy [PropositionÀú3](https://ar5iv.org/html/2412.10370#Thmtheorem3 \"Proposition 3. ‚Ä£ 2 Preliminaries ‚Ä£ Computational Explorations of Total Variation Distance\"), we can find the (at most) 2‚Äãk2k independent vectors among the O‚Äã(k‚Äã\\|Œ£\\|)O\\\\!\\\\left(k\\\\left\\|\\\\Sigma\\\\right\\|\\\\right) vectors in time O‚Äã(k4‚Äã\\|Œ£\\|4)O\\\\!\\\\left(k^{4}\\\\left\\|\\\\Sigma\\\\right\\|^{4}\\\\right).\nThese vectors constitute Bj+1B\\_{j+1}.\nThis concludes the inductive description of our algorithm.\n\n#### Running Time.\n\nLet T‚Äã(n,k,Œ£)T\\\\!\\\\left(n,k,\\\\Sigma\\\\right) denote the running time of this procedure, on mixtures of size kk over nn variables that have alphabet Œ£\\\\Sigma.\nWe have the recurrence relation\n\n|     |     |     |\n| --- | --- | --- |\n|  | T‚Äã(n,k,Œ£)‚â§T‚Äã(n‚àí1,k,Œ£)+O‚Äã(k4‚Äã\\|Œ£\\|4),T\\\\!\\\\left(n,k,\\\\Sigma\\\\right)\\\\leq T\\\\!\\\\left(n-1,k,\\\\Sigma\\\\right)+O\\\\!\\\\left(k^{4}\\\\left\\|\\\\Sigma\\\\right\\|^{4}\\\\right), |  |\n\nwhich in particular yields T‚Äã(n,k,Œ£)=O‚Äã(n‚Äãk4‚Äã\\|Œ£\\|4)T\\\\!\\\\left(n,k,\\\\Sigma\\\\right)=O\\\\!\\\\left(nk^{4}\\\\left\\|\\\\Sigma\\\\right\\|^{4}\\\\right).\n\n## 4 Hardness of Approximating Total Variation Distance Between Ising Models\n\nIn this section we prove [TheoremÀú2](https://ar5iv.org/html/2412.10370#Thmtheorem2 \"Theorem 2. ‚Ä£ 1.2 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\").\n\n### 4.1 Reducing the Partition Function to Atomic Marginals\n\nWe first observe the following.\n\n###### Proposition 7.\n\nIf there is some FPRAS that estimates any atomic marginal of any Ising model PP, namely ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\] for any variable xkx\\_{k}, then there is some FPRAS that estimates the partition function of any Ising model.\n\n###### Proof.\n\nLet us first assume that there is some FPRAS MM that runs in time tMt\\_{M} and estimates any atomic marginal of any Ising model.\nWe will prove there is some FPRAS that estimates the partition function of any Ising model.\n\nLet P1P\\_{1} be an Ising model over variables x1,‚Ä¶,xnx\\_{1},\\\\dots,x\\_{n} with parameters {wi,j}i,j\\\\left\\\\{w\\_{i,j}\\\\right\\\\}\\_{i,j} and {hi}i\\\\left\\\\{h\\_{i}\\\\right\\\\}\\_{i} with partition function Z1Z\\_{1}.\nWe will show how to estimate Z1Z\\_{1}.\nTo this end, let us define a new Ising model P2P\\_{2} over variables x2,‚Ä¶,xnx\\_{2},\\\\dots,x\\_{n} with parameters {wi,j(2)}i<j\\\\left\\\\{w\\_{i,j}^{\\\\left(2\\\\right)}\\\\right\\\\}\\_{i<j} and {hi(2)}i\\\\left\\\\{h\\_{i}^{\\\\left(2\\\\right)}\\\\right\\\\}\\_{i} so that wi,j(2):=wi,jw\\_{i,j}^{\\\\left(2\\\\right)}:=w\\_{i,j} and hi(2):=w1,i+hih\\_{i}^{\\\\left(2\\\\right)}:=w\\_{1,i}+h\\_{i} for all 2‚â§i<j‚â§n2\\\\leq i<j\\\\leq n.\nLet Z2Z\\_{2} be the partition function of P2P\\_{2}.\nLet also\n\n|     |     |     |\n| --- | --- | --- |\n|  | E1‚Äã(x):=exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi),E2‚Äã(x):=exp‚Å°(‚àëi,j‚â†1wi,j(2)‚Äãxi‚Äãxj+‚àëi‚â†1hi(2)‚Äãxi),E\\_{1}\\\\!\\\\left(x\\\\right):=\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right),\\\\qquad E\\_{2}\\\\!\\\\left(x\\\\right):=\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}^{\\\\left(2\\\\right)}x\\_{i}x\\_{j}+\\\\sum\\_{i\\\\neq 1}h\\_{i}^{\\\\left(2\\\\right)}x\\_{i}\\\\right), |  |\n\nfor all xx, and note that Z1=‚àëxE1‚Äã(x)Z\\_{1}=\\\\sum\\_{x}E\\_{1}\\\\!\\\\left(x\\\\right) and Z2=‚àëxE2‚Äã(x)Z\\_{2}=\\\\sum\\_{x}E\\_{2}\\\\!\\\\left(x\\\\right).\nWe have\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ‚àëx:x1=1E1‚Äã(x)\\\\displaystyle\\\\sum\\_{x:x\\_{1}=1}E\\_{1}\\\\!\\\\left(x\\\\right) | =‚àëx:x1=1exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\sum\\_{x:x\\_{1}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right) |  |\n|  |  | =‚àëx:x1=1exp‚Å°(‚àëi,j‚â†1wi,j‚Äãxi‚Äãxj+‚àëiw1,i‚Äãxi+‚àëi‚â†1hi‚Äãxi+h1)\\\\displaystyle=\\\\sum\\_{x:x\\_{1}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}w\\_{1,i}x\\_{i}+\\\\sum\\_{i\\\\neq 1}h\\_{i}x\\_{i}+h\\_{1}\\\\right) |  |\n|  |  | =‚àëx:x1=1exp‚Å°(‚àëi,j‚â†1wi,j‚Äãxi‚Äãxj+‚àëi‚â†1(w1,i+hi)‚Äãxi+h1)\\\\displaystyle=\\\\sum\\_{x:x\\_{1}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i\\\\neq 1}\\\\left(w\\_{1,i}+h\\_{i}\\\\right)x\\_{i}+h\\_{1}\\\\right) |  |\n|  |  | =‚àëx:x1=1exp‚Å°(‚àëi,j‚â†1wi,j‚Äãxi‚Äãxj+‚àëi‚â†1(w1,i+hi)‚Äãxi)‚Äãexp‚Å°(h1)\\\\displaystyle=\\\\sum\\_{x:x\\_{1}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i\\\\neq 1}\\\\left(w\\_{1,i}+h\\_{i}\\\\right)x\\_{i}\\\\right)\\\\exp\\\\!\\\\left(h\\_{1}\\\\right) |  |\n|  |  | =exp‚Å°(h1)‚Äã‚àëx:x1=1exp‚Å°(‚àëi,j‚â†1wi,j‚Äãxi‚Äãxj+‚àëi‚â†1(w1,i+hi)‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)\\\\sum\\_{x:x\\_{1}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i\\\\neq 1}\\\\left(w\\_{1,i}+h\\_{i}\\\\right)x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(h1)‚Äã‚àëx:x1=1exp‚Å°(‚àëi,j‚â†1wi,j(2)‚Äãxi‚Äãxj+‚àëi‚â†1hi(2)‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)\\\\sum\\_{x:x\\_{1}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}^{\\\\left(2\\\\right)}x\\_{i}x\\_{j}+\\\\sum\\_{i\\\\neq 1}h\\_{i}^{\\\\left(2\\\\right)}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(h1)‚Äã‚àëxexp‚Å°(‚àëi,j‚â†1wi,j(2)‚Äãxi‚Äãxj+‚àëi‚â†1hi(2)‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}^{\\\\left(2\\\\right)}x\\_{i}x\\_{j}+\\\\sum\\_{i\\\\neq 1}h\\_{i}^{\\\\left(2\\\\right)}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(h1)‚Äã‚àëxE2‚Äã(x)\\\\displaystyle=\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)\\\\sum\\_{x}E\\_{2}\\\\!\\\\left(x\\\\right) |  |\n|  |  | =exp‚Å°(h1)‚ÄãZ2.\\\\displaystyle=\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)Z\\_{2}. |  |\n\nMoreover,\n\n|     |     |     |\n| --- | --- | --- |\n|  | ùêèùê´P1\\[x1=1\\]=1Z1‚Äã‚àëx:x1=1E1‚Äã(x)orZ1=1ùêèùê´P1\\[x1=1\\]‚Äã‚àëx:x1=1E1‚Äã(x).\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\]=\\\\frac{1}{Z\\_{1}}\\\\sum\\_{x:x\\_{1}=1}E\\_{1}\\\\!\\\\left(x\\\\right)\\\\qquad\\\\text{or}\\\\qquad Z\\_{1}=\\\\frac{1}{\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\]}\\\\sum\\_{x:x\\_{1}=1}E\\_{1}\\\\!\\\\left(x\\\\right). |  |\n\nCombining the above, we have that\n\n|     |     |     |\n| --- | --- | --- |\n|  | Z1=1ùêèùê´P1\\[x1=1\\]‚Äã‚àëx:x1=1E1‚Äã(x)=Z2‚Äãexp‚Å°(h1)ùêèùê´P1\\[x1=1\\].Z\\_{1}=\\\\frac{1}{\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\]}\\\\sum\\_{x:x\\_{1}=1}E\\_{1}\\\\!\\\\left(x\\\\right)=Z\\_{2}\\\\frac{\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)}{\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\]}. |  |\n\nThis equality yields a natural recursive algorithm for computing Z1Z\\_{1}, whereby the computation of Z1Z\\_{1} is reduced to the computation of Z2Z\\_{2} by making use of the algorithm MM that estimates the marginal ùêèùê´P1\\[x1=1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\].\nThis continues until we reach in the recursion some Ising model PnP\\_{n} over the variable xnx\\_{n}.\nAt this point the computation of ZnZ\\_{n} is trivial, as\n\n|     |     |     |\n| --- | --- | --- |\n|  | Zn=exp‚Å°(hn(n))+exp‚Å°(‚àíhn(n)).Z\\_{n}=\\\\exp\\\\!\\\\left(h\\_{n}^{\\\\left(n\\\\right)}\\\\right)+\\\\exp\\\\!\\\\left(-h\\_{n}^{\\\\left(n\\\\right)}\\\\right). |  |\n\nWe will now bound the approximation and confidence errors of this algorithm.\nNote that\n\n|     |     |     |\n| --- | --- | --- |\n|  | Z1=Z2‚Äãexp‚Å°(h1)ùêèùê´P1\\[x1=1\\]=‚ãØ=Zn‚Äãexp‚Å°(h1)‚ãÖexp‚Å°(h2(2))‚ãÖ‚Ä¶‚ãÖexp‚Å°(hn‚àí1(n‚àí1))ùêèùê´P1\\[x1=1\\]‚ãÖùêèùê´P2\\[x2=1\\]‚ãÖ‚Ä¶‚ãÖùêèùê´Pn‚àí1\\[xn‚àí1=1\\]Z\\_{1}=Z\\_{2}\\\\frac{\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)}{\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\]}=\\\\cdots=Z\\_{n}\\\\frac{\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)\\\\cdot\\\\exp\\\\!\\\\left(h\\_{2}^{\\\\left(2\\\\right)}\\\\right)\\\\cdot\\\\ldots\\\\cdot\\\\exp\\\\!\\\\left(h\\_{n-1}^{\\\\left(n-1\\\\right)}\\\\right)}{\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\]\\\\cdot\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{2}}\\\\!\\\\left\\[x\\_{2}=1\\\\right\\]\\\\cdot\\\\ldots\\\\cdot\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{n-1}}\\\\!\\\\left\\[x\\_{n-1}=1\\\\right\\]} |  |\n\nwhereby each atomic marginal in the denominator is approximated with a (1+Œµ0)\\\\left(1+\\\\varepsilon\\_{0}\\\\right) ratio for Œµ0:=Œµ/n\\\\varepsilon\\_{0}:=\\\\varepsilon/n by making use of MM.\nThis yields the desired approximation ratio of\n\n|     |     |     |\n| --- | --- | --- |\n|  | (1+Œµ0)n‚àí1‚â§(1+Œµ0)n‚â§1+n‚ãÖŒµ0=1+n‚ãÖŒµn=1+Œµ.\\\\left(1+\\\\varepsilon\\_{0}\\\\right)^{n-1}\\\\leq\\\\left(1+\\\\varepsilon\\_{0}\\\\right)^{n}\\\\leq 1+n\\\\cdot\\\\varepsilon\\_{0}=1+n\\\\cdot\\\\frac{\\\\varepsilon}{n}=1+\\\\varepsilon. |  |\n\nWe similarly argue for the confidence ratio Œ¥0:=Œ¥/n\\\\delta\\_{0}:=\\\\delta/n that yields the desired confidence ratio of 1‚àíŒ¥1-\\\\delta.\nThat is, the outlined reduction is approximation preserving.\nWhat is left is to bound the running time of this recursive procedure.\nLet T‚Äã(n)T\\\\!\\\\left(n\\\\right) be the running time in question.\nWe have that\n\n|     |     |     |\n| --- | --- | --- |\n|  | T‚Äã(n)‚â§T‚Äã(n‚àí1)+tM‚Äã(n,1/Œµ0,1/Œ¥0)+O‚Äã(1)T\\\\!\\\\left(n\\\\right)\\\\leq T\\\\!\\\\left(n-1\\\\right)+t\\_{M}\\\\!\\\\left(n,1/\\\\varepsilon\\_{0},1/\\\\delta\\_{0}\\\\right)+O\\\\!\\\\left(1\\\\right) |  |\n\nor\nT‚Äã(n)=O‚Äã(n‚ãÖtM‚Äã(n,1/Œµ0,1/Œ¥0))=O‚Äã(poly‚Äã(n,1/Œµ0,1/Œ¥0)).T\\\\!\\\\left(n\\\\right)=O\\\\!\\\\left(n\\\\cdot t\\_{M}\\\\!\\\\left(n,1/\\\\varepsilon\\_{0},1/\\\\delta\\_{0}\\\\right)\\\\right)=O\\\\!\\\\left(\\\\textup{poly}\\\\!\\\\left(n,1/\\\\varepsilon\\_{0},1/\\\\delta\\_{0}\\\\right)\\\\right).\nThis concludes the proof.\n‚àé\n\n### 4.2 Reducing the Atomic Marginals to TV Distance\n\nWe prove the following.\n\n###### Proposition 8.\n\nIf there is some FPRAS that estimates the TV distance between any two Ising models, then there is some FPRAS that estimates any atomic marginal of any Ising model PP, namely ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\] for any variable xkx\\_{k}.\n\n###### Proof.\n\nAssume that there is some FPRAS that estimates the TV distance between any two Ising models.\nWe will show that there is some FPRAS that estimates the atomic marginals of any Ising model PP, namely ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\] for any variable xkx\\_{k}.\nLet Œµ\\\\varepsilon be the desired accuracy error of the FPTAS that estimates the atomic marginals of any Ising model PP.\n\nFix some Ising model PP with parameters {wi,j}i<j\\\\left\\\\{w\\_{i,j}\\\\right\\\\}\\_{i<j} and {hi}i\\\\left\\\\{h\\_{i}\\\\right\\\\}\\_{i}.\nWe shall first introduce a new dummy variable x0x\\_{0}.\nLet P0P\\_{0} be a new Ising model over x0,‚Ä¶,xnx\\_{0},\\\\dots,x\\_{n} with parameters {wi,j}i<j\\\\left\\\\{w\\_{i,j}\\\\right\\\\}\\_{i<j} and {hi}i\\\\left\\\\{h\\_{i}\\\\right\\\\}\\_{i} so that w0,i=0w\\_{0,i}=0 for all i>0i>0 and h0‚Üí‚àí‚àûh\\_{0}\\\\to-\\\\infty (that is, h0h\\_{0} is a small negative quantity which we will fix later).\nNote that under these conditions x0x\\_{0} is independent from every other node x1,‚Ä¶,xnx\\_{1},\\\\dots,x\\_{n}.\nMoreover,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùêèùê´P0\\[x0=1\\]\\\\displaystyle\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1\\\\right\\] | =‚àëx:x0=1P0‚Äã(x)\\\\displaystyle=\\\\sum\\_{x:x\\_{0}=1}P\\_{0}\\\\!\\\\left(x\\\\right) |  |\n|  |  | =‚àëx:x0=1exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)‚àëxexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\frac{\\\\sum\\_{x:x\\_{0}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right)}{\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right)} |  |\n|  |  | =‚àëx:x0=1exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+h0‚Äãx0+‚àëi>0hi‚Äãxi)‚àëxexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+h0‚Äãx0+‚àëi>0hi‚Äãxi)\\\\displaystyle=\\\\frac{\\\\sum\\_{x:x\\_{0}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+h\\_{0}x\\_{0}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)}{\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+h\\_{0}x\\_{0}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)} |  |\n|  |  | =‚àëx:x0=1exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+h0+‚àëi>0hi‚Äãxi)‚àëxexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+h0‚Äãx0+‚àëi>0hi‚Äãxi)\\\\displaystyle=\\\\frac{\\\\sum\\_{x:x\\_{0}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+h\\_{0}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)}{\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+h\\_{0}x\\_{0}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)} |  |\n|  |  | =exp‚Å°(h0)‚Äã‚àëx:x0=1exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëi>0hi‚Äãxi)‚àëxexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+h0‚Äãx0+‚àëi>0hi‚Äãxi)\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(h\\_{0}\\\\right)\\\\sum\\_{x:x\\_{0}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)}{\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+h\\_{0}x\\_{0}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)} |  |\n|  |  | =exp‚Å°(h0)‚Äã‚àëxexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëi>0hi‚Äãxi)‚àëxexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+h0‚Äãx0+‚àëi>0hi‚Äãxi).\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(h\\_{0}\\\\right)\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)}{\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+h\\_{0}x\\_{0}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)}. |  |\n\nLet now us define E‚Äã(x):=exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëi>0hi‚Äãxi)E\\\\!\\\\left(x\\\\right):=\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right) for all xx.\nWe have\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùêèùê´P0\\[x0=1\\]\\\\displaystyle\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1\\\\right\\] | =exp‚Å°(h0)‚Äã‚àëxE‚Äã(x)exp‚Å°(h0)‚Äã‚àëx:x0=1E‚Äã(x)+exp‚Å°(‚àíh0)‚Äã‚àëx:x0=‚àí1E‚Äã(x)\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(h\\_{0}\\\\right)\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)}{\\\\exp\\\\!\\\\left(h\\_{0}\\\\right)\\\\sum\\_{x:x\\_{0}=1}E\\\\!\\\\left(x\\\\right)+\\\\exp\\\\!\\\\left(-h\\_{0}\\\\right)\\\\sum\\_{x:x\\_{0}=-1}E\\\\!\\\\left(x\\\\right)} |  |\n|  |  | =exp‚Å°(h0)‚Äã‚àëxE‚Äã(x)exp‚Å°(h0)‚Äã‚àëxE‚Äã(x)+exp‚Å°(‚àíh0)‚Äã‚àëxE‚Äã(x)\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(h\\_{0}\\\\right)\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)}{\\\\exp\\\\!\\\\left(h\\_{0}\\\\right)\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)+\\\\exp\\\\!\\\\left(-h\\_{0}\\\\right)\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)} |  |\n|  |  | =exp‚Å°(2‚Äãh0)‚Äã‚àëxE‚Äã(x)exp‚Å°(2‚Äãh0)‚Äã‚àëxE‚Äã(x)+‚àëxE‚Äã(x)\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)}{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)+\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)} |  |\n|  |  | =exp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1.\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+1}. |  |\n\nWe shall now define another Ising model Q0Q\\_{0} over x0,‚Ä¶,xnx\\_{0},\\\\dots,x\\_{n} as follows.\nThe model Q0Q\\_{0} has parameters {wi,j‚Ä≤}i<j\\\\left\\\\{w\\_{i,j}^{\\\\prime}\\\\right\\\\}\\_{i<j} and {hi‚Ä≤}i\\\\left\\\\{h\\_{i}^{\\\\prime}\\\\right\\\\}\\_{i} so that wi,j‚Ä≤:=wi,jw\\_{i,j}^{\\\\prime}:=w\\_{i,j} if (i,j)‚â†(0,k)\\\\left(i,j\\\\right)\\\\neq\\\\left(0,k\\\\right) and w0,k‚Ä≤:=w0,k+Œ¥w\\_{0,k}^{\\\\prime}:=w\\_{0,k}+\\\\delta for some Œ¥>1\\\\delta>1, and hi‚Ä≤=hih\\_{i}^{\\\\prime}=h\\_{i} for all ii.\nWe have that for all x‚àà{‚àí1,1}nx\\\\in\\\\left\\\\{-1,1\\\\right\\\\}^{n} it is the case that\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Q0‚Äã(x)\\\\displaystyle Q\\_{0}\\\\!\\\\left(x\\\\right) | ‚àùexp‚Å°(‚àëi,jwi,j‚Ä≤‚Äãxi‚Äãxj+‚àëihi‚Ä≤‚Äãxi)\\\\displaystyle\\\\propto\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}^{\\\\prime}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}^{\\\\prime}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(‚àëi,jwi,j‚Ä≤‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}^{\\\\prime}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°((w0,k+Œ¥)‚Äãx0‚Äãxk+‚àë(i,j)‚â†(0,k)wi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(\\\\left(w\\_{0,k}+\\\\delta\\\\right)x\\_{0}x\\_{k}+\\\\sum\\_{\\\\left(i,j\\\\right)\\\\neq\\\\left(0,k\\\\right)}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(w0,k‚Äãx0‚Äãxk+Œ¥‚Äãx0‚Äãxk+‚àë(i,j)‚â†(0,k)wi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(w\\_{0,k}x\\_{0}x\\_{k}+\\\\delta x\\_{0}x\\_{k}+\\\\sum\\_{\\\\left(i,j\\\\right)\\\\neq\\\\left(0,k\\\\right)}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(Œ¥‚Äãx0‚Äãxk+‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(\\\\delta x\\_{0}x\\_{k}+\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(Œ¥‚Äãx0‚Äãxk)‚Äãexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(\\\\delta x\\_{0}x\\_{k}\\\\right)\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(Œ¥‚Äãx0‚Äãxk)‚ÄãP0‚Äã(x)‚ÄãZP0,\\\\displaystyle=\\\\exp\\\\!\\\\left(\\\\delta x\\_{0}x\\_{k}\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}, |  |\n\nwhereby ZP0Z\\_{P\\_{0}} is the partition function of P0P\\_{0}.\nIf x0‚Äãxk=1x\\_{0}x\\_{k}=1, then Q0‚Äã(x)‚àùexp‚Å°(Œ¥)‚ÄãP0‚Äã(x)Q\\_{0}\\\\!\\\\left(x\\\\right)\\\\propto\\\\exp\\\\!\\\\left(\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right); else Q0‚Äã(x)‚àùexp‚Å°(‚àíŒ¥)‚ÄãP0‚Äã(x)Q\\_{0}\\\\!\\\\left(x\\\\right)\\\\propto\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right).\nMoreover, for any xx such that x0‚Äãxk=1x\\_{0}x\\_{k}=1,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Q0‚Äã(x)\\\\displaystyle Q\\_{0}\\\\!\\\\left(x\\\\right) | =exp‚Å°(Œ¥)‚ÄãP0‚Äã(x)‚ÄãZP0ZQ0\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}} |  |\n|  |  | =exp‚Å°(Œ¥)‚ÄãP0‚Äã(x)‚ÄãZP0‚àëx:x0‚Äãxk=1exp‚Å°(Œ¥)‚ÄãP0‚Äã(x)‚ÄãZP0+‚àëx:x0‚Äãxk=‚àí1exp‚Å°(‚àíŒ¥)‚ÄãP0‚Äã(x)‚ÄãZP0\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}}{\\\\sum\\_{x:x\\_{0}x\\_{k}=1}\\\\exp\\\\!\\\\left(\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}+\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}} |  |\n|  |  | =P0‚Äã(x)‚àëx:x0‚Äãxk=1P0‚Äã(x)+exp‚Å°(‚àí2‚ÄãŒ¥)‚Äã‚àëx:x0‚Äãxk=‚àí1P0‚Äã(x)\\\\displaystyle=\\\\frac{P\\_{0}\\\\!\\\\left(x\\\\right)}{\\\\sum\\_{x:x\\_{0}x\\_{k}=1}P\\_{0}\\\\!\\\\left(x\\\\right)+\\\\exp\\\\!\\\\left(-2\\\\delta\\\\right)\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}P\\_{0}\\\\!\\\\left(x\\\\right)} |  |\n|  |  | ‚â•P0‚Äã(x)‚àëx:x0‚Äãxk=1P0‚Äã(x)+‚àëx:x0‚Äãxk=‚àí1P0‚Äã(x)\\\\displaystyle\\\\geq\\\\frac{P\\_{0}\\\\!\\\\left(x\\\\right)}{\\\\sum\\_{x:x\\_{0}x\\_{k}=1}P\\_{0}\\\\!\\\\left(x\\\\right)+\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}P\\_{0}\\\\!\\\\left(x\\\\right)} |  |\n|  |  | =P0‚Äã(x)‚àëxP0‚Äã(x)\\\\displaystyle=\\\\frac{P\\_{0}\\\\!\\\\left(x\\\\right)}{\\\\sum\\_{x}P\\_{0}\\\\!\\\\left(x\\\\right)} |  |\n|  |  | ‚â•P0‚Äã(x)\\\\displaystyle\\\\geq P\\_{0}(x) |  |\n\nwhere ZQ0Z\\_{Q\\_{0}} is the partition function of Q0{Q\\_{0}}.\nSimilarly, for any xx such that x0‚Äãxk=‚àí1x\\_{0}x\\_{k}=-1,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Q0‚Äã(x)\\\\displaystyle{Q\\_{0}}\\\\!\\\\left(x\\\\right) | =exp‚Å°(‚àíŒ¥)‚ÄãP0‚Äã(x)‚ÄãZP0ZQ0\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}} |  |\n|  |  | =exp‚Å°(‚àíŒ¥)‚ÄãP0‚Äã(x)‚ÄãZP0‚àëx:x0‚Äãxk=1exp‚Å°(Œ¥)‚ÄãP0‚Äã(x)‚ÄãZP0+‚àëx:x0‚Äãxk=‚àí1exp‚Å°(‚àíŒ¥)‚ÄãP0‚Äã(x)‚ÄãZP0\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}}{\\\\sum\\_{x:x\\_{0}x\\_{k}=1}\\\\exp\\\\!\\\\left(\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}+\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}} |  |\n|  |  | =P0‚Äã(x)‚àëx:x0‚Äãxk=1exp‚Å°(2‚ÄãŒ¥)‚ÄãP0‚Äã(x)+‚àëx:x0‚Äãxk=‚àí1P0‚Äã(x)\\\\displaystyle=\\\\frac{P\\_{0}\\\\!\\\\left(x\\\\right)}{\\\\sum\\_{x:x\\_{0}x\\_{k}=1}\\\\exp\\\\!\\\\left(2\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)+\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}P\\_{0}\\\\!\\\\left(x\\\\right)} |  |\n|  |  | <P0‚Äã(x)‚àëx:x0‚Äãxk=1P0‚Äã(x)+‚àëx:x0‚Äãxk=‚àí1P0‚Äã(x)\\\\displaystyle<\\\\frac{P\\_{0}\\\\!\\\\left(x\\\\right)}{\\\\sum\\_{x:x\\_{0}x\\_{k}=1}P\\_{0}\\\\!\\\\left(x\\\\right)+\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}P\\_{0}\\\\!\\\\left(x\\\\right)} |  |\n|  |  | =P0‚Äã(x).\\\\displaystyle=P\\_{0}(x). |  |\n\nThat is, P0‚Äã(x)‚â•Q0‚Äã(x)P\\_{0}\\\\!\\\\left(x\\\\right)\\\\geq{Q\\_{0}}\\\\!\\\\left(x\\\\right) if and only if x0‚Äãxk=‚àí1x\\_{0}x\\_{k}=-1.\nWe now have\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | dTV‚Äã(P0,Q0)\\\\displaystyle d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right) | =‚àëxmax‚Å°(0,P0‚Äã(x)‚àíQ0‚Äã(x))\\\\displaystyle=\\\\sum\\_{x}\\\\max\\\\!\\\\left(0,P\\_{0}\\\\!\\\\left(x\\\\right)-{Q\\_{0}}\\\\!\\\\left(x\\\\right)\\\\right) |  |\n|  |  | =‚àëx:P0‚Äã(x)‚â•Q0‚Äã(x)(P0‚Äã(x)‚àíQ0‚Äã(x))\\\\displaystyle=\\\\sum\\_{x:P\\_{0}\\\\left(x\\\\right)\\\\geq{Q\\_{0}}\\\\left(x\\\\right)}\\\\left(P\\_{0}\\\\!\\\\left(x\\\\right)-{Q\\_{0}}\\\\!\\\\left(x\\\\right)\\\\right) |  |\n|  |  | =‚àëx:x0‚Äãxk=‚àí1(P0‚Äã(x)‚àíQ0‚Äã(x))\\\\displaystyle=\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}\\\\left(P\\_{0}\\\\!\\\\left(x\\\\right)-{Q\\_{0}}\\\\!\\\\left(x\\\\right)\\\\right) |  |\n|  |  | =‚àëx:x0‚Äãxk=‚àí1P0‚Äã(x)‚àí‚àëx:x0‚Äãxk=‚àí1Q0‚Äã(x).\\\\displaystyle=\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}P\\_{0}\\\\!\\\\left(x\\\\right)-\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}{Q\\_{0}}\\\\!\\\\left(x\\\\right). |  |\n\nMoreover,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ‚àëx:x0‚Äãxk=‚àí1P0‚Äã(x)\\\\displaystyle\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}P\\_{0}\\\\!\\\\left(x\\\\right) | =ùêèùê´P0\\[x0‚Äãxk=‚àí1\\]\\\\displaystyle=\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}x\\_{k}=-1\\\\right\\] |  |\n|  |  | =ùêèùê´P0\\[x0=1,xk=‚àí1\\]+ùêèùê´P0\\[x0=‚àí1,xk=1\\]\\\\displaystyle=\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1,x\\_{k}=-1\\\\right\\]+\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=-1,x\\_{k}=1\\\\right\\] |  |\n|  |  | =ùêèùê´P0\\[x0=1\\]‚Äãùêèùê´P0\\[xk=‚àí1\\]+ùêèùê´P0\\[x0=‚àí1\\]‚Äãùêèùê´P0\\[xk=1\\]\\\\displaystyle=\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1\\\\right\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{k}=-1\\\\right\\]+\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=-1\\\\right\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\] |  |\n|  |  | =ùêèùê´P0\\[x0=1\\]‚Äãùêèùê´P\\[xk=‚àí1\\]+ùêèùê´P0\\[x0=‚àí1\\]‚Äãùêèùê´P\\[xk=1\\]\\\\displaystyle=\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1\\\\right\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=-1\\\\right\\]+\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=-1\\\\right\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\] |  |\n|  |  | =ùêèùê´P0\\[x0=1\\]+(1‚àí2‚Äãùêèùê´P0\\[x0=1\\])‚Äãùêèùê´P\\[xk=1\\]\\\\displaystyle=\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1\\\\right\\]+\\\\left(1-2\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1\\\\right\\]\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\] |  |\n|  |  | =exp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1+1‚àíexp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1‚Äãùêèùê´P\\[xk=1\\],\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+1}+\\\\frac{1-\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+1}\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\], |  |\n\nwhereby we have used the fact that ùêèùê´P0\\[xk=¬±1\\]=ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\]=\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\].\nThat is,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | dTV‚Äã(P0,Q0)=exp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1‚àí‚àëx:x0‚Äãxk=‚àí1Q0‚Äã(x)+1‚àíexp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1‚Äãùêèùê´P\\[xk=1\\].\\\\displaystyle d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right)=\\\\frac{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+1}-\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}{Q\\_{0}}\\\\!\\\\left(x\\\\right)+\\\\frac{1-\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+1}\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\]. |  | (2) |\n\nNote that\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | 0‚â§‚àëx:x0‚Äãxk=‚àí1Q0‚Äã(x)=‚àëx:x0‚Äãxk=‚àí1exp‚Å°(‚àíŒ¥)‚ÄãP0‚Äã(x)‚ÄãZP0ZQ0\\\\displaystyle 0\\\\leq\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}{Q\\_{0}}\\\\!\\\\left(x\\\\right)=\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}\\\\frac{\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}} | ‚â§exp‚Å°(‚àíŒ¥)‚ÄãZP0ZQ0.\\\\displaystyle\\\\leq\\\\frac{\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}}. |  |\n\nIntuitively, note that if (in the above) we set Œ¥‚Üí‚àû\\\\delta\\\\to\\\\infty and h0‚Üí‚àí‚àûh\\_{0}\\\\to-\\\\infty, then dTV‚Äã(P0,Q0)=ùêèùê´P\\[xk=1\\]d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right)=\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\], and an approximation of dTV‚Äã(P0,Q0)d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right) implies an approximation of ùêèùê´P\\[xk=1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\].\nNow we make this formal by finitely quantifying h0,Œ¥h\\_{0},\\\\delta.\n\nIt would suffice to show that\n\n|     |     |     |\n| --- | --- | --- |\n|  | \\|dTV‚Äã(P0,Q0)‚àíùêèùê´P\\[xk=1\\]\\|‚â§Œµ2‚ãÖùêèùê´P\\[xk=1\\].\\\\left\\|d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right)-\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\]\\\\right\\|\\\\leq\\\\frac{\\\\varepsilon}{2}\\\\cdot\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\]. |  |\n\nThen this could be combined with an Œµ2\\\\frac{\\\\varepsilon}{2}-multiplicative approximation of dTV‚Äã(P0,Q0)d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right) to yield the desired Œµ\\\\varepsilon-multiplicative approximation of ùêèùê´P\\[xk=1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\].\nBy [EquationÀú2](https://ar5iv.org/html/2412.10370#S4.E2 \"In 4.2 Reducing the Atomic Marginals to TV Distance ‚Ä£ 4 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\"),\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | \\|dTV‚Äã(P0,Q0)‚àíùêèùê´P\\[xk=1\\]\\|\\\\displaystyle\\\\left\\|d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right)-\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\]\\\\right\\| | ‚â§exp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1+exp‚Å°(‚àíŒ¥)‚ÄãZP0ZQ0+exp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1‚Äãùêèùê´P\\[xk=1\\]\\\\displaystyle\\\\leq\\\\frac{\\\\exp\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\left(2h\\_{0}\\\\right)+1}+\\\\frac{\\\\exp\\\\left(-\\\\delta\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}}+\\\\frac{\\\\exp\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\left(2h\\_{0}\\\\right)+1}\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\] |  |\n|  |  | ‚â§2‚Äãexp‚Å°(2‚Äãh0)+exp‚Å°(‚àíŒ¥)‚ÄãZP0ZQ0.\\\\displaystyle\\\\leq 2\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+\\\\frac{\\\\exp\\\\left(-\\\\delta\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}}. |  |\n\nLet W:=maxi,j‚Å°\\|wi,j\\|W:=\\\\max\\_{i,j}\\|w\\_{i,j}\\| and H:=maxi‚Å°\\|hi\\|H:=\\\\max\\_{i}\\|h\\_{i}\\|.\nThen for any xx,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùêèùê´P\\[xk=1\\]\\\\displaystyle\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\] | =‚àëx:xk=1exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)‚àëyexp‚Å°(‚àëi,jwi,j‚Äãyi‚Äãyj+‚àëihi‚Äãyi)\\\\displaystyle=\\\\sum\\_{x:x\\_{k}=1}\\\\frac{\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right)}{\\\\sum\\_{y}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}y\\_{i}y\\_{j}+\\\\sum\\_{i}h\\_{i}y\\_{i}\\\\right)} |  |\n|  |  | ‚â•2n‚àí1‚Äãexp‚Å°(‚àíW‚Äã(n+1)2‚àí(n+1)‚ÄãH)2n+1‚Äãexp‚Å°(W‚Äã(n+1)2+(n+1)‚ÄãH)\\\\displaystyle\\\\geq\\\\frac{2^{n-1}\\\\exp\\\\!\\\\left(-W\\\\left(n+1\\\\right)^{2}-\\\\left(n+1\\\\right)H\\\\right)}{2^{n+1}\\\\exp\\\\!\\\\left(W\\\\left(n+1\\\\right)^{2}+\\\\left(n+1\\\\right)H\\\\right)} |  |\n|  |  | =exp‚Å°(‚àíW‚Äã(n+1)2‚àí(n+1)‚ÄãH)4‚Äãexp‚Å°(W‚Äã(n+1)2+(n+1)‚ÄãH).\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(-W\\\\left(n+1\\\\right)^{2}-\\\\left(n+1\\\\right)H\\\\right)}{4\\\\exp\\\\!\\\\left(W\\\\left(n+1\\\\right)^{2}+\\\\left(n+1\\\\right)H\\\\right)}. |  |\n\nChoosing h0h\\_{0} and Œ¥\\\\delta such that\n\n|     |     |     |\n| --- | --- | --- |\n|  | max‚Å°(‚àíh0,Œ¥)=Œ©‚Äã(poly‚Äã(n,H,W,1/Œµ,ZP0/ZQ0))=Œ©‚Äã(poly‚Äã(n,H,W,1/Œµ))\\\\max\\\\!\\\\left(-h\\_{0},\\\\delta\\\\right)=\\\\Omega\\\\!\\\\left(\\\\textup{poly}\\\\!\\\\left(n,H,W,1/\\\\varepsilon,Z\\_{P\\_{0}}/{Z\\_{Q\\_{0}}}\\\\right)\\\\right)=\\\\Omega\\\\!\\\\left(\\\\textup{poly}\\\\!\\\\left(n,H,W,1/\\\\varepsilon\\\\right)\\\\right) |  |\n\n(note that ZP0/ZQ0Z\\_{P\\_{0}}/{Z\\_{Q\\_{0}}} can be bounded by some polynomial in n,H,W{n,H,W}), we may ensure the desired\n\n|     |     |     |\n| --- | --- | --- |\n|  | exp‚Å°(‚àíW‚Äã(n+1)2‚àí(n+1)‚ÄãH)4‚Äãexp‚Å°(W‚Äã(n+1)2+(n+1)‚ÄãH)‚â•2Œµ‚Äã(2‚Äãexp‚Å°(2‚Äãh0)+exp‚Å°(‚àíŒ¥)‚ÄãZP0ZQ0).\\\\frac{\\\\exp\\\\!\\\\left(-W\\\\left(n+1\\\\right)^{2}-\\\\left(n+1\\\\right)H\\\\right)}{4\\\\exp\\\\!\\\\left(W\\\\left(n+1\\\\right)^{2}+\\\\left(n+1\\\\right)H\\\\right)}\\\\geq\\\\frac{2}{\\\\varepsilon}\\\\left(2\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+\\\\frac{\\\\exp\\\\left(-\\\\delta\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}}\\\\right). |  |\n\nAn identical to the above argument can be employed to get a multiplicative approximation of ùêèùê´P\\[xk=‚àí1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=-1\\\\right\\] (by letting h0‚Üí‚àûh\\_{0}\\\\to\\\\infty above).\n\nSince dTV‚Äã(P0,Q0)d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right) multiplicatively approximates ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\], this is an approximation preserving reduction, as any multiplicative approximation of dTV‚Äã(P0,Q0)d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right) is a multiplicative approximation of ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\].\n‚àé\n\n### 4.3 Proof of [TheoremÀú2](https://ar5iv.org/html/2412.10370\\#Thmtheorem2 \"Theorem 2. ‚Ä£ 1.2 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\")\n\nTo prove [TheoremÀú2](https://ar5iv.org/html/2412.10370#Thmtheorem2 \"Theorem 2. ‚Ä£ 1.2 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\") we shall require the following result of \\[ [JS93](https://ar5iv.org/html/2412.10370#bib.bibx20 \"\")\\].\n\n###### Theorem 9(\\[ [JS93](https://ar5iv.org/html/2412.10370\\#bib.bibx20 \"\")\\]).\n\nIf ùñ≠ùñØ‚äàùñ±ùñØ\\\\mathsf{NP}\\\\not\\\\subseteq\\\\mathsf{RP}, then there is no FPRAS that estimates the partition function of any Ising model.\n\nWe now turn to the proof of [TheoremÀú2](https://ar5iv.org/html/2412.10370#Thmtheorem2 \"Theorem 2. ‚Ä£ 1.2 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\").\n\n###### Proof of [TheoremÀú2](https://ar5iv.org/html/2412.10370\\#Thmtheorem2 \"Theorem 2. ‚Ä£ 1.2 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\").\n\nBy [PropositionÀú7](https://ar5iv.org/html/2412.10370#Thmtheorem7 \"Proposition 7. ‚Ä£ 4.1 Reducing the Partition Function to Atomic Marginals ‚Ä£ 4 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\"), if there exists some FPRAS that estimates any atomic marginal of any Ising model, then there exists some FPRAS that estimates the partition function of any Ising model.\nBy [PropositionÀú8](https://ar5iv.org/html/2412.10370#Thmtheorem8 \"Proposition 8. ‚Ä£ 4.2 Reducing the Atomic Marginals to TV Distance ‚Ä£ 4 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\"), if there exists some FPRAS that estimates the TV distance between Ising models, then there exists some FPRAS that estimates any atomic marginal of any Ising model.\nThat is, if there exists some FPRAS that estimates the TV distance between Ising models, then there exists some FPRAS that estimates the partition function of any Ising model.\nBy [TheoremÀú9](https://ar5iv.org/html/2412.10370#Thmtheorem9 \"Theorem 9 ([JS93]). ‚Ä£ 4.3 Proof of TheoremÀú2 ‚Ä£ 4 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\"), if ùñ≠ùñØ‚äàùñ±ùñØ\\\\mathsf{NP}\\\\not\\\\subseteq\\\\mathsf{RP}, then there is no FPRAS that estimates the partition function of any Ising model.\nThat is, if ùñ≠ùñØ‚äàùñ±ùñØ\\\\mathsf{NP}\\\\not\\\\subseteq\\\\mathsf{RP}, then there is no FPRAS that estimates the TV distance between Ising models.\nThis concludes the proof.\n‚àé\n\n## 5 Discussion\n\nWe have shown how to efficiently check whether two mixtures of product distributions are equivalent or not.\nOne might wonder whether our ideas can be applied to check equivalence between mixtures of other, more expressive, kinds of distributions, such as Bayes nets.\n\nBayes nets constitute \\[ [Pea89](https://ar5iv.org/html/2412.10370#bib.bibx27 \"\")\\] a probabilistic graphical model, with numerous applications in machine learning and inference, that naturally generalize product distributions in that they allow for dependencies among different variables.\n\\[ [BGM+23](https://ar5iv.org/html/2412.10370#bib.bibx2 \"\")\\] showed that it is ùñ≠ùñØ\\\\mathsf{NP}-hard to decide whether the total variation distance between two Bayes nets PP and QQ is equal to 0 or not, so one cannot hope to extend our methods to testing equivalence between mixtures of Bayes net distributions (unless, of course, ùñØ=ùñ≠ùñØ\\\\mathsf{P}=\\\\mathsf{NP}.)\nCan our ideas be extended to testing equivalence between mixtures of some subclass of Bayes net distributions, such as Bayes net distributions whereby their underlying graph is a tree or has small treewidth?\n\nOur second result, namely the hardness of approximating the TV distance between Ising models, helps us further understand the intricacies of the Ising model and the consequences of complexity-theoretic conjectures such as ùñ≠ùñØ‚äàùñ±ùñØ\\\\mathsf{NP}\\\\not\\\\subseteq\\\\mathsf{RP}.\nCan we extend this complexity-theoretic hardness of approximation to other classes of probability distributions, such as factor graphs or general undirected probabilistic graphical models?\n\n## Acknowledgements\n\nDesCartes:\nThis research is supported by the National Research Foundation, Prime Minister‚Äôs Office, Singapore under its Campus for Research Excellence and Technological Enterprise (CREATE) programme.\nThis work was supported in part by National Research Foundation Singapore under its NRF Fellowship Programme \\[NRF-NRFFAI1-2019-0004\\] and an Amazon Research Award.\nWe acknowledge the support of the Natural Sciences and Engineering Research Council of Canada (NSERC), \\[funding reference number RGPIN-2024-05956\\].\nThe work of AB was supported in part by National Research Foundation Singapore under its NRF Fellowship Programme (NRF-NRFFAI-2019-0002) and an Amazon Faculty Research Award.\nThe work of SG was supported in part by the SERB award CRG/2022/007985.\nPavan‚Äôs work is partly supported by NSF awards 2130536, 2342245, 2413849.\nVinod‚Äôs work is partly supported by NSF awards 2130608, 2342244, 2413848.\n\n## References\n\n- \\[AB09\\]\nSanjeev Arora and Boaz Barak.\n\nComputational Complexity - A Modern Approach.\n\nCambridge University Press, 2009.\n\n- \\[BGM+23\\]\nArnab Bhattacharyya, Sutanu Gayen, Kuldeep S. Meel, Dimitrios Myrisiotis, A. Pavan, and N. V. Vinodchandran.\n\nOn approximating total variation distance.\n\nIn Proceedings of IJCAI, 2023.\n\n- \\[BGM+24\\]\nArnab Bhattacharyya, Sutanu Gayen, Kuldeep S. Meel, Dimitrios Myrisiotis, A. Pavan, and N. V. Vinodchandran.\n\nTotal variation distance meets probabilistic inference.\n\nIn Forty-first International Conference on Machine Learning, ICML 2024, Vienna, Austria, July 21-27, 2024. OpenReview.net, 2024.\n\n- \\[BGMV20\\]\nArnab Bhattacharyya, Sutanu Gayen, Kuldeep S. Meel, and N. V. Vinodchandran.\n\nEfficient distance approximation for structured high-dimensional distributions via learning.\n\nIn Proc. of NeurIPS, 2020.\n\n- \\[Cip87\\]\nBarry A. Cipra.\n\nAn introduction to the Ising model.\n\nAmerican Mathematical Monthly, 94:937‚Äì959, 1987.\n\n- \\[CMR07\\]\nCorinna Cortes, Mehryar Mohri, and Ashish Rastogi.\n\nLp{L}\\_{p} distance and equivalence of probabilistic automata.\n\nInt. J. Found. Comput. Sci., 18(4):761‚Äì779, 2007.\n\n- \\[CT06\\]\nThomas M. Cover and Joy A. Thomas.\n\nElements of information theory (2. ed.).\n\nWiley, 2006.\n\n- \\[DGPV20\\]\nPeter Dixon, Sutanu Gayen, Aduri Pavan, and N. V. Vinodchandran.\n\nPerfect zero knowledge: New upperbounds and relativized separations.\n\nIn Rafael Pass and Krzysztof Pietrzak, editors, Proc. of TCC, volume 12550 of Lecture Notes in Computer Science, pages 684‚Äì704. Springer, 2020.\n\n- \\[Dwo06\\]\nCynthia Dwork.\n\nDifferential privacy.\n\nIn Michele Bugliesi, Bart Preneel, Vladimiro Sassone, and Ingo Wegener, editors, Automata, Languages and Programming, 33rd International Colloquium, ICALP 2006, Venice, Italy, July 10-14, 2006, Proceedings, Part II, volume 4052 of Lecture Notes in Computer Science, pages 1‚Äì12. Springer, 2006.\n\n- \\[FGJW23\\]\nWeiming Feng, Heng Guo, Mark Jerrum, and Jiaheng Wang.\n\nA simple polynomial-time approximation algorithm for the total variation distance between two product distributions.\n\nTheoretiCS, 2, 2023.\n\n- \\[Fis66\\]\nMichael E. Fisher.\n\nOn the Dimer Solution of Planar Ising Models.\n\nJournal of Mathematical Physics, 7(10):1776‚Äì1781, 10 1966.\n\n- \\[FLL24\\]\nWeiming Feng, Liqiang Liu, and Tianren Liu.\n\nOn deterministically approximating total variation distance.\n\nIn Proceedings of SODA, 2024.\n\n- \\[FM99\\]\nYoav Freund and Yishay Mansour.\n\nEstimating a mixture of two product distributions.\n\nIn Proceedings of COLT, 1999.\n\n- \\[GJM+23\\]\nSpencer L. Gordon, Erik Jahn, Bijan Mazaheri, Yuval Rabani, and Leonard J. Schulman.\n\nIdentification of mixtures of discrete product distributions in near-optimal sample and time complexity.\n\nCoRR, abs/2309.13993, 2023.\n\n- \\[GMRS21\\]\nSpencer Gordon, Bijan H. Mazaheri, Yuval Rabani, and Leonard J. Schulman.\n\nSource identification for mixtures of product distributions.\n\nIn Conference on Learning Theory, COLT, 2021.\n\n- \\[GS22\\]\nSpencer L. Gordon and Leonard J. Schulman.\n\nHadamard extensions and the identification of mixtures of product distributions.\n\nIEEE Trans. Inf. Theory, 68(6):4085‚Äì4089, 2022.\n\n- \\[GSV99\\]\nOded Goldreich, Amit Sahai, and Salil P. Vadhan.\n\nCan statistical zero knowledge be made non-interactive? or On the relationship of SZK and NISZK.\n\nIn Proc. of CRYPTO, pages 467‚Äì484, 1999.\n\n- \\[Isi25\\]\nErnst Ising.\n\nBeitrag zur theorie des ferromagnetismus.\n\nZeitschrift f√ºr Physik, 31:253‚Äì258, 1925.\n\n- \\[Ist00\\]\nSorin Istrail.\n\nStatistical mechanics, three-dimensionality and NP-completeness: I. universality of intracatability for the partition function of the Ising model across non-planar surfaces (extended abstract).\n\nIn Proceedings of the Thirty-Second Annual ACM Symposium on Theory of Computing, STOC ‚Äô00, page 87‚Äì96, New York, NY, USA, 2000. Association for Computing Machinery.\n\n- \\[JS93\\]\nMark Jerrum and Alistair Sinclair.\n\nPolynomial-time approximation algorithms for the Ising model.\n\nSIAM J. Comput., 22(5):1087‚Äì1116, 1993.\n\n- \\[Kas63\\]\nP. W. Kasteleyn.\n\nDimer Statistics and Phase Transitions.\n\nJournal of Mathematical Physics, 4(2):287‚Äì293, 02 1963.\n\n- \\[Kie18\\]\nStefan Kiefer.\n\nOn computing the total variation distance of hidden Markov models.\n\nIn Proc. of ICALP, pages 130:1‚Äì130:13, 2018.\n\n- \\[Len20\\]\nW Lenz.\n\nBeitrag zum Verst√§ndnis der magnetischen Erscheinungen in festen K√∂rpern.\n\nZ. Phys., 21:613‚Äì615, 1920.\n\n- \\[LP02\\]\nRune B. Lyngs√∏ and Christian N. S. Pedersen.\n\nThe consensus string problem and the complexity of comparing hidden Markov models.\n\nJ. Comput. Syst. Sci., 65(3):545‚Äì569, 2002.\n\n- \\[Mal15\\]\nLior Malka.\n\nHow to achieve perfect simulation and a complete problem for non-interactive perfect zero-knowledge.\n\nJ. Cryptol., 28(3):533‚Äì550, 2015.\n\n- \\[MU05\\]\nMichael Mitzenmacher and Eli Upfal.\n\nProbability and Computing: Randomized Algorithms and Probabilistic Analysis.\n\nCambridge University Press, 2005.\n\n- \\[Pea89\\]\nJudea Pearl.\n\nProbabilistic reasoning in intelligent systems - networks of plausible inference.\n\nMorgan Kaufmann series in representation and reasoning. Morgan Kaufmann, 1989.\n\n- \\[PM21\\]\nYash Pote and Kuldeep S. Meel.\n\nTesting probabilistic circuits.\n\nIn Proc. of NeurIPS, 2021.\n\n- \\[SB14\\]\nShai Shalev-Shwartz and Shai Ben-David.\n\nUnderstanding Machine Learning - From Theory to Algorithms.\n\nCambridge University Press, 2014.\n\n- \\[Sti95\\]\nDouglas R. Stinson.\n\nCryptography - theory and practice.\n\nDiscrete mathematics and its applications series. CRC Press, 1995.\n\n- \\[SV03\\]\nAmit Sahai and Salil P. Vadhan.\n\nA complete problem for statistical zero knowledge.\n\nJ. ACM, 50(2):196‚Äì249, 2003.\n\n- \\[Vad12\\]\nSalil P. Vadhan.\n\nPseudorandomness.\n\nFound. Trends Theor. Comput. Sci., 7(1-3):1‚Äì336, 2012.\n\n- \\[Wel93\\]\nDominic Welsh.\n\nComplexity: Knots, Colourings and Counting.\n\nLondon Mathematical Society Lecture Note Series. Cambridge University Press, 1993.\n\n\n[‚óÑ](https://ar5iv.org/html/2412.10369) [![ar5iv homepage](https://ar5iv.org/assets/ar5iv.png)](https://ar5iv.org/) [Feeling\\\\\n\\\\\nlucky?](https://ar5iv.org/feeling_lucky) [Conversion\\\\\n\\\\\nreport](https://ar5iv.org/log/2412.10370) [Report\\\\\n\\\\\nan issue](https://github.com/dginev/ar5iv/issues/new?template=improve-article--arxiv-id-.md&title=Improve+article+2412.10370) [View original\\\\\n\\\\\non arXiv](https://arxiv.org/abs/2412.10370) [‚ñ∫](https://ar5iv.org/html/2412.10371)",
  "sections": {
    "1 Introduction": {
      "content": "The total variation (TV) distance between distributions PP and QQ over a common sample space DD, denoted by dTV‚Äã(P,Q)d\\_{\\\\mathrm{TV}}(P,Q), is defined as\n\n|     |     |     |\n| --- | --- | --- |\n|  | dTV‚Äã(P,Q):=maxS‚äÜD‚Å°(P‚Äã(S)‚àíQ‚Äã(S))=12‚Äã‚àëx‚ààD\\|P‚Äã(x)‚àíQ‚Äã(x)\\|=‚àëx‚ààDmax‚Å°(0,P‚Äã(x)‚àíQ‚Äã(x)).d\\_{\\\\mathrm{TV}}(P,Q):=\\\\max\\_{S\\\\subseteq D}\\\\!\\\\left(P(S)-Q(S)\\\\right)=\\\\frac{1}{2}\\\\sum\\_{x\\\\in D}\\|P(x)-Q(x)\\|=\\\\sum\\_{x\\\\in D}\\\\max\\\\!\\\\left(0,P(x)-Q(x)\\\\right). |  |\n\nThe TV distance satisfies many basic properties, making it a versatile and fundamental measure for quantifying the dissimilarity between probability distributions.\nFirst, it has an explicit probabilistic interpretation:\nThe TV distance between two distributions is the maximum gap between the probabilities assigned to a single event by the two distributions.\nSecond, it satisfies many mathematically desirable properties:\nIt is bounded and lies in \\[0,1\\]\\[0,1\\], it is a metric, and it is invariant with respect to bijections.\nThird, it satisfies some interesting composability property.\nGiven f‚Äã(g1,g2,‚Ä¶,gn)f(g\\_{1},g\\_{2},\\\\dots,g\\_{n}), suppose that we replace g2g\\_{2} with g2‚Ä≤g^{\\\\prime}\\_{2} such that dTV‚Äã(g2,g2‚Ä≤)‚â§Œµd\\_{\\\\mathrm{TV}}(g\\_{2},g^{\\\\prime}\\_{2})\\\\leq\\\\varepsilon.\nThen the TV distance between f‚Äã(g1,g2,‚Ä¶,gn)f(g\\_{1},g\\_{2},\\\\dots,g\\_{n}) and f‚Äã(g1,g2‚Ä≤,‚Ä¶,gn)f(g\\_{1},g^{\\\\prime}\\_{2},\\\\dots,g\\_{n}) is at most Œµ\\\\varepsilon.\nBecause of these reasons, the total variation distance is a central distance measure employed in a wide range of areas including probability and statistics \\[ [MU05])\\], machine learning \\[ [SB14])\\], and information theory \\[ [CT06])\\], cryptography \\[ [Sti95])\\], data privacy \\[ [Dwo06])\\], and pseudorandomness \\[ [Vad12])\\].\n\nLately, the computational aspects of TV distance have attracted a lot of attention.\n\\[ [SV03])\\] established, in a seminal work, that additively approximating the TV distance between two distributions that are samplable by Boolean circuits is hard for ùñ≤ùñπùñ™\\\\mathsf{SZK} (Statistical Zero Knowledge).\nThe complexity class ùñ≤ùñπùñ™\\\\mathsf{SZK} is fundamental to cryptography and is believed to be computationally hard.\nSubsequent works captured variations of this theme \\[ [GSV99]), [Mal15]), [DGPV20])\\]:\nFor example, \\[ [GSV99])\\] showed that the problem of deciding whether a distribution samplable by a Boolean circuit is close or far from the uniform distribution is complete for ùñ≠ùñ®ùñ≤ùñπùñ™\\\\mathsf{NISZK} (Non-Interactive Statistical Zero Knowledge).\nMoreover, \\[ [CMR07]), [LP02]), [Kie18])\\] showed that it is undecidable to check whether the TV distance between two hidden Markov models is greater than a threshold or not, and that it is #‚ÄãùñØ\\\\#\\\\mathsf{P}-hard to additively approximate it.\nFinally, \\[ [BGM+23])\\] showed that (a)(a) exactly computing the TV distance between product distributions is #‚ÄãùñØ\\\\#\\\\mathsf{P}-complete, and (b)(b) multiplicatively approximating the TV distance between Bayes nets is ùñ≠ùñØ\\\\mathsf{NP}-hard.\n\nOn an algorithmic note, \\[ [BGMV20])\\] designed efficient algorithms to additively approximate the TV distance between distributions efficiently samplable and efficiently computable (including the case of _ferromagnetic_ Ising models).\nIn particular, they designed efficient algorithms for additively approximating the TV distance of structured high dimensional distributions such as Bayesian networks, Ising models, and multivariate Gaussians.\nIn a similar vein, \\[ [PM21])\\] studied a related property testing variant of TV distance for distributions encoded by circuits.\nMultiplicative approximation of TV distance has received less attention compared to additive approximation.\nRecently, \\[ [BGM+23])\\] gave an FPTAS for estimating the TV distance between an arbitrary product distribution and a product distribution with a bounded number of distinct marginals.\n\\[ [FGJW23])\\] designed an FPRAS for multiplicatively approximating the TV distance between two arbitrary product distributions and \\[ [FLL24])\\] gave an FPTAS for the same task.\nFinally, \\[ [BGM+24])\\] gave an FPRAS for estimating the TV distance between Bayes nets of small treewidth.\n\nIn this paper we address some previously unexplored (or underexplored) computational aspects of total variation distance relating to mixtures of product distributions and Ising models.\n\n### 1.1 Equivalence Checking for Mixtures of Product Distributions\n\nMixtures of product distributions constitute a natural and important class of distributions that have been studied in the mathematics and computer science literature.\nFor instance, it is a standard observation that any distribution can be described by some (possibly large) mixture of product distributions (see [Àú4]Observation 4. ‚Ä£ 2 Preliminaries ‚Ä£ Computational Explorations of Total Variation Distance\")).\n\n\\[ [FM99])\\] gave an efficient algorithm for learning a mixture of two product distributions over the Boolean domain.\nAs part of their analysis, they showed that given two mixtures of two product distributions, their KL divergence can be upper bounded by that of the components and a certain distance between the mixture coefficients.\nHowever, this upper bound does not lead to an equivalence checking algorithm.\n\nA related problem in machine learning is source identification, whereby one is asked to identify the source parameters of a distribution.\n\\[ [GMRS21]), [GS22]), [GJM+23])\\] give algorithms for source identification of a mixture of kk product distributions on nn bits, when given as input approximate values of multilinear moments.\n\nWe focus on the equivalence checking problem regarding mixtures of product distributions.\nNote that while it is easy to check whether two product distributions are equivalent, that is, by checking whether their respective Bernoulli parameters are equal, it is not clear how to do so for the case of mixtures of product distributions.\nThis is so, because there are mixtures of product distributions that are equal (as distributions) but different sets of Bernoulli parameters describe them.\nFor example, consider the case where we have two mixtures over one bit, namely P=1‚ãÖP1+0‚ãÖP2P=1\\\\cdot P\\_{1}+0\\\\cdot P\\_{2} and Q=12‚ãÖQ1+12‚ãÖQ2Q=\\\\frac{1}{2}\\\\cdot Q\\_{1}+\\\\frac{1}{2}\\\\cdot Q\\_{2}, where P1=P2=Bern‚Äã(12)P\\_{1}=P\\_{2}=\\\\mathrm{Bern}(\\\\frac{1}{2}) while Q1=Bern‚Äã(13)Q\\_{1}=\\\\mathrm{Bern}(\\\\frac{1}{3}) and Q2=Bern‚Äã(23)Q\\_{2}=\\\\mathrm{Bern}(\\\\frac{2}{3}).\nIn this case, P=Q=Bern‚Äã(12)P=Q=\\\\mathrm{Bern}(\\\\frac{1}{2}), but the parameters of PP and QQ are different.\n\nWe present a simple deterministic polynomial-time algorithm for checking equivalence between mixtures of product distributions.\n\nLet us first formally define mixtures of product distributions.\nLet w1,‚Ä¶,wkw\\_{1},\\\\dots,w\\_{k} be real numbers (weights) such that 0‚â§wi‚â§10\\\\leq w\\_{i}\\\\leq 1 for all 1‚â§i‚â§k1\\\\leq i\\\\leq k, ‚àëi=1kwi=1\\\\sum\\_{i=1}^{k}w\\_{i}=1, and P1,‚Ä¶,PkP\\_{1},\\\\dots,P\\_{k} are nn-dimensional product distributions over an alphabet Œ£\\\\Sigma.\nThe distribution PP specified by the tuple (w1,‚Ä¶,wk,P1,‚Ä¶,Pk)(w\\_{1},\\\\dots,w\\_{k},P\\_{1},\\\\dots,P\\_{k}) is a mixture of products if for all x‚ààŒ£nx\\\\in\\\\Sigma^{n} it is the case that\nP‚Äã(x)=‚àëi=1kwi‚ÄãPi‚Äã(x)P\\\\!\\\\left(x\\\\right)=\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}\\\\!\\\\left(x\\\\right).\nFor a distribution PP, we denote by P‚â§iP^{\\\\leq i} its marginal on the first ii variables.\n\nWe may now state our first main result.\n\n###### Theorem 1.\n\nThere is a deterministic algorithm EE such that, given two mixtures of product distributions PP and QQ, specified by (w1,‚Ä¶,wk,P1,‚Ä¶,Pk)(w\\_{1},\\\\dots,w\\_{k},P\\_{1},\\\\dots,P\\_{k}) and (v1,‚Ä¶,vk,Q1,‚Ä¶,Qk)(v\\_{1},\\\\dots,v\\_{k},Q\\_{1},\\\\dots,Q\\_{k}), respectively, decides whether P=QP=Q or not.\nMoreover, if P‚â†QP\\\\neq Q, then EE outputs some x‚ààŒ£ix\\\\in\\\\Sigma^{i} (with i‚â§ni\\\\leq n) such that P‚â§i‚Äã(x)‚â†Q‚â§i‚Äã(x)P^{\\\\leq i}\\\\!\\\\left(x\\\\right)\\\\neq Q^{\\\\leq i}\\\\!\\\\left(x\\\\right).\nThe running time of EE is O‚Äã(n‚Äãk4‚Äã\\|Œ£\\|4)O(nk^{4}\\|\\\\Sigma\\|^{4}).\n\n(Note that the algorithm outlined in [TheoremÀú1]Theorem 1. ‚Ä£ 1.1 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\") has input size Œ©‚Äã(k‚Äãn‚Äã\\|Œ£\\|)\\\\Omega\\\\!\\\\left(kn\\\\left\\|\\\\Sigma\\\\right\\|\\\\right).)\nThe primary conceptual contribution of our work is a connection between equivalence checking for mixtures of distributions and basis construction over appropriately chosen vector space.\nThe connection lends itself to a construction that makes both the algorithm and the proof accessible to undergraduates.\n\n### 1.2 Hardness of Approximating Total Variation Distance Between Ising Models\n\nThe Ising model \\[ [Isi25]), [Len20])\\], originally developed to describe ferromagnetism in statistical mechanics, serves as a cornerstone in the study of phase transitions and critical phenomena.\nIt consists of discrete variables, known as spins, which can take values of either +1+1 or ‚àí1-1.\nThese spins are arranged on a lattice, and their interactions with nearest neighbors lead to a rich tapestry of behavior, including spontaneous magnetization and phase transitions at critical temperatures.\n\nOne of the most fascinating aspects of the Ising model is its ability to illustrate complex systems using simple rules.\nFor instance, in 2D, it exhibits a second-order phase transition at a critical temperature, where the system changes from a disordered state to an ordered state as temperature decreases.\nThis model has been extensively studied, leading to profound insights not only in physics but also in fields such as biology, sociology, and computer science.\nFor more information, the reader is invited to check the survey by Cipra \\[ [Cip87])\\].\n\nOn another note, the computational study of the Ising model has become increasingly relevant.\nWith its relatively simple structure‚Äîinteracting binary spins on a lattice, the Ising model serves as an ideal platform for exploring computational techniques ranging from Monte Carlo simulations to mean-field approximations.\nMonte Carlo methods, in particular, are widely used to investigate the thermodynamic properties of the Ising model, as they allow for efficient sampling of spin configurations at various temperatures, enabling the computation of quantities like magnetization and susceptibility.\n\nSome notable algorithmic results along these lines are the ones by \\[ [Kas63])\\] and \\[ [Fis66])\\], whereby they showed that the evaluation of the partition function for planar Ising models can be reduced to some appropriate determinant computations.\nMoreover, \\[ [JS93])\\] devised an efficient Monte Carlo approximation algorithm for estimating the partition function of arbitrary ferromagnetic (whereby all wi,jw\\_{i,j}‚Äôs are positive) Ising models.\n\nOn the other hand, there are some works pertaining to the intractability of computing various quantities of interest regarding Ising models \\[ [Wel93])\\], such as the partition function outlined above.\nFor example, \\[ [JS93])\\] show that unless ùñ≠ùñØ=ùñ±ùñØ\\\\mathsf{NP}=\\\\mathsf{RP}, there is no fully polynomial-time randomized approximation scheme (FPRAS) to estimate the partition function of arbitrary Ising models.\nMoreover, \\[ [Ist00])\\] proves that computing the partition function (for various kinds of Ising models) is ùñ≠ùñØ\\\\mathsf{NP}-complete.\n\nThe second part of our work falls in this latter category.\nLet us first fix some notation.\nWe focus on Ising models PP such that for all x‚àà{‚àí1,1}nx\\\\in\\\\left\\\\{-1,1\\\\right\\\\}^{n} it is the case that the probability that the underlying system of spins assumes the configuration xx is\n\n|     |     |     |\n| --- | --- | --- |\n|  | P‚Äã(x)=1Z‚Äãexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)‚àùexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi),P\\\\!\\\\left(x\\\\right)=\\\\frac{1}{Z}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right)\\\\propto\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right), |  |\n\nwhereby\nZ:=‚àëyexp‚Å°(‚àëi,jwi,j‚Äãyi‚Äãyj+‚àëihi‚Äãyi)Z:=\\\\sum\\_{y}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}y\\_{i}y\\_{j}+\\\\sum\\_{i}h\\_{i}y\\_{i}\\\\right)\nis the partition function of PP, and {wi,j}i<j\\\\left\\\\{w\\_{i,j}\\\\right\\\\}\\_{i<j} and {hi}i\\\\left\\\\{h\\_{i}\\\\right\\\\}\\_{i} are the parameters of the system.\n\nWe prove that it is hard to estimate the TV distance between Ising models under the very mild complexity-theoretic assumption ùñ≠ùñØ‚äàùñ±ùñØ\\\\mathsf{NP}\\\\not\\\\subseteq\\\\mathsf{RP}, which states that Boolean formula satisfiability (SAT\\\\mathrm{SAT}) does not admit any one-sided-error randomized polynomial-time algorithm, that is, a randomized polynomial-time algorithm that may output a false positive answer with small probability \\[ [AB09])\\].\n\n###### Theorem 2.\n\nIf ùñ≠ùñØ‚äàùñ±ùñØ\\\\mathsf{NP}\\\\not\\\\subseteq\\\\mathsf{RP}, then there is no FPRAS that estimates the TV distance between any two Ising models.\n\nOur proof draws on the hardness result of \\[ [JS93])\\], and shows that the partition function of Ising models can be reduced to the TV distance between Ising models, by a simple efficient _approximation preserving_ reduction.\nThe main ingredients of this reduction are as follows.\nFirst, we prove that estimating the partition function of any Ising model reduces to estimating any atomic marginal the form ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\] for any variable xkx\\_{k} and any Ising model PP (see [PropositionÀú7]Proposition 7. ‚Ä£ 4.1 Reducing the Partition Function to Atomic Marginals ‚Ä£ 4 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\")).\nThen we show that estimating any atomic marginal the form ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\] for any variable xkx\\_{k} and any Ising model PP, can be reduced to estimating the TV distance between the Ising models P,QP,Q, whereby QQ depends on PP (see [PropositionÀú8]Proposition 8. ‚Ä£ 4.2 Reducing the Atomic Marginals to TV Distance ‚Ä£ 4 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\")).\n\n### 1.3 Paper Organization\n\nWe give some preliminaries in [SectionÀú2]Preliminaries ‚Ä£ Computational Explorations of Total Variation Distance\").\nWe prove [TheoremÀú1]Theorem 1. ‚Ä£ 1.1 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\") in [SectionÀú3]Equivalence Checking for Mixtures of Product Distributions ‚Ä£ Computational Explorations of Total Variation Distance\") and [TheoremÀú2]Theorem 2. ‚Ä£ 1.2 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\") in [SectionÀú4]Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\").\nWe conclude in [SectionÀú5]Discussion ‚Ä£ Computational Explorations of Total Variation Distance\") with some interesting open problems.",
      "citations": []
    },
    "2 Preliminaries": {
      "content": "We require the following folklore result, which is an application of Gaussian elimination.\n\n###### Proposition 3.\n\nThere is a deterministic algorithm GG that gets as input a set of vectors VV, and outputs a maximum-size subset S‚äÜVS\\\\subseteq V of linearly independent vectors.\nThe running time of GG is O‚Äã(\\|V\\|4)O\\\\!\\\\left(\\\\left\\|V\\\\right\\|^{4}\\\\right).\n\nAn nn-dimensional product distribution RR over an alphabet Œ£\\\\Sigma is described by the n‚Äã\\|Œ£\\|n\\\\left\\|\\\\Sigma\\\\right\\| parameters\n\n|     |     |     |\n| --- | --- | --- |\n|  | {ùêèùê´R\\[Xi=y\\]}i‚àà\\[n\\],y‚ààŒ£so thatR‚Äã(x)=‚àèi=1nùêèùê´R\\[Xi=xi\\]for all x‚ààŒ£n.\\\\left\\\\{\\\\operatorname\\*{\\\\bf Pr}\\_{R}\\\\!\\\\left\\[X\\_{i}=y\\\\right\\]\\\\right\\\\}\\_{\\\\begin{subarray}{c}i\\\\in\\[n\\],\\\\\\<br>y\\\\in\\\\Sigma\\\\end{subarray}}\\\\qquad\\\\text{so that}\\\\qquad R\\\\!\\\\left(x\\\\right)=\\\\prod\\_{i=1}^{n}\\\\operatorname\\*{\\\\bf Pr}\\_{R}\\\\!\\\\left\\[X\\_{i}=x\\_{i}\\\\right\\]\\\\qquad\\\\text{for all $x\\\\in\\\\Sigma^{n}$.} |  |\n\nFor nn-dimensional product distribution RR over an alphabet Œ£\\\\Sigma, we denote its marginal over the first 1‚â§j‚â§n1\\\\leq j\\\\leq n coordinates by R‚â§jR^{\\\\leq j}.\nNote that for any x‚ààŒ£jx\\\\in\\\\Sigma^{j} we have\nR‚â§j‚Äã(x)=‚àèi=1jùêèùê´R\\[Xi=xi\\].R^{\\\\leq j}\\\\!\\\\left(x\\\\right)=\\\\prod\\_{i=1}^{j}\\\\operatorname\\*{\\\\bf Pr}\\_{R}\\\\!\\\\left\\[X\\_{i}=x\\_{i}\\\\right\\].\n\nWe require the following observation, regarding the expressibility of mixtures of product distributions.\n\n###### Observation 4.\n\nLet DD be a distribution over Œ£n\\\\Sigma^{n} for some alphabet Œ£\\\\Sigma.\nThen for k:=\\|Œ£n\\|k:=\\\\left\\|\\\\Sigma^{n}\\\\right\\| there exists a mixture of product distributions (w1,‚Ä¶,wk,P1,‚Ä¶,Pk)(w\\_{1},\\\\dots,w\\_{k},P\\_{1},\\\\dots,P\\_{k}) over Œ£n\\\\Sigma^{n} such that for all x‚ààŒ£nx\\\\in\\\\Sigma^{n} it is the case that\n\n|     |     |     |\n| --- | --- | --- |\n|  | D‚Äã(x)=‚àëi=1kwi‚ÄãPi‚Äã(x).D\\\\!\\\\left(x\\\\right)=\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}\\\\!\\\\left(x\\\\right). |  |\n\n###### Proof.\n\nLet x1,‚Ä¶,xkx\\_{1},\\\\dots,x\\_{k} be the elements of Œ£n\\\\Sigma^{n}.\nFor all 1‚â§i‚â§k1\\\\leq i\\\\leq k, let PiP\\_{i} be a product distribution on nn variables such that Pi‚Äã(y)=1P\\_{i}\\\\!\\\\left(y\\\\right)=1 if y=xiy=x\\_{i}, otherwise, Pi‚Äã(y)=0P\\_{i}\\\\!\\\\left(y\\\\right)=0.\nWe can construct such a product distribution PiP\\_{i} as follows.\nFirst, note that Pi‚Äã(y)=‚àèj=1npi,j‚Äã(yj)P\\_{i}\\\\!\\\\left(y\\\\right)=\\\\prod\\_{j=1}^{n}p\\_{i,j}\\\\!\\\\left(y\\_{j}\\\\right), whereby pi,j‚Äã(z)p\\_{i,j}\\\\!\\\\left(z\\\\right) is the probability that the jj-th coordinate of PiP\\_{i} takes the value z‚ààŒ£z\\\\in\\\\Sigma.\nLet xi=xi,1,‚Ä¶,xi,nx\\_{i}=x\\_{i,1},\\\\dots,x\\_{i,n}, whereby xi,j‚ààŒ£x\\_{i,j}\\\\in\\\\Sigma.\nThen for all jj define pi,j‚Äã(z):=1p\\_{i,j}\\\\!\\\\left(z\\\\right):=1 if z=xi,jz=x\\_{i,j}, otherwise, pi,j‚Äã(z):=0p\\_{i,j}(z):=0.\nMoreover, let wi:=D‚Äã(xi)w\\_{i}:=D\\\\!\\\\left(x\\_{i}\\\\right) and note that ‚àëi=1kwi=1\\\\sum\\_{i=1}^{k}w\\_{i}=1.\nThen the desired equality follows by straightforward calculations.\n‚àé\n\nWe shall also require the following notion of approximation algorithm.\n\n###### Definition 5.\n\nA function f:{0,1}‚àó‚Üí‚Ñùf:\\\\left\\\\{0,1\\\\right\\\\}^{\\*}\\\\to\\\\mathbb{R} admits a _fully polynomial-time randomized approximation scheme (FPRAS)_ if there is a randomized algorithm ùíú\\\\mathcal{A} such that for every input xx (of length nn) and parameters Œµ,Œ¥>0\\\\varepsilon,\\\\delta>0, the algorithm ùíú\\\\mathcal{A} outputs a Œµ\\\\varepsilon-multiplicative approximation of f‚Äã(x)f(x), i.e., a value that lies in the interval \\[f‚Äã(x)/(1+Œµ),(1+Œµ)‚Äãf‚Äã(x)\\]\\\\left\\[f(x)/(1+\\\\varepsilon),(1+\\\\varepsilon)f(x)\\\\right\\], with probability at least 1‚àíŒ¥1-\\\\delta.\nThe running time of ùíú\\\\mathcal{A} is polynomial in n,1/Œµ,1/Œ¥n,1/\\\\varepsilon,1/\\\\delta.",
      "citations": []
    },
    "3 Equivalence Checking for Mixtures of Product Distributions": {
      "content": "Let us now prove [TheoremÀú1]Theorem 1. ‚Ä£ 1.1 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\").\nFirst, observe that P=QP=Q if and only if P‚â§j=Q‚â§jP^{\\\\leq j}=Q^{\\\\leq j} for all 1‚â§j‚â§n1\\\\leq j\\\\leq n.\nThis is so, since if P=QP=Q, then every marginal of PP matches the respective marginal of QQ (in symbols, P‚â§j=Q‚â§jP^{\\\\leq j}=Q^{\\\\leq j} for all 1‚â§j‚â§n1\\\\leq j\\\\leq n).\nOtherwise, there would be some 1‚â§j‚â§n1\\\\leq j\\\\leq n and y‚ààŒ£jy\\\\in\\\\Sigma^{j} such that P‚â§j‚Äã(y)‚â†Q‚â§j‚Äã(y)P^{\\\\leq j}\\\\!\\\\left(y\\\\right)\\\\neq Q^{\\\\leq j}\\\\!\\\\left(y\\\\right).\nThe latter would then establish the existence of an x:=(y,z)‚ààŒ£nx:=\\\\left(y,z\\\\right)\\\\in\\\\Sigma^{n} (for some z‚ààŒ£n‚àíjz\\\\in\\\\Sigma^{n-j}) such that P‚Äã(x)‚â†Q‚Äã(x)P\\\\!\\\\left(x\\\\right)\\\\neq Q\\\\!\\\\left(x\\\\right).\nOn the other hand, if P‚â§j=Q‚â§jP^{\\\\leq j}=Q^{\\\\leq j} for all 1‚â§j‚â§n1\\\\leq j\\\\leq n, then P‚â§n=Q‚â§nP^{\\\\leq n}=Q^{\\\\leq n} which in particular implies that P=QP=Q.\n\nNote that the condition P‚â§j=Q‚â§jP^{\\\\leq j}=Q^{\\\\leq j} for all 1‚â§j‚â§n1\\\\leq j\\\\leq n is equivalent, by the definitions of PP and QQ, to the condition\n‚àëi=1kwi‚ÄãPi‚â§j=‚àëi=1kvi‚ÄãQi‚â§j\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}=\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\nfor all 1‚â§j‚â§n1\\\\leq j\\\\leq n.\nThus, if P‚â†QP\\\\neq Q, then there is some 1‚â§j‚â§n1\\\\leq j\\\\leq n so that\n‚àëi=1kwi‚ÄãPi‚â§j‚â†‚àëi=1kvi‚ÄãQi‚â§j.\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\neq\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}.\n\nWe will use an inductive argument on 1‚â§j‚â§n1\\\\leq j\\\\leq n to show that these conditions can be efficiently checked (in either case).\n\n#### Base Case.\n\nFor j=1j=1, we can efficiently check whether it is the case that\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§1=‚àëi=1kvi‚ÄãQi‚â§1.\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq 1}=\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq 1}. |  |\n\nThis is done by checking for all x‚ààŒ£x\\\\in\\\\Sigma that\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚Äãùêèùê´Pi\\[X1=x\\]‚àí‚àëi=1kvi‚Äãùêèùê´Qi\\[X1=x\\]=0.\\\\sum\\_{i=1}^{k}w\\_{i}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\]-\\\\sum\\_{i=1}^{k}v\\_{i}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{i}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\]=0. |  |\n\nIf these tests pass, then the algorithm proceeds with the inductive argument outlined below (otherwise, it outputs xx).\nTowards this, we will now find a basis B1B\\_{1} for the set of coefficient vectors of the equations\n\n|     |     |     |\n| --- | --- | --- |\n|  | {‚àëi=1kwi‚Äãùêèùê´Pi\\[X1=x\\]‚Äãzi‚àí‚àëi=1kvi‚Äãùêèùê´Qi\\[X1=x\\]‚Äãzk+i=0}x‚ààŒ£,\\\\left\\\\{\\\\sum\\_{i=1}^{k}w\\_{i}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\]z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{i}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\]z\\_{k+i}=0\\\\right\\\\}\\_{x\\\\in\\\\Sigma}, |  |\n\nover variables z1,‚Ä¶,z2‚Äãkz\\_{1},\\\\dots,z\\_{2k}.\nNote that the size of B1B\\_{1} is at most min‚Å°(2‚Äãk,\\|Œ£\\|)‚â§2‚Äãk\\\\min\\\\!\\\\left(2k,\\|\\\\Sigma\\|\\\\right)\\\\leq 2k.\nWe can find B1B\\_{1} as follows.\nWe appeal to [PropositionÀú3]Proposition 3. ‚Ä£ 2 Preliminaries ‚Ä£ Computational Explorations of Total Variation Distance\") and run the algorithm GG outlined there on the set of vectors\n\n|     |     |     |\n| --- | --- | --- |\n|  | {(w1‚Äãùêèùê´P1\\[X1=x\\],‚Ä¶,wk‚Äãùêèùê´Pk\\[X1=x\\],‚àív1‚Äãùêèùê´Q1\\[X1=x\\],‚Ä¶,‚àívk‚Äãùêèùê´Qk\\[X1=x\\])}x‚ààŒ£\\\\left\\\\{\\\\left(w\\_{1}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\],\\\\dots,w\\_{k}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{k}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\],-v\\_{1}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{1}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\],\\\\dots,-v\\_{k}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{k}}\\\\!\\\\left\\[X\\_{1}=x\\\\right\\]\\\\right)\\\\right\\\\}\\_{x\\\\in\\\\Sigma} |  |\n\n(in time O‚Äã(\\|Œ£\\|4)O\\\\!\\\\left(\\\\left\\|\\\\Sigma\\\\right\\|^{4}\\\\right)).\nThen, we define B1B\\_{1} to be the set of independent vectors being output by GG.\n\n#### Induction Hypothesis.\n\nAssume that for a j‚â•1j\\\\geq 1 it is the case that\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§j=‚àëi=1kvi‚ÄãQi‚â§j,\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}=\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}, |  |\n\nand we have a basis BjB\\_{j} for the set of coefficient vectors of the following equations\n\n|     |     |     |\n| --- | --- | --- |\n|  | {‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãzk+i=0}x‚ààŒ£j\\\\left\\\\{\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)z\\_{k+i}=0\\\\right\\\\}\\_{x\\\\in\\\\Sigma^{j}} |  |\n\nover variables z1,‚Ä¶,z2‚Äãkz\\_{1},\\\\dots,z\\_{2k}.\nNote that BjB\\_{j} is of size at most min‚Å°(2‚Äãk,\\|Œ£\\|j)‚â§2‚Äãk\\\\min\\\\!\\\\left(2k,\\|\\\\Sigma\\|^{j}\\\\right)\\\\leq 2k.\n\n#### Induction Step.\n\nWe will establish that we can check whether PP and QQ agree up to coordinate j+1j+1 and compute a basis Bj+1B\\_{j+1} for the respective set of coefficient vectors of the equations that capture this equivalence.\n\nTo see whether PP and QQ agree up to coordinate j+1j+1, one needs to check that\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãùêèùê´Pi\\[Xj+1=y\\]‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãùêèùê´Qi\\[Xj+1=y\\]=0\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]=0 |  |\n\nfor all x‚ààŒ£jx\\\\in\\\\Sigma^{j} and y‚ààŒ£y\\\\in\\\\Sigma.\nA crucial observation (that follows from the inductive hypothesis) is that we only need to check whether these equations hold for the assignments xx that correspond to vectors in BjB\\_{j}, and the values y‚ààŒ£y\\\\in\\\\Sigma.\n(Note that each basis vector b‚ààBjb\\\\in B\\_{j} can be specified by an assignment xb‚ààŒ£jx\\_{b}\\\\in\\\\Sigma^{j}. This follows from the way these basis vectors are constructed. See below, the discussion after [Àú6]Claim 6. ‚Ä£ Induction Step. ‚Ä£ 3 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ Computational Explorations of Total Variation Distance\").)\nIf any of these tests fails, then the algorithm outputs (x,y)\\\\left(x,y\\\\right); else, it continues as follows.\n\nTo proceed with the induction, it would suffice to show how to construct a basis Bj+1B\\_{j+1} for the set of coefficient vectors of the following equations over variables z1,‚Ä¶,z2‚Äãkz\\_{1},\\\\dots,z\\_{2k}, namely\n\n|     |     |     |\n| --- | --- | --- |\n|  | {‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãùêèùê´Pi\\[Xj+1=y\\]‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãùêèùê´Qi\\[Xj+1=y\\]‚Äãzk+i=0}x‚ààŒ£j,y‚ààŒ£.\\\\left\\\\{\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]z\\_{k+i}=0\\\\right\\\\}\\_{\\\\begin{subarray}{c}x\\\\in\\\\Sigma^{j},\\\\\\<br>y\\\\in\\\\Sigma\\\\end{subarray}}. |  |\n\nLet\nBj={b1=(b1,1,‚Ä¶,b1,2‚Äãk),‚Ä¶,bm=(bm,1,‚Ä¶,bm,2‚Äãk)}B\\_{j}=\\\\left\\\\{b\\_{1}=\\\\left(b\\_{1,1},\\\\dots,b\\_{1,2k}\\\\right),\\\\dots,b\\_{m}=\\\\left(b\\_{m,1},\\\\dots,b\\_{m,2k}\\\\right)\\\\right\\\\}\nwhereby m‚â§2‚Äãkm\\\\leq 2k and C:=‚ãÉi=1mCiC:=\\\\bigcup\\_{i=1}^{m}C\\_{i} is such that\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | C1\\\\displaystyle C\\_{1} | :={(b1,1ùêèùê´P1\\[Xj+1=y\\],‚Ä¶,b1,kùêèùê´Pk\\[Xj+1=y\\],\\\\displaystyle:=\\\\left\\\\{\\\\left(b\\_{1,1}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\],\\\\dots,b\\_{1,k}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{k}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\],\\\\right.\\\\right. |  |\n|  |  | b1,k+1ùêèùê´Q1\\[Xj+1=y\\],‚Ä¶,b1,2‚Äãkùêèùê´Qk\\[Xj+1=y\\])}y‚ààŒ£,\\\\displaystyle\\\\qquad\\\\qquad\\\\left.\\\\left.b\\_{1,k+1}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{1}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\],\\\\dots,b\\_{1,2k}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{k}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]\\\\right)\\\\right\\\\}\\_{y\\\\in\\\\Sigma}, |  |\n|  |  | ‚ãÆ\\\\displaystyle\\ \\ \\\\vdots |  |\n|  | Cm\\\\displaystyle C\\_{m} | :={(bm,1ùêèùê´P1\\[Xj+1=y\\],‚Ä¶,bm,kùêèùê´Pk\\[Xj+1=y\\],\\\\displaystyle:=\\\\left\\\\{\\\\left(b\\_{m,1}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\],\\\\dots,b\\_{m,k}\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{k}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\],\\\\right.\\\\right. |  |\n|  |  | bm,k+1ùêèùê´Q1\\[Xj+1=y\\],‚Ä¶,bm,2‚Äãkùêèùê´Qk\\[Xj+1=y\\])}y‚ààŒ£.\\\\displaystyle\\\\qquad\\\\qquad\\\\left.\\\\left.b\\_{m,k+1}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{1}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\],\\\\dots,b\\_{m,2k}\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{k}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]\\\\right)\\\\right\\\\}\\_{y\\\\in\\\\Sigma}. |  |\n\nWe require the following claim.\nBelow, we denote the dot product of vectors a,b‚àà‚Ñùsa,b\\\\in\\\\mathbb{R}^{s} by ‚ü®a,b‚ü©\\\\left\\\\langle a,b\\\\right\\\\rangle.\nThat is, ‚ü®a,b‚ü©=‚àëi=1sai‚Äãbi\\\\left\\\\langle a,b\\\\right\\\\rangle=\\\\sum\\_{i=1}^{s}a\\_{i}b\\_{i}.\n\n###### Claim 6.\n\nIt is the case that Bj+1‚äÜCB\\_{j+1}\\\\subseteq C.\n\n[Àú6]Claim 6. ‚Ä£ Induction Step. ‚Ä£ 3 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ Computational Explorations of Total Variation Distance\") helps explain how, for any vector b‚ààBj+1b\\\\in B\\_{j+1}, one may extract an assignment xb‚ààŒ£j+1x\\_{b}\\\\in\\\\Sigma^{j+1} that corresponds to bb.\nThis is done by keeping track of the Bernoulli parameters that appear in bb:\nThere is exactly one such parameter for each variable, and it refers to a symbol in Œ£\\\\Sigma.\n\n###### Proof of [Àú6]Claim 6. ‚Ä£ Induction Step. ‚Ä£ 3 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ Computational Explorations of Total Variation Distance\").\n\nLet y‚ààŒ£y\\\\in\\\\Sigma.\nWe have that\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§j+1‚Äã(x,y)‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j+1‚Äã(x,y)‚Äãzk+i\\\\displaystyle\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j+1}\\\\!\\\\left(x,y\\\\right)z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j+1}\\\\!\\\\left(x,y\\\\right)z\\_{k+i} |  |\n|  | =‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãùêèùê´Pi\\[Xj+1=y\\]‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãùêèùê´Qi\\[Xj+1=y\\]‚Äãzk+i.\\\\displaystyle\\\\qquad=\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]z\\_{k+i}. |  |\n\nLet z:=(z1,‚Ä¶,z2‚Äãk)z:=(z\\_{1},\\\\dots,z\\_{2k}).\nBy the inductive hypothesis, for any x‚ààŒ£jx\\\\in\\\\Sigma^{j},\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãzk+i\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)z\\_{k+i} |  |\n\ncan be written as a linear combination of {‚ü®b‚Ñì,z‚ü©}‚Ñì=1m\\\\left\\\\{\\\\left\\\\langle b\\_{\\\\ell},z\\\\right\\\\rangle\\\\right\\\\}\\_{\\\\ell=1}^{m}.\nConcretely, there exist d1,‚Ä¶,dm‚àà‚Ñùd\\_{1},\\\\dots,d\\_{m}\\\\in\\\\mathbb{R} such that\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãzk+i=‚àë‚Ñì=1md‚Ñì‚Äã‚ü®b‚Ñì,z‚ü©.\\\\displaystyle\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)z\\_{k+i}=\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\left\\\\langle b\\_{\\\\ell},z\\\\right\\\\rangle. |  |\n\nSince the corresponding coefficients of each ziz\\_{i} must be equal between the LHS and the RHS of this equation, we get that for all 1‚â§i‚â§k1\\\\leq i\\\\leq k,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | wi‚ÄãPi‚â§j‚Äã(x)=‚àë‚Ñì=1md‚Ñì‚ãÖb‚Ñì,iandvi‚ÄãQi‚â§j‚Äã(x)=‚àí‚àë‚Ñì=1md‚Ñì‚ãÖb‚Ñì,k+iw\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)=\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\cdot b\\_{\\\\ell,i}\\\\qquad\\\\text{and}\\\\qquad v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)=-\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\cdot b\\_{\\\\ell,k+i} |  | (1) |\n\nfor some d1,‚Ä¶,dmd\\_{1},\\\\dots,d\\_{m}.\nThen it is straightforward to see that for every y‚ààŒ£y\\\\in\\\\Sigma\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àëi=1kwi‚ÄãPi‚â§j‚Äã(x)‚Äãùêèùê´Pi\\[Xj+1=y\\]‚Äãzi‚àí‚àëi=1kvi‚ÄãQi‚â§j‚Äã(x)‚Äãùêèùê´Qi\\[Xj+1=y\\]‚Äãzk+i=‚àë‚Ñì=1md‚Ñì‚Äã‚ü®c‚Ñì,z‚ü©,\\\\displaystyle\\\\sum\\_{i=1}^{k}w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]z\\_{i}-\\\\sum\\_{i=1}^{k}v\\_{i}Q\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{Q\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]z\\_{k+i}=\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\left\\\\langle c\\_{\\\\ell},z\\\\right\\\\rangle, |  |\n\nwhereby c‚Ñìc\\_{\\\\ell} is the vector within the set C‚ÑìC\\_{\\\\ell} that corresponds to the setting where Xj+1=yX\\_{j+1}=y.\nTo see why this equation holds, we will consider the coefficients of each ziz\\_{i} in either side of this equation and show that they are equal.\nLet us consider the case where 1‚â§i‚â§k1\\\\leq i\\\\leq k.\n(The case where k+1‚â§i‚â§2‚Äãkk+1\\\\leq i\\\\leq 2k is similar.)\nIn the LHS, the coefficient of ziz\\_{i} is equal to\n\n|     |     |     |\n| --- | --- | --- |\n|  | wi‚ÄãPi‚â§j‚Äã(x)‚Äãùêèùê´Pi\\[Xj+1=y\\]=‚àë‚Ñì=1md‚Ñì‚ãÖb‚Ñì,i‚ãÖùêèùê´Pi\\[Xj+1=y\\],w\\_{i}P\\_{i}^{\\\\leq j}\\\\!\\\\left(x\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\]=\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\cdot b\\_{\\\\ell,i}\\\\cdot\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\], |  |\n\nby [EquationÀú1]In Induction Step. ‚Ä£ 3 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ Computational Explorations of Total Variation Distance\"), while in the RHS it is equal to\n\n|     |     |     |\n| --- | --- | --- |\n|  | ‚àë‚Ñì=1md‚Ñì‚ãÖc‚Ñì,i=‚àë‚Ñì=1md‚Ñì‚ãÖb‚Ñì,i‚ãÖùêèùê´Pi\\[Xj+1=y\\],\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\cdot c\\_{\\\\ell,i}=\\\\sum\\_{\\\\ell=1}^{m}d\\_{\\\\ell}\\\\cdot b\\_{\\\\ell,i}\\\\cdot\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{i}}\\\\!\\\\left\\[X\\_{j+1}=y\\\\right\\], |  |\n\nby the definition of c‚Ñìc\\_{\\\\ell}.\nThis shows that Bj+1B\\_{j+1} is a subset of CC, and the proof is complete.\n‚àé\n\nBy [Àú6]Claim 6. ‚Ä£ Induction Step. ‚Ä£ 3 Equivalence Checking for Mixtures of Product Distributions ‚Ä£ Computational Explorations of Total Variation Distance\"), we have that Bj+1B\\_{j+1} contains (at most) m‚Äã\\|Œ£\\|=O‚Äã(k‚Äã\\|Œ£\\|)m\\\\left\\|\\\\Sigma\\\\right\\|=O\\\\!\\\\left(k\\\\left\\|\\\\Sigma\\\\right\\|\\\\right) vectors.\nHowever, not all of these O‚Äã(k‚Äã\\|Œ£\\|)O\\\\!\\\\left(k\\\\left\\|\\\\Sigma\\\\right\\|\\\\right) vectors are (necessarily) independent.\nBy [PropositionÀú3]Proposition 3. ‚Ä£ 2 Preliminaries ‚Ä£ Computational Explorations of Total Variation Distance\"), we can find the (at most) 2‚Äãk2k independent vectors among the O‚Äã(k‚Äã\\|Œ£\\|)O\\\\!\\\\left(k\\\\left\\|\\\\Sigma\\\\right\\|\\\\right) vectors in time O‚Äã(k4‚Äã\\|Œ£\\|4)O\\\\!\\\\left(k^{4}\\\\left\\|\\\\Sigma\\\\right\\|^{4}\\\\right).\nThese vectors constitute Bj+1B\\_{j+1}.\nThis concludes the inductive description of our algorithm.\n\n#### Running Time.\n\nLet T‚Äã(n,k,Œ£)T\\\\!\\\\left(n,k,\\\\Sigma\\\\right) denote the running time of this procedure, on mixtures of size kk over nn variables that have alphabet Œ£\\\\Sigma.\nWe have the recurrence relation\n\n|     |     |     |\n| --- | --- | --- |\n|  | T‚Äã(n,k,Œ£)‚â§T‚Äã(n‚àí1,k,Œ£)+O‚Äã(k4‚Äã\\|Œ£\\|4),T\\\\!\\\\left(n,k,\\\\Sigma\\\\right)\\\\leq T\\\\!\\\\left(n-1,k,\\\\Sigma\\\\right)+O\\\\!\\\\left(k^{4}\\\\left\\|\\\\Sigma\\\\right\\|^{4}\\\\right), |  |\n\nwhich in particular yields T‚Äã(n,k,Œ£)=O‚Äã(n‚Äãk4‚Äã\\|Œ£\\|4)T\\\\!\\\\left(n,k,\\\\Sigma\\\\right)=O\\\\!\\\\left(nk^{4}\\\\left\\|\\\\Sigma\\\\right\\|^{4}\\\\right).",
      "citations": []
    },
    "4 Hardness of Approximating Total Variation Distance Between Ising Models": {
      "content": "In this section we prove [TheoremÀú2]Theorem 2. ‚Ä£ 1.2 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\").\n\n### 4.1 Reducing the Partition Function to Atomic Marginals\n\nWe first observe the following.\n\n###### Proposition 7.\n\nIf there is some FPRAS that estimates any atomic marginal of any Ising model PP, namely ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\] for any variable xkx\\_{k}, then there is some FPRAS that estimates the partition function of any Ising model.\n\n###### Proof.\n\nLet us first assume that there is some FPRAS MM that runs in time tMt\\_{M} and estimates any atomic marginal of any Ising model.\nWe will prove there is some FPRAS that estimates the partition function of any Ising model.\n\nLet P1P\\_{1} be an Ising model over variables x1,‚Ä¶,xnx\\_{1},\\\\dots,x\\_{n} with parameters {wi,j}i,j\\\\left\\\\{w\\_{i,j}\\\\right\\\\}\\_{i,j} and {hi}i\\\\left\\\\{h\\_{i}\\\\right\\\\}\\_{i} with partition function Z1Z\\_{1}.\nWe will show how to estimate Z1Z\\_{1}.\nTo this end, let us define a new Ising model P2P\\_{2} over variables x2,‚Ä¶,xnx\\_{2},\\\\dots,x\\_{n} with parameters {wi,j(2)}i<j\\\\left\\\\{w\\_{i,j}^{\\\\left(2\\\\right)}\\\\right\\\\}\\_{i<j} and {hi(2)}i\\\\left\\\\{h\\_{i}^{\\\\left(2\\\\right)}\\\\right\\\\}\\_{i} so that wi,j(2):=wi,jw\\_{i,j}^{\\\\left(2\\\\right)}:=w\\_{i,j} and hi(2):=w1,i+hih\\_{i}^{\\\\left(2\\\\right)}:=w\\_{1,i}+h\\_{i} for all 2‚â§i<j‚â§n2\\\\leq i<j\\\\leq n.\nLet Z2Z\\_{2} be the partition function of P2P\\_{2}.\nLet also\n\n|     |     |     |\n| --- | --- | --- |\n|  | E1‚Äã(x):=exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi),E2‚Äã(x):=exp‚Å°(‚àëi,j‚â†1wi,j(2)‚Äãxi‚Äãxj+‚àëi‚â†1hi(2)‚Äãxi),E\\_{1}\\\\!\\\\left(x\\\\right):=\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right),\\\\qquad E\\_{2}\\\\!\\\\left(x\\\\right):=\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}^{\\\\left(2\\\\right)}x\\_{i}x\\_{j}+\\\\sum\\_{i\\\\neq 1}h\\_{i}^{\\\\left(2\\\\right)}x\\_{i}\\\\right), |  |\n\nfor all xx, and note that Z1=‚àëxE1‚Äã(x)Z\\_{1}=\\\\sum\\_{x}E\\_{1}\\\\!\\\\left(x\\\\right) and Z2=‚àëxE2‚Äã(x)Z\\_{2}=\\\\sum\\_{x}E\\_{2}\\\\!\\\\left(x\\\\right).\nWe have\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ‚àëx:x1=1E1‚Äã(x)\\\\displaystyle\\\\sum\\_{x:x\\_{1}=1}E\\_{1}\\\\!\\\\left(x\\\\right) | =‚àëx:x1=1exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\sum\\_{x:x\\_{1}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right) |  |\n|  |  | =‚àëx:x1=1exp‚Å°(‚àëi,j‚â†1wi,j‚Äãxi‚Äãxj+‚àëiw1,i‚Äãxi+‚àëi‚â†1hi‚Äãxi+h1)\\\\displaystyle=\\\\sum\\_{x:x\\_{1}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}w\\_{1,i}x\\_{i}+\\\\sum\\_{i\\\\neq 1}h\\_{i}x\\_{i}+h\\_{1}\\\\right) |  |\n|  |  | =‚àëx:x1=1exp‚Å°(‚àëi,j‚â†1wi,j‚Äãxi‚Äãxj+‚àëi‚â†1(w1,i+hi)‚Äãxi+h1)\\\\displaystyle=\\\\sum\\_{x:x\\_{1}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i\\\\neq 1}\\\\left(w\\_{1,i}+h\\_{i}\\\\right)x\\_{i}+h\\_{1}\\\\right) |  |\n|  |  | =‚àëx:x1=1exp‚Å°(‚àëi,j‚â†1wi,j‚Äãxi‚Äãxj+‚àëi‚â†1(w1,i+hi)‚Äãxi)‚Äãexp‚Å°(h1)\\\\displaystyle=\\\\sum\\_{x:x\\_{1}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i\\\\neq 1}\\\\left(w\\_{1,i}+h\\_{i}\\\\right)x\\_{i}\\\\right)\\\\exp\\\\!\\\\left(h\\_{1}\\\\right) |  |\n|  |  | =exp‚Å°(h1)‚Äã‚àëx:x1=1exp‚Å°(‚àëi,j‚â†1wi,j‚Äãxi‚Äãxj+‚àëi‚â†1(w1,i+hi)‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)\\\\sum\\_{x:x\\_{1}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i\\\\neq 1}\\\\left(w\\_{1,i}+h\\_{i}\\\\right)x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(h1)‚Äã‚àëx:x1=1exp‚Å°(‚àëi,j‚â†1wi,j(2)‚Äãxi‚Äãxj+‚àëi‚â†1hi(2)‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)\\\\sum\\_{x:x\\_{1}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}^{\\\\left(2\\\\right)}x\\_{i}x\\_{j}+\\\\sum\\_{i\\\\neq 1}h\\_{i}^{\\\\left(2\\\\right)}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(h1)‚Äã‚àëxexp‚Å°(‚àëi,j‚â†1wi,j(2)‚Äãxi‚Äãxj+‚àëi‚â†1hi(2)‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j\\\\neq 1}w\\_{i,j}^{\\\\left(2\\\\right)}x\\_{i}x\\_{j}+\\\\sum\\_{i\\\\neq 1}h\\_{i}^{\\\\left(2\\\\right)}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(h1)‚Äã‚àëxE2‚Äã(x)\\\\displaystyle=\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)\\\\sum\\_{x}E\\_{2}\\\\!\\\\left(x\\\\right) |  |\n|  |  | =exp‚Å°(h1)‚ÄãZ2.\\\\displaystyle=\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)Z\\_{2}. |  |\n\nMoreover,\n\n|     |     |     |\n| --- | --- | --- |\n|  | ùêèùê´P1\\[x1=1\\]=1Z1‚Äã‚àëx:x1=1E1‚Äã(x)orZ1=1ùêèùê´P1\\[x1=1\\]‚Äã‚àëx:x1=1E1‚Äã(x).\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\]=\\\\frac{1}{Z\\_{1}}\\\\sum\\_{x:x\\_{1}=1}E\\_{1}\\\\!\\\\left(x\\\\right)\\\\qquad\\\\text{or}\\\\qquad Z\\_{1}=\\\\frac{1}{\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\]}\\\\sum\\_{x:x\\_{1}=1}E\\_{1}\\\\!\\\\left(x\\\\right). |  |\n\nCombining the above, we have that\n\n|     |     |     |\n| --- | --- | --- |\n|  | Z1=1ùêèùê´P1\\[x1=1\\]‚Äã‚àëx:x1=1E1‚Äã(x)=Z2‚Äãexp‚Å°(h1)ùêèùê´P1\\[x1=1\\].Z\\_{1}=\\\\frac{1}{\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\]}\\\\sum\\_{x:x\\_{1}=1}E\\_{1}\\\\!\\\\left(x\\\\right)=Z\\_{2}\\\\frac{\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)}{\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\]}. |  |\n\nThis equality yields a natural recursive algorithm for computing Z1Z\\_{1}, whereby the computation of Z1Z\\_{1} is reduced to the computation of Z2Z\\_{2} by making use of the algorithm MM that estimates the marginal ùêèùê´P1\\[x1=1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\].\nThis continues until we reach in the recursion some Ising model PnP\\_{n} over the variable xnx\\_{n}.\nAt this point the computation of ZnZ\\_{n} is trivial, as\n\n|     |     |     |\n| --- | --- | --- |\n|  | Zn=exp‚Å°(hn(n))+exp‚Å°(‚àíhn(n)).Z\\_{n}=\\\\exp\\\\!\\\\left(h\\_{n}^{\\\\left(n\\\\right)}\\\\right)+\\\\exp\\\\!\\\\left(-h\\_{n}^{\\\\left(n\\\\right)}\\\\right). |  |\n\nWe will now bound the approximation and confidence errors of this algorithm.\nNote that\n\n|     |     |     |\n| --- | --- | --- |\n|  | Z1=Z2‚Äãexp‚Å°(h1)ùêèùê´P1\\[x1=1\\]=‚ãØ=Zn‚Äãexp‚Å°(h1)‚ãÖexp‚Å°(h2(2))‚ãÖ‚Ä¶‚ãÖexp‚Å°(hn‚àí1(n‚àí1))ùêèùê´P1\\[x1=1\\]‚ãÖùêèùê´P2\\[x2=1\\]‚ãÖ‚Ä¶‚ãÖùêèùê´Pn‚àí1\\[xn‚àí1=1\\]Z\\_{1}=Z\\_{2}\\\\frac{\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)}{\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\]}=\\\\cdots=Z\\_{n}\\\\frac{\\\\exp\\\\!\\\\left(h\\_{1}\\\\right)\\\\cdot\\\\exp\\\\!\\\\left(h\\_{2}^{\\\\left(2\\\\right)}\\\\right)\\\\cdot\\\\ldots\\\\cdot\\\\exp\\\\!\\\\left(h\\_{n-1}^{\\\\left(n-1\\\\right)}\\\\right)}{\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{1}}\\\\!\\\\left\\[x\\_{1}=1\\\\right\\]\\\\cdot\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{2}}\\\\!\\\\left\\[x\\_{2}=1\\\\right\\]\\\\cdot\\\\ldots\\\\cdot\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{n-1}}\\\\!\\\\left\\[x\\_{n-1}=1\\\\right\\]} |  |\n\nwhereby each atomic marginal in the denominator is approximated with a (1+Œµ0)\\\\left(1+\\\\varepsilon\\_{0}\\\\right) ratio for Œµ0:=Œµ/n\\\\varepsilon\\_{0}:=\\\\varepsilon/n by making use of MM.\nThis yields the desired approximation ratio of\n\n|     |     |     |\n| --- | --- | --- |\n|  | (1+Œµ0)n‚àí1‚â§(1+Œµ0)n‚â§1+n‚ãÖŒµ0=1+n‚ãÖŒµn=1+Œµ.\\\\left(1+\\\\varepsilon\\_{0}\\\\right)^{n-1}\\\\leq\\\\left(1+\\\\varepsilon\\_{0}\\\\right)^{n}\\\\leq 1+n\\\\cdot\\\\varepsilon\\_{0}=1+n\\\\cdot\\\\frac{\\\\varepsilon}{n}=1+\\\\varepsilon. |  |\n\nWe similarly argue for the confidence ratio Œ¥0:=Œ¥/n\\\\delta\\_{0}:=\\\\delta/n that yields the desired confidence ratio of 1‚àíŒ¥1-\\\\delta.\nThat is, the outlined reduction is approximation preserving.\nWhat is left is to bound the running time of this recursive procedure.\nLet T‚Äã(n)T\\\\!\\\\left(n\\\\right) be the running time in question.\nWe have that\n\n|     |     |     |\n| --- | --- | --- |\n|  | T‚Äã(n)‚â§T‚Äã(n‚àí1)+tM‚Äã(n,1/Œµ0,1/Œ¥0)+O‚Äã(1)T\\\\!\\\\left(n\\\\right)\\\\leq T\\\\!\\\\left(n-1\\\\right)+t\\_{M}\\\\!\\\\left(n,1/\\\\varepsilon\\_{0},1/\\\\delta\\_{0}\\\\right)+O\\\\!\\\\left(1\\\\right) |  |\n\nor\nT‚Äã(n)=O‚Äã(n‚ãÖtM‚Äã(n,1/Œµ0,1/Œ¥0))=O‚Äã(poly‚Äã(n,1/Œµ0,1/Œ¥0)).T\\\\!\\\\left(n\\\\right)=O\\\\!\\\\left(n\\\\cdot t\\_{M}\\\\!\\\\left(n,1/\\\\varepsilon\\_{0},1/\\\\delta\\_{0}\\\\right)\\\\right)=O\\\\!\\\\left(\\\\textup{poly}\\\\!\\\\left(n,1/\\\\varepsilon\\_{0},1/\\\\delta\\_{0}\\\\right)\\\\right).\nThis concludes the proof.\n‚àé\n\n### 4.2 Reducing the Atomic Marginals to TV Distance\n\nWe prove the following.\n\n###### Proposition 8.\n\nIf there is some FPRAS that estimates the TV distance between any two Ising models, then there is some FPRAS that estimates any atomic marginal of any Ising model PP, namely ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\] for any variable xkx\\_{k}.\n\n###### Proof.\n\nAssume that there is some FPRAS that estimates the TV distance between any two Ising models.\nWe will show that there is some FPRAS that estimates the atomic marginals of any Ising model PP, namely ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\] for any variable xkx\\_{k}.\nLet Œµ\\\\varepsilon be the desired accuracy error of the FPTAS that estimates the atomic marginals of any Ising model PP.\n\nFix some Ising model PP with parameters {wi,j}i<j\\\\left\\\\{w\\_{i,j}\\\\right\\\\}\\_{i<j} and {hi}i\\\\left\\\\{h\\_{i}\\\\right\\\\}\\_{i}.\nWe shall first introduce a new dummy variable x0x\\_{0}.\nLet P0P\\_{0} be a new Ising model over x0,‚Ä¶,xnx\\_{0},\\\\dots,x\\_{n} with parameters {wi,j}i<j\\\\left\\\\{w\\_{i,j}\\\\right\\\\}\\_{i<j} and {hi}i\\\\left\\\\{h\\_{i}\\\\right\\\\}\\_{i} so that w0,i=0w\\_{0,i}=0 for all i>0i>0 and h0‚Üí‚àí‚àûh\\_{0}\\\\to-\\\\infty (that is, h0h\\_{0} is a small negative quantity which we will fix later).\nNote that under these conditions x0x\\_{0} is independent from every other node x1,‚Ä¶,xnx\\_{1},\\\\dots,x\\_{n}.\nMoreover,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùêèùê´P0\\[x0=1\\]\\\\displaystyle\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1\\\\right\\] | =‚àëx:x0=1P0‚Äã(x)\\\\displaystyle=\\\\sum\\_{x:x\\_{0}=1}P\\_{0}\\\\!\\\\left(x\\\\right) |  |\n|  |  | =‚àëx:x0=1exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)‚àëxexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\frac{\\\\sum\\_{x:x\\_{0}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right)}{\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right)} |  |\n|  |  | =‚àëx:x0=1exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+h0‚Äãx0+‚àëi>0hi‚Äãxi)‚àëxexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+h0‚Äãx0+‚àëi>0hi‚Äãxi)\\\\displaystyle=\\\\frac{\\\\sum\\_{x:x\\_{0}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+h\\_{0}x\\_{0}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)}{\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+h\\_{0}x\\_{0}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)} |  |\n|  |  | =‚àëx:x0=1exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+h0+‚àëi>0hi‚Äãxi)‚àëxexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+h0‚Äãx0+‚àëi>0hi‚Äãxi)\\\\displaystyle=\\\\frac{\\\\sum\\_{x:x\\_{0}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+h\\_{0}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)}{\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+h\\_{0}x\\_{0}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)} |  |\n|  |  | =exp‚Å°(h0)‚Äã‚àëx:x0=1exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëi>0hi‚Äãxi)‚àëxexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+h0‚Äãx0+‚àëi>0hi‚Äãxi)\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(h\\_{0}\\\\right)\\\\sum\\_{x:x\\_{0}=1}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)}{\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+h\\_{0}x\\_{0}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)} |  |\n|  |  | =exp‚Å°(h0)‚Äã‚àëxexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëi>0hi‚Äãxi)‚àëxexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+h0‚Äãx0+‚àëi>0hi‚Äãxi).\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(h\\_{0}\\\\right)\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)}{\\\\sum\\_{x}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+h\\_{0}x\\_{0}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right)}. |  |\n\nLet now us define E‚Äã(x):=exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëi>0hi‚Äãxi)E\\\\!\\\\left(x\\\\right):=\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i>0}h\\_{i}x\\_{i}\\\\right) for all xx.\nWe have\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùêèùê´P0\\[x0=1\\]\\\\displaystyle\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1\\\\right\\] | =exp‚Å°(h0)‚Äã‚àëxE‚Äã(x)exp‚Å°(h0)‚Äã‚àëx:x0=1E‚Äã(x)+exp‚Å°(‚àíh0)‚Äã‚àëx:x0=‚àí1E‚Äã(x)\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(h\\_{0}\\\\right)\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)}{\\\\exp\\\\!\\\\left(h\\_{0}\\\\right)\\\\sum\\_{x:x\\_{0}=1}E\\\\!\\\\left(x\\\\right)+\\\\exp\\\\!\\\\left(-h\\_{0}\\\\right)\\\\sum\\_{x:x\\_{0}=-1}E\\\\!\\\\left(x\\\\right)} |  |\n|  |  | =exp‚Å°(h0)‚Äã‚àëxE‚Äã(x)exp‚Å°(h0)‚Äã‚àëxE‚Äã(x)+exp‚Å°(‚àíh0)‚Äã‚àëxE‚Äã(x)\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(h\\_{0}\\\\right)\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)}{\\\\exp\\\\!\\\\left(h\\_{0}\\\\right)\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)+\\\\exp\\\\!\\\\left(-h\\_{0}\\\\right)\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)} |  |\n|  |  | =exp‚Å°(2‚Äãh0)‚Äã‚àëxE‚Äã(x)exp‚Å°(2‚Äãh0)‚Äã‚àëxE‚Äã(x)+‚àëxE‚Äã(x)\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)}{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)+\\\\sum\\_{x}E\\\\!\\\\left(x\\\\right)} |  |\n|  |  | =exp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1.\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+1}. |  |\n\nWe shall now define another Ising model Q0Q\\_{0} over x0,‚Ä¶,xnx\\_{0},\\\\dots,x\\_{n} as follows.\nThe model Q0Q\\_{0} has parameters {wi,j‚Ä≤}i<j\\\\left\\\\{w\\_{i,j}^{\\\\prime}\\\\right\\\\}\\_{i<j} and {hi‚Ä≤}i\\\\left\\\\{h\\_{i}^{\\\\prime}\\\\right\\\\}\\_{i} so that wi,j‚Ä≤:=wi,jw\\_{i,j}^{\\\\prime}:=w\\_{i,j} if (i,j)‚â†(0,k)\\\\left(i,j\\\\right)\\\\neq\\\\left(0,k\\\\right) and w0,k‚Ä≤:=w0,k+Œ¥w\\_{0,k}^{\\\\prime}:=w\\_{0,k}+\\\\delta for some Œ¥>1\\\\delta>1, and hi‚Ä≤=hih\\_{i}^{\\\\prime}=h\\_{i} for all ii.\nWe have that for all x‚àà{‚àí1,1}nx\\\\in\\\\left\\\\{-1,1\\\\right\\\\}^{n} it is the case that\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Q0‚Äã(x)\\\\displaystyle Q\\_{0}\\\\!\\\\left(x\\\\right) | ‚àùexp‚Å°(‚àëi,jwi,j‚Ä≤‚Äãxi‚Äãxj+‚àëihi‚Ä≤‚Äãxi)\\\\displaystyle\\\\propto\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}^{\\\\prime}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}^{\\\\prime}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(‚àëi,jwi,j‚Ä≤‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}^{\\\\prime}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°((w0,k+Œ¥)‚Äãx0‚Äãxk+‚àë(i,j)‚â†(0,k)wi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(\\\\left(w\\_{0,k}+\\\\delta\\\\right)x\\_{0}x\\_{k}+\\\\sum\\_{\\\\left(i,j\\\\right)\\\\neq\\\\left(0,k\\\\right)}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(w0,k‚Äãx0‚Äãxk+Œ¥‚Äãx0‚Äãxk+‚àë(i,j)‚â†(0,k)wi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(w\\_{0,k}x\\_{0}x\\_{k}+\\\\delta x\\_{0}x\\_{k}+\\\\sum\\_{\\\\left(i,j\\\\right)\\\\neq\\\\left(0,k\\\\right)}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(Œ¥‚Äãx0‚Äãxk+‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(\\\\delta x\\_{0}x\\_{k}+\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(Œ¥‚Äãx0‚Äãxk)‚Äãexp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)\\\\displaystyle=\\\\exp\\\\!\\\\left(\\\\delta x\\_{0}x\\_{k}\\\\right)\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right) |  |\n|  |  | =exp‚Å°(Œ¥‚Äãx0‚Äãxk)‚ÄãP0‚Äã(x)‚ÄãZP0,\\\\displaystyle=\\\\exp\\\\!\\\\left(\\\\delta x\\_{0}x\\_{k}\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}, |  |\n\nwhereby ZP0Z\\_{P\\_{0}} is the partition function of P0P\\_{0}.\nIf x0‚Äãxk=1x\\_{0}x\\_{k}=1, then Q0‚Äã(x)‚àùexp‚Å°(Œ¥)‚ÄãP0‚Äã(x)Q\\_{0}\\\\!\\\\left(x\\\\right)\\\\propto\\\\exp\\\\!\\\\left(\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right); else Q0‚Äã(x)‚àùexp‚Å°(‚àíŒ¥)‚ÄãP0‚Äã(x)Q\\_{0}\\\\!\\\\left(x\\\\right)\\\\propto\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right).\nMoreover, for any xx such that x0‚Äãxk=1x\\_{0}x\\_{k}=1,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Q0‚Äã(x)\\\\displaystyle Q\\_{0}\\\\!\\\\left(x\\\\right) | =exp‚Å°(Œ¥)‚ÄãP0‚Äã(x)‚ÄãZP0ZQ0\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}} |  |\n|  |  | =exp‚Å°(Œ¥)‚ÄãP0‚Äã(x)‚ÄãZP0‚àëx:x0‚Äãxk=1exp‚Å°(Œ¥)‚ÄãP0‚Äã(x)‚ÄãZP0+‚àëx:x0‚Äãxk=‚àí1exp‚Å°(‚àíŒ¥)‚ÄãP0‚Äã(x)‚ÄãZP0\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}}{\\\\sum\\_{x:x\\_{0}x\\_{k}=1}\\\\exp\\\\!\\\\left(\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}+\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}} |  |\n|  |  | =P0‚Äã(x)‚àëx:x0‚Äãxk=1P0‚Äã(x)+exp‚Å°(‚àí2‚ÄãŒ¥)‚Äã‚àëx:x0‚Äãxk=‚àí1P0‚Äã(x)\\\\displaystyle=\\\\frac{P\\_{0}\\\\!\\\\left(x\\\\right)}{\\\\sum\\_{x:x\\_{0}x\\_{k}=1}P\\_{0}\\\\!\\\\left(x\\\\right)+\\\\exp\\\\!\\\\left(-2\\\\delta\\\\right)\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}P\\_{0}\\\\!\\\\left(x\\\\right)} |  |\n|  |  | ‚â•P0‚Äã(x)‚àëx:x0‚Äãxk=1P0‚Äã(x)+‚àëx:x0‚Äãxk=‚àí1P0‚Äã(x)\\\\displaystyle\\\\geq\\\\frac{P\\_{0}\\\\!\\\\left(x\\\\right)}{\\\\sum\\_{x:x\\_{0}x\\_{k}=1}P\\_{0}\\\\!\\\\left(x\\\\right)+\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}P\\_{0}\\\\!\\\\left(x\\\\right)} |  |\n|  |  | =P0‚Äã(x)‚àëxP0‚Äã(x)\\\\displaystyle=\\\\frac{P\\_{0}\\\\!\\\\left(x\\\\right)}{\\\\sum\\_{x}P\\_{0}\\\\!\\\\left(x\\\\right)} |  |\n|  |  | ‚â•P0‚Äã(x)\\\\displaystyle\\\\geq P\\_{0}(x) |  |\n\nwhere ZQ0Z\\_{Q\\_{0}} is the partition function of Q0{Q\\_{0}}.\nSimilarly, for any xx such that x0‚Äãxk=‚àí1x\\_{0}x\\_{k}=-1,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | Q0‚Äã(x)\\\\displaystyle{Q\\_{0}}\\\\!\\\\left(x\\\\right) | =exp‚Å°(‚àíŒ¥)‚ÄãP0‚Äã(x)‚ÄãZP0ZQ0\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}} |  |\n|  |  | =exp‚Å°(‚àíŒ¥)‚ÄãP0‚Äã(x)‚ÄãZP0‚àëx:x0‚Äãxk=1exp‚Å°(Œ¥)‚ÄãP0‚Äã(x)‚ÄãZP0+‚àëx:x0‚Äãxk=‚àí1exp‚Å°(‚àíŒ¥)‚ÄãP0‚Äã(x)‚ÄãZP0\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}}{\\\\sum\\_{x:x\\_{0}x\\_{k}=1}\\\\exp\\\\!\\\\left(\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}+\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}} |  |\n|  |  | =P0‚Äã(x)‚àëx:x0‚Äãxk=1exp‚Å°(2‚ÄãŒ¥)‚ÄãP0‚Äã(x)+‚àëx:x0‚Äãxk=‚àí1P0‚Äã(x)\\\\displaystyle=\\\\frac{P\\_{0}\\\\!\\\\left(x\\\\right)}{\\\\sum\\_{x:x\\_{0}x\\_{k}=1}\\\\exp\\\\!\\\\left(2\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)+\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}P\\_{0}\\\\!\\\\left(x\\\\right)} |  |\n|  |  | <P0‚Äã(x)‚àëx:x0‚Äãxk=1P0‚Äã(x)+‚àëx:x0‚Äãxk=‚àí1P0‚Äã(x)\\\\displaystyle<\\\\frac{P\\_{0}\\\\!\\\\left(x\\\\right)}{\\\\sum\\_{x:x\\_{0}x\\_{k}=1}P\\_{0}\\\\!\\\\left(x\\\\right)+\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}P\\_{0}\\\\!\\\\left(x\\\\right)} |  |\n|  |  | =P0‚Äã(x).\\\\displaystyle=P\\_{0}(x). |  |\n\nThat is, P0‚Äã(x)‚â•Q0‚Äã(x)P\\_{0}\\\\!\\\\left(x\\\\right)\\\\geq{Q\\_{0}}\\\\!\\\\left(x\\\\right) if and only if x0‚Äãxk=‚àí1x\\_{0}x\\_{k}=-1.\nWe now have\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | dTV‚Äã(P0,Q0)\\\\displaystyle d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right) | =‚àëxmax‚Å°(0,P0‚Äã(x)‚àíQ0‚Äã(x))\\\\displaystyle=\\\\sum\\_{x}\\\\max\\\\!\\\\left(0,P\\_{0}\\\\!\\\\left(x\\\\right)-{Q\\_{0}}\\\\!\\\\left(x\\\\right)\\\\right) |  |\n|  |  | =‚àëx:P0‚Äã(x)‚â•Q0‚Äã(x)(P0‚Äã(x)‚àíQ0‚Äã(x))\\\\displaystyle=\\\\sum\\_{x:P\\_{0}\\\\left(x\\\\right)\\\\geq{Q\\_{0}}\\\\left(x\\\\right)}\\\\left(P\\_{0}\\\\!\\\\left(x\\\\right)-{Q\\_{0}}\\\\!\\\\left(x\\\\right)\\\\right) |  |\n|  |  | =‚àëx:x0‚Äãxk=‚àí1(P0‚Äã(x)‚àíQ0‚Äã(x))\\\\displaystyle=\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}\\\\left(P\\_{0}\\\\!\\\\left(x\\\\right)-{Q\\_{0}}\\\\!\\\\left(x\\\\right)\\\\right) |  |\n|  |  | =‚àëx:x0‚Äãxk=‚àí1P0‚Äã(x)‚àí‚àëx:x0‚Äãxk=‚àí1Q0‚Äã(x).\\\\displaystyle=\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}P\\_{0}\\\\!\\\\left(x\\\\right)-\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}{Q\\_{0}}\\\\!\\\\left(x\\\\right). |  |\n\nMoreover,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ‚àëx:x0‚Äãxk=‚àí1P0‚Äã(x)\\\\displaystyle\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}P\\_{0}\\\\!\\\\left(x\\\\right) | =ùêèùê´P0\\[x0‚Äãxk=‚àí1\\]\\\\displaystyle=\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}x\\_{k}=-1\\\\right\\] |  |\n|  |  | =ùêèùê´P0\\[x0=1,xk=‚àí1\\]+ùêèùê´P0\\[x0=‚àí1,xk=1\\]\\\\displaystyle=\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1,x\\_{k}=-1\\\\right\\]+\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=-1,x\\_{k}=1\\\\right\\] |  |\n|  |  | =ùêèùê´P0\\[x0=1\\]‚Äãùêèùê´P0\\[xk=‚àí1\\]+ùêèùê´P0\\[x0=‚àí1\\]‚Äãùêèùê´P0\\[xk=1\\]\\\\displaystyle=\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1\\\\right\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{k}=-1\\\\right\\]+\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=-1\\\\right\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\] |  |\n|  |  | =ùêèùê´P0\\[x0=1\\]‚Äãùêèùê´P\\[xk=‚àí1\\]+ùêèùê´P0\\[x0=‚àí1\\]‚Äãùêèùê´P\\[xk=1\\]\\\\displaystyle=\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1\\\\right\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=-1\\\\right\\]+\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=-1\\\\right\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\] |  |\n|  |  | =ùêèùê´P0\\[x0=1\\]+(1‚àí2‚Äãùêèùê´P0\\[x0=1\\])‚Äãùêèùê´P\\[xk=1\\]\\\\displaystyle=\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1\\\\right\\]+\\\\left(1-2\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{0}=1\\\\right\\]\\\\right)\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\] |  |\n|  |  | =exp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1+1‚àíexp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1‚Äãùêèùê´P\\[xk=1\\],\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+1}+\\\\frac{1-\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+1}\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\], |  |\n\nwhereby we have used the fact that ùêèùê´P0\\[xk=¬±1\\]=ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P\\_{0}}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\]=\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\].\nThat is,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | dTV‚Äã(P0,Q0)=exp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1‚àí‚àëx:x0‚Äãxk=‚àí1Q0‚Äã(x)+1‚àíexp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1‚Äãùêèùê´P\\[xk=1\\].\\\\displaystyle d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right)=\\\\frac{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+1}-\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}{Q\\_{0}}\\\\!\\\\left(x\\\\right)+\\\\frac{1-\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+1}\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\]. |  | (2) |\n\nNote that\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | 0‚â§‚àëx:x0‚Äãxk=‚àí1Q0‚Äã(x)=‚àëx:x0‚Äãxk=‚àí1exp‚Å°(‚àíŒ¥)‚ÄãP0‚Äã(x)‚ÄãZP0ZQ0\\\\displaystyle 0\\\\leq\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}{Q\\_{0}}\\\\!\\\\left(x\\\\right)=\\\\sum\\_{x:x\\_{0}x\\_{k}=-1}\\\\frac{\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)P\\_{0}\\\\!\\\\left(x\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}} | ‚â§exp‚Å°(‚àíŒ¥)‚ÄãZP0ZQ0.\\\\displaystyle\\\\leq\\\\frac{\\\\exp\\\\!\\\\left(-\\\\delta\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}}. |  |\n\nIntuitively, note that if (in the above) we set Œ¥‚Üí‚àû\\\\delta\\\\to\\\\infty and h0‚Üí‚àí‚àûh\\_{0}\\\\to-\\\\infty, then dTV‚Äã(P0,Q0)=ùêèùê´P\\[xk=1\\]d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right)=\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\], and an approximation of dTV‚Äã(P0,Q0)d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right) implies an approximation of ùêèùê´P\\[xk=1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\].\nNow we make this formal by finitely quantifying h0,Œ¥h\\_{0},\\\\delta.\n\nIt would suffice to show that\n\n|     |     |     |\n| --- | --- | --- |\n|  | \\|dTV‚Äã(P0,Q0)‚àíùêèùê´P\\[xk=1\\]\\|‚â§Œµ2‚ãÖùêèùê´P\\[xk=1\\].\\\\left\\|d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right)-\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\]\\\\right\\|\\\\leq\\\\frac{\\\\varepsilon}{2}\\\\cdot\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\]. |  |\n\nThen this could be combined with an Œµ2\\\\frac{\\\\varepsilon}{2}-multiplicative approximation of dTV‚Äã(P0,Q0)d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right) to yield the desired Œµ\\\\varepsilon-multiplicative approximation of ùêèùê´P\\[xk=1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\].\nBy [EquationÀú2]In 4.2 Reducing the Atomic Marginals to TV Distance ‚Ä£ 4 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\"),\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | \\|dTV‚Äã(P0,Q0)‚àíùêèùê´P\\[xk=1\\]\\|\\\\displaystyle\\\\left\\|d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right)-\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\]\\\\right\\| | ‚â§exp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1+exp‚Å°(‚àíŒ¥)‚ÄãZP0ZQ0+exp‚Å°(2‚Äãh0)exp‚Å°(2‚Äãh0)+1‚Äãùêèùê´P\\[xk=1\\]\\\\displaystyle\\\\leq\\\\frac{\\\\exp\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\left(2h\\_{0}\\\\right)+1}+\\\\frac{\\\\exp\\\\left(-\\\\delta\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}}+\\\\frac{\\\\exp\\\\left(2h\\_{0}\\\\right)}{\\\\exp\\\\left(2h\\_{0}\\\\right)+1}\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\] |  |\n|  |  | ‚â§2‚Äãexp‚Å°(2‚Äãh0)+exp‚Å°(‚àíŒ¥)‚ÄãZP0ZQ0.\\\\displaystyle\\\\leq 2\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+\\\\frac{\\\\exp\\\\left(-\\\\delta\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}}. |  |\n\nLet W:=maxi,j‚Å°\\|wi,j\\|W:=\\\\max\\_{i,j}\\|w\\_{i,j}\\| and H:=maxi‚Å°\\|hi\\|H:=\\\\max\\_{i}\\|h\\_{i}\\|.\nThen for any xx,\n\n|     |     |     |     |\n| --- | --- | --- | --- |\n|  | ùêèùê´P\\[xk=1\\]\\\\displaystyle\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=1\\\\right\\] | =‚àëx:xk=1exp‚Å°(‚àëi,jwi,j‚Äãxi‚Äãxj+‚àëihi‚Äãxi)‚àëyexp‚Å°(‚àëi,jwi,j‚Äãyi‚Äãyj+‚àëihi‚Äãyi)\\\\displaystyle=\\\\sum\\_{x:x\\_{k}=1}\\\\frac{\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}x\\_{i}x\\_{j}+\\\\sum\\_{i}h\\_{i}x\\_{i}\\\\right)}{\\\\sum\\_{y}\\\\exp\\\\!\\\\left(\\\\sum\\_{i,j}w\\_{i,j}y\\_{i}y\\_{j}+\\\\sum\\_{i}h\\_{i}y\\_{i}\\\\right)} |  |\n|  |  | ‚â•2n‚àí1‚Äãexp‚Å°(‚àíW‚Äã(n+1)2‚àí(n+1)‚ÄãH)2n+1‚Äãexp‚Å°(W‚Äã(n+1)2+(n+1)‚ÄãH)\\\\displaystyle\\\\geq\\\\frac{2^{n-1}\\\\exp\\\\!\\\\left(-W\\\\left(n+1\\\\right)^{2}-\\\\left(n+1\\\\right)H\\\\right)}{2^{n+1}\\\\exp\\\\!\\\\left(W\\\\left(n+1\\\\right)^{2}+\\\\left(n+1\\\\right)H\\\\right)} |  |\n|  |  | =exp‚Å°(‚àíW‚Äã(n+1)2‚àí(n+1)‚ÄãH)4‚Äãexp‚Å°(W‚Äã(n+1)2+(n+1)‚ÄãH).\\\\displaystyle=\\\\frac{\\\\exp\\\\!\\\\left(-W\\\\left(n+1\\\\right)^{2}-\\\\left(n+1\\\\right)H\\\\right)}{4\\\\exp\\\\!\\\\left(W\\\\left(n+1\\\\right)^{2}+\\\\left(n+1\\\\right)H\\\\right)}. |  |\n\nChoosing h0h\\_{0} and Œ¥\\\\delta such that\n\n|     |     |     |\n| --- | --- | --- |\n|  | max‚Å°(‚àíh0,Œ¥)=Œ©‚Äã(poly‚Äã(n,H,W,1/Œµ,ZP0/ZQ0))=Œ©‚Äã(poly‚Äã(n,H,W,1/Œµ))\\\\max\\\\!\\\\left(-h\\_{0},\\\\delta\\\\right)=\\\\Omega\\\\!\\\\left(\\\\textup{poly}\\\\!\\\\left(n,H,W,1/\\\\varepsilon,Z\\_{P\\_{0}}/{Z\\_{Q\\_{0}}}\\\\right)\\\\right)=\\\\Omega\\\\!\\\\left(\\\\textup{poly}\\\\!\\\\left(n,H,W,1/\\\\varepsilon\\\\right)\\\\right) |  |\n\n(note that ZP0/ZQ0Z\\_{P\\_{0}}/{Z\\_{Q\\_{0}}} can be bounded by some polynomial in n,H,W{n,H,W}), we may ensure the desired\n\n|     |     |     |\n| --- | --- | --- |\n|  | exp‚Å°(‚àíW‚Äã(n+1)2‚àí(n+1)‚ÄãH)4‚Äãexp‚Å°(W‚Äã(n+1)2+(n+1)‚ÄãH)‚â•2Œµ‚Äã(2‚Äãexp‚Å°(2‚Äãh0)+exp‚Å°(‚àíŒ¥)‚ÄãZP0ZQ0).\\\\frac{\\\\exp\\\\!\\\\left(-W\\\\left(n+1\\\\right)^{2}-\\\\left(n+1\\\\right)H\\\\right)}{4\\\\exp\\\\!\\\\left(W\\\\left(n+1\\\\right)^{2}+\\\\left(n+1\\\\right)H\\\\right)}\\\\geq\\\\frac{2}{\\\\varepsilon}\\\\left(2\\\\exp\\\\!\\\\left(2h\\_{0}\\\\right)+\\\\frac{\\\\exp\\\\left(-\\\\delta\\\\right)Z\\_{P\\_{0}}}{Z\\_{Q\\_{0}}}\\\\right). |  |\n\nAn identical to the above argument can be employed to get a multiplicative approximation of ùêèùê´P\\[xk=‚àí1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=-1\\\\right\\] (by letting h0‚Üí‚àûh\\_{0}\\\\to\\\\infty above).\n\nSince dTV‚Äã(P0,Q0)d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right) multiplicatively approximates ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\], this is an approximation preserving reduction, as any multiplicative approximation of dTV‚Äã(P0,Q0)d\\_{\\\\mathrm{TV}}\\\\!\\\\left(P\\_{0},{Q\\_{0}}\\\\right) is a multiplicative approximation of ùêèùê´P\\[xk=¬±1\\]\\\\operatorname\\*{\\\\bf Pr}\\_{P}\\\\!\\\\left\\[x\\_{k}=\\\\pm 1\\\\right\\].\n‚àé\n\n### 4.3 Proof of [TheoremÀú2]Theorem 2. ‚Ä£ 1.2 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\")\n\nTo prove [TheoremÀú2]Theorem 2. ‚Ä£ 1.2 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\") we shall require the following result of \\[ [JS93])\\].\n\n###### Theorem 9(\\[ [JS93])\\]).\n\nIf ùñ≠ùñØ‚äàùñ±ùñØ\\\\mathsf{NP}\\\\not\\\\subseteq\\\\mathsf{RP}, then there is no FPRAS that estimates the partition function of any Ising model.\n\nWe now turn to the proof of [TheoremÀú2]Theorem 2. ‚Ä£ 1.2 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\").\n\n###### Proof of [TheoremÀú2]Theorem 2. ‚Ä£ 1.2 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ 1 Introduction ‚Ä£ Computational Explorations of Total Variation Distance\").\n\nBy [PropositionÀú7]Proposition 7. ‚Ä£ 4.1 Reducing the Partition Function to Atomic Marginals ‚Ä£ 4 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\"), if there exists some FPRAS that estimates any atomic marginal of any Ising model, then there exists some FPRAS that estimates the partition function of any Ising model.\nBy [PropositionÀú8]Proposition 8. ‚Ä£ 4.2 Reducing the Atomic Marginals to TV Distance ‚Ä£ 4 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\"), if there exists some FPRAS that estimates the TV distance between Ising models, then there exists some FPRAS that estimates any atomic marginal of any Ising model.\nThat is, if there exists some FPRAS that estimates the TV distance between Ising models, then there exists some FPRAS that estimates the partition function of any Ising model.\nBy [TheoremÀú9]Theorem 9 ([JS93]). ‚Ä£ 4.3 Proof of TheoremÀú2 ‚Ä£ 4 Hardness of Approximating Total Variation Distance Between Ising Models ‚Ä£ Computational Explorations of Total Variation Distance\"), if ùñ≠ùñØ‚äàùñ±ùñØ\\\\mathsf{NP}\\\\not\\\\subseteq\\\\mathsf{RP}, then there is no FPRAS that estimates the partition function of any Ising model.\nThat is, if ùñ≠ùñØ‚äàùñ±ùñØ\\\\mathsf{NP}\\\\not\\\\subseteq\\\\mathsf{RP}, then there is no FPRAS that estimates the TV distance between Ising models.\nThis concludes the proof.\n‚àé",
      "citations": []
    },
    "5 Discussion": {
      "content": "We have shown how to efficiently check whether two mixtures of product distributions are equivalent or not.\nOne might wonder whether our ideas can be applied to check equivalence between mixtures of other, more expressive, kinds of distributions, such as Bayes nets.\n\nBayes nets constitute \\[ [Pea89])\\] a probabilistic graphical model, with numerous applications in machine learning and inference, that naturally generalize product distributions in that they allow for dependencies among different variables.\n\\[ [BGM+23])\\] showed that it is ùñ≠ùñØ\\\\mathsf{NP}-hard to decide whether the total variation distance between two Bayes nets PP and QQ is equal to 0 or not, so one cannot hope to extend our methods to testing equivalence between mixtures of Bayes net distributions (unless, of course, ùñØ=ùñ≠ùñØ\\\\mathsf{P}=\\\\mathsf{NP}.)\nCan our ideas be extended to testing equivalence between mixtures of some subclass of Bayes net distributions, such as Bayes net distributions whereby their underlying graph is a tree or has small treewidth?\n\nOur second result, namely the hardness of approximating the TV distance between Ising models, helps us further understand the intricacies of the Ising model and the consequences of complexity-theoretic conjectures such as ùñ≠ùñØ‚äàùñ±ùñØ\\\\mathsf{NP}\\\\not\\\\subseteq\\\\mathsf{RP}.\nCan we extend this complexity-theoretic hardness of approximation to other classes of probability distributions, such as factor graphs or general undirected probabilistic graphical models?",
      "citations": []
    }
  },
  "references": {
    "data": {},
    "key_map": {}
  }
}